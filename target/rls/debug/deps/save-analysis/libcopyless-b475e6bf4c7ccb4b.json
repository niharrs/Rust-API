{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","copyless","--edition=2018","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=b475e6bf4c7ccb4b","-C","extra-filename=-b475e6bf4c7ccb4b","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libcopyless-b475e6bf4c7ccb4b.rmeta"},"prelude":{"crate_id":{"name":"copyless","disambiguator":[12157951720267335438,15167130515986958211]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":0,"byte_end":230,"line_start":1,"line_end":11,"column_start":1,"column_end":9}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":133,"byte_end":146,"line_start":6,"line_end":6,"column_start":13,"column_end":26},"alias_span":null,"name":"BoxAllocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":148,"byte_end":157,"line_start":6,"line_end":6,"column_start":28,"column_end":37},"alias_span":null,"name":"BoxHelper","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":170,"byte_end":183,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"alias_span":null,"name":"VecAllocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":185,"byte_end":193,"line_start":7,"line_end":7,"column_start":26,"column_end":34},"alias_span":null,"name":"VecEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":59},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":195,"byte_end":204,"line_start":7,"line_end":7,"column_start":36,"column_end":45},"alias_span":null,"name":"VecHelper","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":0,"byte_end":230,"line_start":1,"line_end":11,"column_start":1,"column_end":9},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":11},{"krate":0,"index":35}],"decl_id":null,"docs":" Helper extensions of standard containers that allow memcopy-less operation.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"! Helper extensions of standard containers that allow memcopy-less operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/lib.rs","byte_start":24,"byte_end":103,"line_start":3,"line_end":3,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":386,"byte_end":399,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"BoxAllocation","qualname":"::boxed::BoxAllocation","value":"","parent":null,"children":[],"decl_id":null,"docs":" A typesafe helper that stores the allocated pointer without the data initialized.\n","sig":null,"attributes":[{"value":"/ A typesafe helper that stores the allocated pointer without the data initialized.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":289,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":787,"byte_end":791,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"init","qualname":"<BoxAllocation<T>>::init","value":"fn (self, value: T) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and writes the given value into the allocation.\n","sig":null,"attributes":[{"value":"/ Consumes self and writes the given value into the allocation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":635,"byte_end":700,"line_start":15,"line_end":15,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":705,"byte_end":722,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1425,"byte_end":1434,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"name":"BoxHelper","qualname":"::boxed::BoxHelper","value":"BoxHelper<T>","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" Helper trait for a `Box` type that allocates up-front.\n","sig":null,"attributes":[{"value":"/ Helper trait for a `Box` type that allocates up-front.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1356,"byte_end":1414,"line_start":44,"line_end":44,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1505,"byte_end":1510,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"alloc","qualname":"::boxed::BoxHelper::alloc","value":"fn () -> BoxAllocation<T>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Allocates the storage without providing any data.\n","sig":null,"attributes":[{"value":"/ Allocates the storage without providing any data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1444,"byte_end":1497,"line_start":46,"line_end":46,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2116,"byte_end":2129,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"VecAllocation","qualname":"::vec::VecAllocation","value":"VecAllocation {  }","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"decl_id":null,"docs":" A typesafe helper that separates new value construction from\n vector growing, allowing LLVM to ideally construct the element in place.\n","sig":null,"attributes":[{"value":"/ A typesafe helper that separates new value construction from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":1963,"byte_end":2027,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ vector growing, allowing LLVM to ideally construct the element in place.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2028,"byte_end":2104,"line_start":4,"line_end":4,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2497,"byte_end":2501,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"init","qualname":"<VecAllocation>::init","value":"fn (self, value: T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and writes the given value into the allocation.\n","sig":null,"attributes":[{"value":"/ Consumes self and writes the given value into the allocation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2228,"byte_end":2293,"line_start":11,"line_end":11,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2468,"byte_end":2485,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":49},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2858,"byte_end":2864,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::vec::VecEntry::Vacant","value":"VecEntry::Vacant(VecAllocation<'a, T>)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Entry has just been freshly allocated.\n","sig":null,"attributes":[{"value":"/ Entry has just been freshly allocated.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2811,"byte_end":2853,"line_start":27,"line_end":27,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":52},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2916,"byte_end":2924,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::vec::VecEntry::Occupied","value":"VecEntry::Occupied(&'a mut T)","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Existing entry.\n","sig":null,"attributes":[{"value":"/ Existing entry.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2892,"byte_end":2911,"line_start":29,"line_end":29,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":46},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2785,"byte_end":2793,"line_start":26,"line_end":26,"column_start":10,"column_end":18},"name":"VecEntry","qualname":"::vec::VecEntry","value":"VecEntry::{Vacant, Occupied}","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":52}],"decl_id":null,"docs":" An entry into a vector, similar to `std::collections::hash_map::Entry`.\n","sig":null,"attributes":[{"value":"/ An entry into a vector, similar to `std::collections::hash_map::Entry`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2700,"byte_end":2775,"line_start":25,"line_end":25,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3042,"byte_end":3045,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"set","qualname":"<VecEntry>::set","value":"fn (self, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for this entry.\n","sig":null,"attributes":[{"value":"/ Sets the value for this entry.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2974,"byte_end":3008,"line_start":34,"line_end":34,"column_start":5,"column_end":39}},{"value":"inline(always)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3013,"byte_end":3030,"line_start":35,"line_end":35,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":59},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3294,"byte_end":3303,"line_start":45,"line_end":45,"column_start":11,"column_end":20},"name":"VecHelper","qualname":"::vec::VecHelper","value":"VecHelper<T>","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" Helper trait for a `Vec` type that allocates up-front.\n","sig":null,"attributes":[{"value":"/ Helper trait for a `Vec` type that allocates up-front.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3225,"byte_end":3283,"line_start":44,"line_end":44,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3386,"byte_end":3391,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"alloc","qualname":"::vec::VecHelper::alloc","value":"fn (&mut self) -> VecAllocation<T>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Grows the vector by a single entry, returning the allocation.\n","sig":null,"attributes":[{"value":"/ Grows the vector by a single entry, returning the allocation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3313,"byte_end":3378,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3572,"byte_end":3577,"line_start":50,"line_end":50,"column_start":8,"column_end":13},"name":"entry","qualname":"::vec::VecHelper::entry","value":"fn (&mut self, index: usize) -> VecEntry<T>","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Either returns an existing element, or grows the vector by one.\n Doesn't expect indices to be higher than the current length.\n","sig":null,"attributes":[{"value":"/ Either returns an existing element, or grows the vector by one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3428,"byte_end":3495,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ Doesn't expect indices to be higher than the current length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3500,"byte_end":3564,"line_start":49,"line_end":49,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":612,"byte_end":625,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1095,"byte_end":1108,"line_start":31,"line_end":31,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1562,"byte_end":1565,"line_start":50,"line_end":50,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2201,"byte_end":2214,"line_start":10,"line_end":10,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2952,"byte_end":2960,"line_start":33,"line_end":33,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3647,"byte_end":3650,"line_start":53,"line_end":53,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":612,"byte_end":625,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1095,"byte_end":1108,"line_start":31,"line_end":31,"column_start":18,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":18},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/boxed.rs","byte_start":1562,"byte_end":1565,"line_start":50,"line_end":50,"column_start":26,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2201,"byte_end":2214,"line_start":10,"line_end":10,"column_start":13,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":2952,"byte_end":2960,"line_start":33,"line_end":33,"column_start":13,"column_end":21},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/copyless-0.1.4/src/vec.rs","byte_start":3647,"byte_end":3650,"line_start":53,"line_end":53,"column_start":26,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":59}}]}