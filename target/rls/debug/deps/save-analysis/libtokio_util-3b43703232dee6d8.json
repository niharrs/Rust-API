{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=3b43703232dee6d8","-C","extra-filename=-3b43703232dee6d8","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--extern","bytes=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libbytes-94d8fb0f50c48a9e.rmeta","--extern","futures_core=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_core-b48a9c1c3be203f5.rmeta","--extern","futures_sink=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_sink-8fb035f06d04bab9.rmeta","--extern","log=/Users/niharika/Downloads/webapp/target/rls/debug/deps/liblog-8c2d5fb978a9641b.rmeta","--extern","pin_project_lite=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libpin_project_lite-5c102f957b6ff865.rmeta","--extern","tokio=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio-1b4bba8565aaa5a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio_util-3b43703232dee6d8.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[13720864746666528342,10384836039936318516]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"<::pin_project_lite::pin_project macros>","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","num":15,"id":{"name":"bytes","disambiguator":[3234461312631938355,4652367375173356794]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":16,"id":{"name":"tokio","disambiguator":[11905398557701652019,15568126096425657729]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[3029737169759291666,9942484439807821310]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","num":18,"id":{"name":"futures_core","disambiguator":[7001366758905092501,11004721139566071535]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":19,"id":{"name":"mio","disambiguator":[11431926200436597215,5132575838010453719]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":20,"id":{"name":"net2","disambiguator":[9119776918725886975,8127876557544096078]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":21,"id":{"name":"libc","disambiguator":[12029950799728344980,14625873231468315695]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":23,"id":{"name":"iovec","disambiguator":[3662113506597968008,9055319988211572080]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":24,"id":{"name":"slab","disambiguator":[1409043506054454837,8744282326915100185]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","num":25,"id":{"name":"log","disambiguator":[16869437812774876011,6221816467677339912]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":26,"id":{"name":"mio_uds","disambiguator":[3651254062301955048,1922942977027289515]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":27,"id":{"name":"lazy_static","disambiguator":[2600192780033545957,15495159354165441647]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":28,"id":{"name":"fnv","disambiguator":[13771570177894503084,8684805612069036812]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":29,"id":{"name":"memchr","disambiguator":[251563329699221058,3480720099078396615]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":30,"id":{"name":"signal_hook_registry","disambiguator":[8401647546033715890,13156881933724841041]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","num":31,"id":{"name":"arc_swap","disambiguator":[11698414955222306728,13245458730901588314]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","num":32,"id":{"name":"futures_sink","disambiguator":[11960107017759325617,2870266462260277688]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723951,"byte_end":6723961,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724000,"byte_end":6724007,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724046,"byte_end":6724053,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724091,"byte_end":6724097,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724099,"byte_end":6724110,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724158,"byte_end":6724168,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724217,"byte_end":6724228,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724290,"byte_end":6724310,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724312,"byte_end":6724337,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724386,"byte_end":6724396,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724398,"byte_end":6724413,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"! [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"! semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":455}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723503,"byte_end":6723550,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723551,"byte_end":6723554,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723555,"byte_end":6723623,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723624,"byte_end":6723699,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723700,"byte_end":6723748,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723749,"byte_end":6723752,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723753,"byte_end":6723792,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723793,"byte_end":6723834,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"! [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723835,"byte_end":6723872,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"! [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6723873,"byte_end":6723905,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725690,"byte_end":6725700,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724542,"byte_end":6724627,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724628,"byte_end":6724631,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724632,"byte_end":6724670,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724671,"byte_end":6724709,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724710,"byte_end":6724713,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724714,"byte_end":6724727,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724728,"byte_end":6724731,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724732,"byte_end":6724813,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724814,"byte_end":6724817,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724818,"byte_end":6724857,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724858,"byte_end":6724891,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724892,"byte_end":6724921,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724922,"byte_end":6724925,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724926,"byte_end":6724933,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724934,"byte_end":6724952,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724953,"byte_end":6724983,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6724984,"byte_end":6725008,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725009,"byte_end":6725016,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725017,"byte_end":6725046,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725047,"byte_end":6725099,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725100,"byte_end":6725103,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725104,"byte_end":6725122,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725123,"byte_end":6725140,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725141,"byte_end":6725221,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725222,"byte_end":6725256,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725257,"byte_end":6725310,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725311,"byte_end":6725322,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725323,"byte_end":6725330,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725331,"byte_end":6725336,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725337,"byte_end":6725375,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725376,"byte_end":6725429,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725430,"byte_end":6725488,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725489,"byte_end":6725568,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725569,"byte_end":6725581,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725582,"byte_end":6725589,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725590,"byte_end":6725597,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725598,"byte_end":6725601,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725802,"byte_end":6725805,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725729,"byte_end":6725790,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727117,"byte_end":6727124,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726520,"byte_end":6726555,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726556,"byte_end":6726559,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726560,"byte_end":6726629,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726630,"byte_end":6726709,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726710,"byte_end":6726782,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726783,"byte_end":6726807,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726808,"byte_end":6726811,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726812,"byte_end":6726880,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726881,"byte_end":6726958,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6726959,"byte_end":6727020,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727021,"byte_end":6727024,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727025,"byte_end":6727061,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727062,"byte_end":6727106,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727172,"byte_end":6727176,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727131,"byte_end":6727162,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727942,"byte_end":6727947,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727183,"byte_end":6727235,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727240,"byte_end":6727243,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727248,"byte_end":6727317,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727322,"byte_end":6727392,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727397,"byte_end":6727443,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727448,"byte_end":6727451,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727456,"byte_end":6727532,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727537,"byte_end":6727612,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727617,"byte_end":6727692,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727697,"byte_end":6727737,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727742,"byte_end":6727745,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727750,"byte_end":6727824,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727829,"byte_end":6727875,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727880,"byte_end":6727883,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727888,"byte_end":6727932,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730883,"byte_end":6730889,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6727971,"byte_end":6728036,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728041,"byte_end":6728044,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728049,"byte_end":6728123,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728128,"byte_end":6728200,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728205,"byte_end":6728278,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728283,"byte_end":6728326,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728331,"byte_end":6728334,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728339,"byte_end":6728412,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728417,"byte_end":6728480,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728485,"byte_end":6728560,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728565,"byte_end":6728640,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728645,"byte_end":6728668,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728673,"byte_end":6728676,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728681,"byte_end":6728753,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728758,"byte_end":6728832,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728837,"byte_end":6728907,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728912,"byte_end":6728915,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728920,"byte_end":6728988,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6728993,"byte_end":6729064,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729069,"byte_end":6729149,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729154,"byte_end":6729166,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729171,"byte_end":6729174,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729179,"byte_end":6729249,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729254,"byte_end":6729329,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729334,"byte_end":6729371,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729376,"byte_end":6729379,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729384,"byte_end":6729420,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729425,"byte_end":6729469,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729474,"byte_end":6729477,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729482,"byte_end":6729505,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729510,"byte_end":6729513,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729518,"byte_end":6729592,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729597,"byte_end":6729671,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729676,"byte_end":6729729,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729734,"byte_end":6729737,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729742,"byte_end":6729813,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729818,"byte_end":6729888,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729893,"byte_end":6729909,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729914,"byte_end":6729917,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729922,"byte_end":6729935,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729940,"byte_end":6729958,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729963,"byte_end":6729968,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6729973,"byte_end":6729999,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730004,"byte_end":6730041,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730046,"byte_end":6730051,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730056,"byte_end":6730077,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730082,"byte_end":6730087,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730092,"byte_end":6730122,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730127,"byte_end":6730141,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730146,"byte_end":6730177,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730182,"byte_end":6730215,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730220,"byte_end":6730223,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730228,"byte_end":6730321,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730326,"byte_end":6730344,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730349,"byte_end":6730352,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730357,"byte_end":6730429,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730434,"byte_end":6730494,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730499,"byte_end":6730551,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730556,"byte_end":6730618,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730623,"byte_end":6730690,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730695,"byte_end":6730698,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730703,"byte_end":6730731,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730736,"byte_end":6730745,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730750,"byte_end":6730755,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730760,"byte_end":6730767,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730772,"byte_end":6730775,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730780,"byte_end":6730849,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730854,"byte_end":6730875,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731748,"byte_end":6731758,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6730970,"byte_end":6731042,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731047,"byte_end":6731096,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731101,"byte_end":6731104,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731109,"byte_end":6731177,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731182,"byte_end":6731249,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731254,"byte_end":6731322,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731327,"byte_end":6731375,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731380,"byte_end":6731383,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731388,"byte_end":6731456,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731461,"byte_end":6731536,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731541,"byte_end":6731616,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731621,"byte_end":6731693,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6731698,"byte_end":6731740,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733367,"byte_end":6733373,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732176,"byte_end":6732256,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732261,"byte_end":6732337,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732342,"byte_end":6732345,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732350,"byte_end":6732425,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732430,"byte_end":6732500,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732505,"byte_end":6732576,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732581,"byte_end":6732653,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732658,"byte_end":6732716,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732721,"byte_end":6732724,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732729,"byte_end":6732798,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732803,"byte_end":6732878,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732883,"byte_end":6732959,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732964,"byte_end":6732986,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732991,"byte_end":6732994,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6732999,"byte_end":6733072,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733077,"byte_end":6733150,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733155,"byte_end":6733231,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733236,"byte_end":6733239,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733244,"byte_end":6733281,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733286,"byte_end":6733318,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/decoder.rs","byte_start":6733323,"byte_end":6733359,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733707,"byte_end":6733714,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733552,"byte_end":6733624,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733625,"byte_end":6733645,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733646,"byte_end":6733649,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733650,"byte_end":6733696,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733979,"byte_end":6733984,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733727,"byte_end":6733759,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733764,"byte_end":6733767,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733772,"byte_end":6733849,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733854,"byte_end":6733910,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733915,"byte_end":6733918,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6733923,"byte_end":6733969,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734335,"byte_end":6734341,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734008,"byte_end":6734053,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734058,"byte_end":6734061,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734066,"byte_end":6734140,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734145,"byte_end":6734225,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734230,"byte_end":6734268,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734273,"byte_end":6734276,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/encoder.rs","byte_start":6734281,"byte_end":6734327,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6735490,"byte_end":6735496,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6735932,"byte_end":6735934,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6735945,"byte_end":6735950,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737740,"byte_end":6737743,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736398,"byte_end":6736478,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736483,"byte_end":6736564,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736569,"byte_end":6736572,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736577,"byte_end":6736652,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736657,"byte_end":6736727,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736732,"byte_end":6736801,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736806,"byte_end":6736878,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736883,"byte_end":6736941,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736946,"byte_end":6736949,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736954,"byte_end":6737025,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737030,"byte_end":6737107,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737112,"byte_end":6737188,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737193,"byte_end":6737215,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737220,"byte_end":6737223,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737228,"byte_end":6737301,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737306,"byte_end":6737379,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737384,"byte_end":6737460,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737465,"byte_end":6737468,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737473,"byte_end":6737510,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737515,"byte_end":6737547,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737552,"byte_end":6737589,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737594,"byte_end":6737632,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737637,"byte_end":6737728,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739291,"byte_end":6739304,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn (inner: T, codec: U, capacity: usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737895,"byte_end":6737975,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6737980,"byte_end":6738061,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738066,"byte_end":6738115,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738120,"byte_end":6738123,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738128,"byte_end":6738203,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738208,"byte_end":6738278,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738283,"byte_end":6738352,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738357,"byte_end":6738429,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738434,"byte_end":6738492,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738497,"byte_end":6738500,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738505,"byte_end":6738576,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738581,"byte_end":6738658,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738663,"byte_end":6738739,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738744,"byte_end":6738766,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738771,"byte_end":6738774,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738779,"byte_end":6738852,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738857,"byte_end":6738930,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6738935,"byte_end":6739011,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739016,"byte_end":6739019,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739024,"byte_end":6739061,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739066,"byte_end":6739098,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739103,"byte_end":6739140,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739145,"byte_end":6739183,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739188,"byte_end":6739279,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741173,"byte_end":6741183,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739595,"byte_end":6739675,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739680,"byte_end":6739761,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739766,"byte_end":6739769,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739774,"byte_end":6739849,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739854,"byte_end":6739924,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739929,"byte_end":6740000,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740005,"byte_end":6740077,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740082,"byte_end":6740140,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740145,"byte_end":6740148,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740153,"byte_end":6740224,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740229,"byte_end":6740306,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740311,"byte_end":6740387,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740392,"byte_end":6740414,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740419,"byte_end":6740422,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740427,"byte_end":6740506,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740511,"byte_end":6740588,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740593,"byte_end":6740596,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740601,"byte_end":6740674,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740679,"byte_end":6740752,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740757,"byte_end":6740833,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740838,"byte_end":6740841,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740846,"byte_end":6740883,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740888,"byte_end":6740920,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740925,"byte_end":6740963,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6740968,"byte_end":6741006,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741011,"byte_end":6741065,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741070,"byte_end":6741161,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741872,"byte_end":6741879,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741589,"byte_end":6741652,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741657,"byte_end":6741670,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741675,"byte_end":6741678,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741683,"byte_end":6741758,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741763,"byte_end":6741833,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741838,"byte_end":6741860,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742240,"byte_end":6742247,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6741949,"byte_end":6742020,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742025,"byte_end":6742038,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742043,"byte_end":6742046,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742051,"byte_end":6742126,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742131,"byte_end":6742201,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742206,"byte_end":6742228,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742580,"byte_end":6742585,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742329,"byte_end":6742387,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742392,"byte_end":6742405,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742410,"byte_end":6742413,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742418,"byte_end":6742492,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742497,"byte_end":6742568,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742917,"byte_end":6742926,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742658,"byte_end":6742724,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742729,"byte_end":6742742,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742747,"byte_end":6742750,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742755,"byte_end":6742829,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6742834,"byte_end":6742905,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743066,"byte_end":6743077,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743011,"byte_end":6743054,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743404,"byte_end":6743414,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743139,"byte_end":6743202,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743207,"byte_end":6743210,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743215,"byte_end":6743290,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743295,"byte_end":6743365,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743370,"byte_end":6743392,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743809,"byte_end":6743819,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743487,"byte_end":6743561,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743566,"byte_end":6743607,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743612,"byte_end":6743615,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743620,"byte_end":6743695,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743700,"byte_end":6743770,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6743775,"byte_end":6743797,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748181,"byte_end":6748192,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747906,"byte_end":6747977,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747978,"byte_end":6748050,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748051,"byte_end":6748111,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748112,"byte_end":6748115,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748116,"byte_end":6748152,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748278,"byte_end":6748280,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748205,"byte_end":6748269,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748312,"byte_end":6748317,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748290,"byte_end":6748303,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748382,"byte_end":6748390,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748327,"byte_end":6748373,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748477,"byte_end":6748486,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748407,"byte_end":6748468,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748719,"byte_end":6748722,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn <I> (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748667,"byte_end":6748707,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6749451,"byte_end":6749461,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6749919,"byte_end":6749922,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6749851,"byte_end":6749907,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750239,"byte_end":6750252,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn (inner: T, decoder: D, capacity: usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750123,"byte_end":6750205,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750210,"byte_end":6750227,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750895,"byte_end":6750902,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750608,"byte_end":6750671,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750676,"byte_end":6750693,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750698,"byte_end":6750701,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750706,"byte_end":6750781,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750786,"byte_end":6750856,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750861,"byte_end":6750883,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751253,"byte_end":6751260,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750958,"byte_end":6751029,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751034,"byte_end":6751051,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751056,"byte_end":6751059,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751064,"byte_end":6751139,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751144,"byte_end":6751214,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751219,"byte_end":6751241,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751597,"byte_end":6751607,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751328,"byte_end":6751395,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751400,"byte_end":6751403,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751408,"byte_end":6751483,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751488,"byte_end":6751558,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751563,"byte_end":6751585,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751722,"byte_end":6751729,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751660,"byte_end":6751710,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751858,"byte_end":6751869,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751788,"byte_end":6751846,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751995,"byte_end":6752006,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6751940,"byte_end":6751983,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6757922,"byte_end":6757933,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758357,"byte_end":6758360,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758288,"byte_end":6758345,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758885,"byte_end":6758892,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758597,"byte_end":6758660,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758665,"byte_end":6758683,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758688,"byte_end":6758691,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758696,"byte_end":6758771,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758776,"byte_end":6758846,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758851,"byte_end":6758873,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759244,"byte_end":6759251,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758948,"byte_end":6759019,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759024,"byte_end":6759042,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759047,"byte_end":6759050,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759055,"byte_end":6759130,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759135,"byte_end":6759205,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759210,"byte_end":6759232,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759589,"byte_end":6759599,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759319,"byte_end":6759387,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759392,"byte_end":6759395,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759400,"byte_end":6759475,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759480,"byte_end":6759550,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759555,"byte_end":6759577,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759714,"byte_end":6759721,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759652,"byte_end":6759702,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759850,"byte_end":6759861,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6759780,"byte_end":6759838,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":498},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":505},{"krate":0,"index":370},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":521},{"krate":0,"index":372},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766196,"byte_end":6766248,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766249,"byte_end":6766252,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766253,"byte_end":6766323,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766324,"byte_end":6766382,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766383,"byte_end":6766455,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766456,"byte_end":6766526,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766527,"byte_end":6766594,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766595,"byte_end":6766598,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766599,"byte_end":6766620,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766621,"byte_end":6766624,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766625,"byte_end":6766700,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766701,"byte_end":6766772,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766773,"byte_end":6766844,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766845,"byte_end":6766915,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766916,"byte_end":6766956,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766957,"byte_end":6766960,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766961,"byte_end":6766968,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6766969,"byte_end":6767012,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767013,"byte_end":6767071,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767072,"byte_end":6767075,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767076,"byte_end":6767131,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767132,"byte_end":6767174,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767175,"byte_end":6767180,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767181,"byte_end":6767233,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767234,"byte_end":6767239,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767240,"byte_end":6767262,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767263,"byte_end":6767270,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767271,"byte_end":6767274,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767275,"byte_end":6767347,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767348,"byte_end":6767419,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767420,"byte_end":6767439,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767440,"byte_end":6767443,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767444,"byte_end":6767455,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767456,"byte_end":6767505,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767506,"byte_end":6767555,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767556,"byte_end":6767605,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767606,"byte_end":6767613,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767614,"byte_end":6767617,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767618,"byte_end":6767656,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767657,"byte_end":6767660,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767661,"byte_end":6767668,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767669,"byte_end":6767695,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767696,"byte_end":6767754,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767755,"byte_end":6767758,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767759,"byte_end":6767784,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767785,"byte_end":6767806,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767807,"byte_end":6767810,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767811,"byte_end":6767887,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767888,"byte_end":6767897,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767898,"byte_end":6767940,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767941,"byte_end":6767946,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6767947,"byte_end":6768020,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768021,"byte_end":6768068,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768069,"byte_end":6768072,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768073,"byte_end":6768110,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768111,"byte_end":6768125,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768126,"byte_end":6768131,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768132,"byte_end":6768139,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768140,"byte_end":6768143,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768144,"byte_end":6768186,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768187,"byte_end":6768190,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768191,"byte_end":6768202,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768203,"byte_end":6768242,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768243,"byte_end":6768282,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768283,"byte_end":6768322,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768323,"byte_end":6768330,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768331,"byte_end":6768334,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768335,"byte_end":6768349,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768350,"byte_end":6768353,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768354,"byte_end":6768429,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768430,"byte_end":6768503,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768504,"byte_end":6768570,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768571,"byte_end":6768640,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768641,"byte_end":6768706,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768707,"byte_end":6768710,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768711,"byte_end":6768727,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768728,"byte_end":6768731,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768732,"byte_end":6768808,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768809,"byte_end":6768850,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768851,"byte_end":6768854,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768855,"byte_end":6768862,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768863,"byte_end":6768894,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768895,"byte_end":6768945,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768946,"byte_end":6768987,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6768988,"byte_end":6769023,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769024,"byte_end":6769072,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769073,"byte_end":6769104,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769105,"byte_end":6769153,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769154,"byte_end":6769203,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769204,"byte_end":6769226,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769227,"byte_end":6769234,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769235,"byte_end":6769257,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769258,"byte_end":6769265,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769266,"byte_end":6769269,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769270,"byte_end":6769318,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769319,"byte_end":6769322,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769323,"byte_end":6769334,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769335,"byte_end":6769387,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769388,"byte_end":6769453,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769454,"byte_end":6769519,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769520,"byte_end":6769585,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769586,"byte_end":6769593,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769594,"byte_end":6769597,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769598,"byte_end":6769674,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769675,"byte_end":6769749,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769750,"byte_end":6769822,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769823,"byte_end":6769899,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769900,"byte_end":6769942,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769943,"byte_end":6769946,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769947,"byte_end":6769963,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769964,"byte_end":6769967,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6769968,"byte_end":6770043,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770044,"byte_end":6770085,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770086,"byte_end":6770089,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770090,"byte_end":6770097,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770098,"byte_end":6770129,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770130,"byte_end":6770180,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770181,"byte_end":6770222,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770223,"byte_end":6770258,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770259,"byte_end":6770307,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770308,"byte_end":6770339,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770340,"byte_end":6770388,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770389,"byte_end":6770448,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770449,"byte_end":6770471,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770472,"byte_end":6770479,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770480,"byte_end":6770502,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770503,"byte_end":6770510,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770511,"byte_end":6770514,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770515,"byte_end":6770563,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770564,"byte_end":6770567,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770568,"byte_end":6770579,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770580,"byte_end":6770629,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770630,"byte_end":6770684,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770685,"byte_end":6770739,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770740,"byte_end":6770794,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770795,"byte_end":6770802,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770803,"byte_end":6770806,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770807,"byte_end":6770880,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770881,"byte_end":6770948,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770949,"byte_end":6770952,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770953,"byte_end":6770969,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770970,"byte_end":6770973,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6770974,"byte_end":6771050,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771051,"byte_end":6771123,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771124,"byte_end":6771163,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771164,"byte_end":6771167,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771168,"byte_end":6771175,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771176,"byte_end":6771207,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771208,"byte_end":6771258,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771259,"byte_end":6771300,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771301,"byte_end":6771336,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771337,"byte_end":6771385,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771386,"byte_end":6771417,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771418,"byte_end":6771465,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771466,"byte_end":6771486,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771487,"byte_end":6771509,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771510,"byte_end":6771517,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771518,"byte_end":6771540,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771541,"byte_end":6771548,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771549,"byte_end":6771552,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771553,"byte_end":6771601,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771602,"byte_end":6771605,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771606,"byte_end":6771617,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771618,"byte_end":6771670,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771671,"byte_end":6771736,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771737,"byte_end":6771802,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771803,"byte_end":6771868,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771869,"byte_end":6771876,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771877,"byte_end":6771880,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771881,"byte_end":6771953,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6771954,"byte_end":6772029,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772030,"byte_end":6772102,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772103,"byte_end":6772179,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772180,"byte_end":6772253,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772254,"byte_end":6772257,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772258,"byte_end":6772274,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772275,"byte_end":6772278,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772279,"byte_end":6772353,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772354,"byte_end":6772421,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772422,"byte_end":6772425,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772426,"byte_end":6772433,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772434,"byte_end":6772465,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772466,"byte_end":6772516,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772517,"byte_end":6772558,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772559,"byte_end":6772594,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772595,"byte_end":6772643,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772644,"byte_end":6772675,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772676,"byte_end":6772724,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772725,"byte_end":6772745,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772746,"byte_end":6772768,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772769,"byte_end":6772776,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772777,"byte_end":6772799,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772800,"byte_end":6772807,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772808,"byte_end":6772811,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772812,"byte_end":6772860,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772861,"byte_end":6772864,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772865,"byte_end":6772876,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772877,"byte_end":6772903,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772904,"byte_end":6772949,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772950,"byte_end":6772995,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6772996,"byte_end":6773041,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773042,"byte_end":6773045,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773046,"byte_end":6773074,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773075,"byte_end":6773120,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773121,"byte_end":6773166,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773167,"byte_end":6773212,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773213,"byte_end":6773220,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773221,"byte_end":6773224,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773225,"byte_end":6773297,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773298,"byte_end":6773374,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773375,"byte_end":6773445,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773446,"byte_end":6773515,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773516,"byte_end":6773553,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773554,"byte_end":6773557,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773558,"byte_end":6773632,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773633,"byte_end":6773687,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773688,"byte_end":6773691,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773692,"byte_end":6773708,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773709,"byte_end":6773712,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773713,"byte_end":6773786,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773787,"byte_end":6773863,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773864,"byte_end":6773938,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773939,"byte_end":6773952,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773953,"byte_end":6773956,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773957,"byte_end":6773964,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773965,"byte_end":6773996,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6773997,"byte_end":6774047,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774048,"byte_end":6774089,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774090,"byte_end":6774125,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774126,"byte_end":6774175,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774176,"byte_end":6774207,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774208,"byte_end":6774256,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774257,"byte_end":6774301,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774302,"byte_end":6774324,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774325,"byte_end":6774332,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774333,"byte_end":6774355,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774356,"byte_end":6774363,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774364,"byte_end":6774367,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774368,"byte_end":6774416,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774417,"byte_end":6774420,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774421,"byte_end":6774432,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774433,"byte_end":6774459,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774460,"byte_end":6774510,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774511,"byte_end":6774561,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774562,"byte_end":6774612,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774613,"byte_end":6774616,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774617,"byte_end":6774637,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774638,"byte_end":6774668,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774669,"byte_end":6774699,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774700,"byte_end":6774730,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774731,"byte_end":6774738,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774739,"byte_end":6774742,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774743,"byte_end":6774816,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774817,"byte_end":6774892,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774893,"byte_end":6774965,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6774966,"byte_end":6775004,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775005,"byte_end":6775008,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775009,"byte_end":6775083,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775084,"byte_end":6775160,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775161,"byte_end":6775234,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775235,"byte_end":6775263,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775264,"byte_end":6775267,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775268,"byte_end":6775284,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775285,"byte_end":6775288,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775289,"byte_end":6775362,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775363,"byte_end":6775439,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775440,"byte_end":6775514,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775515,"byte_end":6775587,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775588,"byte_end":6775599,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775600,"byte_end":6775603,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775604,"byte_end":6775611,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775612,"byte_end":6775643,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775644,"byte_end":6775694,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775695,"byte_end":6775736,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775737,"byte_end":6775772,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775773,"byte_end":6775822,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775823,"byte_end":6775854,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775855,"byte_end":6775920,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775921,"byte_end":6775941,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775942,"byte_end":6775964,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775965,"byte_end":6775972,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775973,"byte_end":6775980,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775981,"byte_end":6775984,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6775985,"byte_end":6776033,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776034,"byte_end":6776037,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776038,"byte_end":6776049,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776050,"byte_end":6776076,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776077,"byte_end":6776127,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776128,"byte_end":6776178,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776179,"byte_end":6776229,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776230,"byte_end":6776233,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776234,"byte_end":6776254,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776255,"byte_end":6776285,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776286,"byte_end":6776316,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776317,"byte_end":6776347,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776348,"byte_end":6776355,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776356,"byte_end":6776359,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776360,"byte_end":6776433,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776434,"byte_end":6776508,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776509,"byte_end":6776583,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776584,"byte_end":6776657,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776658,"byte_end":6776734,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776735,"byte_end":6776768,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776769,"byte_end":6776772,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776773,"byte_end":6776787,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776788,"byte_end":6776791,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776792,"byte_end":6776867,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776868,"byte_end":6776940,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6776941,"byte_end":6777009,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777010,"byte_end":6777086,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777087,"byte_end":6777128,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777129,"byte_end":6777132,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777133,"byte_end":6777203,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777204,"byte_end":6777222,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777223,"byte_end":6777226,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777227,"byte_end":6777234,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777235,"byte_end":6777267,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777268,"byte_end":6777318,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777319,"byte_end":6777363,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777364,"byte_end":6777377,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777378,"byte_end":6777413,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777414,"byte_end":6777445,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777446,"byte_end":6777469,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777470,"byte_end":6777477,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777478,"byte_end":6777500,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777501,"byte_end":6777508,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777509,"byte_end":6777512,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777513,"byte_end":6777563,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777564,"byte_end":6777567,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777568,"byte_end":6777579,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777580,"byte_end":6777613,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777614,"byte_end":6777647,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777648,"byte_end":6777681,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777682,"byte_end":6777689,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777690,"byte_end":6777693,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777694,"byte_end":6777774,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777775,"byte_end":6777817,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777818,"byte_end":6777862,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777863,"byte_end":6777908,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777909,"byte_end":6777956,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777957,"byte_end":6777995,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6777996,"byte_end":6778066,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778628,"byte_end":6778635,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778310,"byte_end":6778365,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778366,"byte_end":6778369,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778370,"byte_end":6778445,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778446,"byte_end":6778526,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6778527,"byte_end":6778586,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779306,"byte_end":6779331,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779221,"byte_end":6779294,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779676,"byte_end":6779696,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779352,"byte_end":6779426,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779427,"byte_end":6779430,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779431,"byte_end":6779510,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779511,"byte_end":6779554,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779555,"byte_end":6779558,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779559,"byte_end":6779612,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779613,"byte_end":6779616,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779617,"byte_end":6779647,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780040,"byte_end":6780043,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779949,"byte_end":6780028,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780270,"byte_end":6780277,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780167,"byte_end":6780242,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780247,"byte_end":6780258,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780499,"byte_end":6780515,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780327,"byte_end":6780368,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780373,"byte_end":6780376,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780381,"byte_end":6780454,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780459,"byte_end":6780487,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780936,"byte_end":6780956,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780580,"byte_end":6780614,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780619,"byte_end":6780622,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780627,"byte_end":6780697,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780702,"byte_end":6780777,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780782,"byte_end":6780854,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6780859,"byte_end":6780924,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786232,"byte_end":6786235,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785690,"byte_end":6785765,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785770,"byte_end":6785781,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785786,"byte_end":6785789,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785794,"byte_end":6785808,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785813,"byte_end":6785816,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785821,"byte_end":6785828,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785833,"byte_end":6785864,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785869,"byte_end":6785917,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785922,"byte_end":6785925,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785930,"byte_end":6785971,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785976,"byte_end":6786011,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786016,"byte_end":6786047,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786052,"byte_end":6786083,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786088,"byte_end":6786117,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786122,"byte_end":6786142,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786147,"byte_end":6786169,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786174,"byte_end":6786181,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786186,"byte_end":6786208,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786213,"byte_end":6786220,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787420,"byte_end":6787430,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786899,"byte_end":6786948,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786953,"byte_end":6786956,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786961,"byte_end":6786993,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6786998,"byte_end":6787001,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787006,"byte_end":6787074,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787079,"byte_end":6787082,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787087,"byte_end":6787101,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787106,"byte_end":6787109,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787114,"byte_end":6787121,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787126,"byte_end":6787157,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787162,"byte_end":6787210,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787215,"byte_end":6787218,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787223,"byte_end":6787264,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787269,"byte_end":6787304,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787309,"byte_end":6787330,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787335,"byte_end":6787357,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787362,"byte_end":6787369,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787374,"byte_end":6787396,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787401,"byte_end":6787408,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788062,"byte_end":6788075,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787529,"byte_end":6787581,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787586,"byte_end":6787589,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787594,"byte_end":6787632,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787637,"byte_end":6787640,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787645,"byte_end":6787713,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787718,"byte_end":6787721,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787726,"byte_end":6787740,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787745,"byte_end":6787748,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787753,"byte_end":6787760,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787765,"byte_end":6787796,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787801,"byte_end":6787849,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787854,"byte_end":6787857,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787862,"byte_end":6787903,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787908,"byte_end":6787943,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787948,"byte_end":6787972,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6787977,"byte_end":6787999,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788004,"byte_end":6788011,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788016,"byte_end":6788038,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788043,"byte_end":6788050,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788708,"byte_end":6788721,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788175,"byte_end":6788227,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788232,"byte_end":6788235,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788240,"byte_end":6788278,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788283,"byte_end":6788286,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788291,"byte_end":6788359,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788364,"byte_end":6788367,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788372,"byte_end":6788386,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788391,"byte_end":6788394,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788399,"byte_end":6788406,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788411,"byte_end":6788442,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788447,"byte_end":6788495,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788500,"byte_end":6788503,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788508,"byte_end":6788549,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788554,"byte_end":6788589,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788594,"byte_end":6788618,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788623,"byte_end":6788645,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788650,"byte_end":6788657,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788662,"byte_end":6788684,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788689,"byte_end":6788696,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789802,"byte_end":6789818,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788890,"byte_end":6788919,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788924,"byte_end":6788927,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6788932,"byte_end":6789004,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789009,"byte_end":6789034,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789039,"byte_end":6789042,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789047,"byte_end":6789119,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789124,"byte_end":6789193,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789198,"byte_end":6789271,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789276,"byte_end":6789288,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789293,"byte_end":6789296,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789301,"byte_end":6789376,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789381,"byte_end":6789442,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789447,"byte_end":6789450,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789455,"byte_end":6789469,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789474,"byte_end":6789477,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789482,"byte_end":6789489,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789494,"byte_end":6789525,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789530,"byte_end":6789578,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789583,"byte_end":6789586,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789591,"byte_end":6789632,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789637,"byte_end":6789672,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789677,"byte_end":6789712,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789717,"byte_end":6789739,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789744,"byte_end":6789751,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789756,"byte_end":6789778,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789783,"byte_end":6789790,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790479,"byte_end":6790498,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789915,"byte_end":6789978,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789983,"byte_end":6789986,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6789991,"byte_end":6790042,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790047,"byte_end":6790050,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790055,"byte_end":6790123,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790128,"byte_end":6790131,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790136,"byte_end":6790150,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790155,"byte_end":6790158,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790163,"byte_end":6790170,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790175,"byte_end":6790206,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790211,"byte_end":6790259,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790264,"byte_end":6790267,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790272,"byte_end":6790313,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790318,"byte_end":6790353,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790358,"byte_end":6790389,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790394,"byte_end":6790416,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790421,"byte_end":6790428,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790433,"byte_end":6790455,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790460,"byte_end":6790467,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791157,"byte_end":6791176,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790667,"byte_end":6790733,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790738,"byte_end":6790741,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790746,"byte_end":6790801,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790806,"byte_end":6790809,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790814,"byte_end":6790828,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790833,"byte_end":6790836,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790841,"byte_end":6790848,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790853,"byte_end":6790884,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790889,"byte_end":6790937,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790942,"byte_end":6790945,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790950,"byte_end":6790991,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6790996,"byte_end":6791031,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791036,"byte_end":6791067,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791072,"byte_end":6791094,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791099,"byte_end":6791106,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791111,"byte_end":6791133,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791138,"byte_end":6791145,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791730,"byte_end":6791747,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791279,"byte_end":6791352,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791357,"byte_end":6791375,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791380,"byte_end":6791383,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791388,"byte_end":6791402,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791407,"byte_end":6791410,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791415,"byte_end":6791422,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791427,"byte_end":6791458,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791463,"byte_end":6791511,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791516,"byte_end":6791519,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791524,"byte_end":6791565,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791570,"byte_end":6791605,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791610,"byte_end":6791640,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791645,"byte_end":6791667,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791672,"byte_end":6791679,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791684,"byte_end":6791706,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791711,"byte_end":6791718,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792397,"byte_end":6792405,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791848,"byte_end":6791911,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791916,"byte_end":6791919,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791924,"byte_end":6791985,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791990,"byte_end":6791993,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6791998,"byte_end":6792052,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792057,"byte_end":6792060,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792065,"byte_end":6792079,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792084,"byte_end":6792087,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792092,"byte_end":6792099,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792104,"byte_end":6792135,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792140,"byte_end":6792188,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792193,"byte_end":6792196,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792201,"byte_end":6792242,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792247,"byte_end":6792282,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792287,"byte_end":6792307,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792312,"byte_end":6792334,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792339,"byte_end":6792346,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792351,"byte_end":6792373,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792378,"byte_end":6792385,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792925,"byte_end":6792934,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792503,"byte_end":6792566,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792571,"byte_end":6792574,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792579,"byte_end":6792593,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792598,"byte_end":6792601,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792606,"byte_end":6792613,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792618,"byte_end":6792666,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792671,"byte_end":6792692,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792697,"byte_end":6792732,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792737,"byte_end":6792768,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792773,"byte_end":6792804,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792809,"byte_end":6792838,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792843,"byte_end":6792863,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792868,"byte_end":6792889,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792894,"byte_end":6792901,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6792906,"byte_end":6792913,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793590,"byte_end":6793598,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793086,"byte_end":6793139,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793144,"byte_end":6793147,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793152,"byte_end":6793166,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793171,"byte_end":6793174,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793179,"byte_end":6793186,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793191,"byte_end":6793222,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793227,"byte_end":6793275,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793280,"byte_end":6793283,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793288,"byte_end":6793329,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793334,"byte_end":6793369,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793374,"byte_end":6793405,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793410,"byte_end":6793441,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793446,"byte_end":6793475,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793480,"byte_end":6793500,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793505,"byte_end":6793527,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793532,"byte_end":6793539,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793544,"byte_end":6793566,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793571,"byte_end":6793578,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794171,"byte_end":6794180,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793762,"byte_end":6793816,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793821,"byte_end":6793824,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793829,"byte_end":6793843,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793848,"byte_end":6793851,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793856,"byte_end":6793863,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793868,"byte_end":6793900,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793905,"byte_end":6793955,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6793960,"byte_end":6794004,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794009,"byte_end":6794044,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794049,"byte_end":6794080,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794085,"byte_end":6794108,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794113,"byte_end":6794120,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794125,"byte_end":6794147,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794152,"byte_end":6794159,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794789,"byte_end":6794799,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794341,"byte_end":6794390,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794395,"byte_end":6794398,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794403,"byte_end":6794417,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794422,"byte_end":6794425,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794430,"byte_end":6794437,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794442,"byte_end":6794487,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794492,"byte_end":6794542,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794547,"byte_end":6794603,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794608,"byte_end":6794621,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794626,"byte_end":6794661,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794666,"byte_end":6794697,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794702,"byte_end":6794726,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794731,"byte_end":6794738,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794743,"byte_end":6794765,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6794770,"byte_end":6794777,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796178,"byte_end":6796188,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6795935,"byte_end":6796022,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796023,"byte_end":6796026,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796027,"byte_end":6796065,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796066,"byte_end":6796104,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797288,"byte_end":6797291,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796869,"byte_end":6796929,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796934,"byte_end":6796937,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796942,"byte_end":6796952,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796957,"byte_end":6796960,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796965,"byte_end":6797037,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797042,"byte_end":6797115,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797120,"byte_end":6797187,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797192,"byte_end":6797195,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797200,"byte_end":6797276,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798422,"byte_end":6798441,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797449,"byte_end":6797509,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797514,"byte_end":6797517,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797522,"byte_end":6797585,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797590,"byte_end":6797668,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797673,"byte_end":6797740,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797745,"byte_end":6797817,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797822,"byte_end":6797892,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797897,"byte_end":6797920,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797925,"byte_end":6797928,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797933,"byte_end":6797943,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797948,"byte_end":6797951,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6797956,"byte_end":6798031,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798036,"byte_end":6798109,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798114,"byte_end":6798190,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798195,"byte_end":6798268,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798273,"byte_end":6798343,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798348,"byte_end":6798351,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798356,"byte_end":6798410,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6799007,"byte_end":6799017,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798569,"byte_end":6798619,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798624,"byte_end":6798627,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798632,"byte_end":6798639,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798644,"byte_end":6798663,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798668,"byte_end":6798706,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798711,"byte_end":6798714,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798719,"byte_end":6798753,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798758,"byte_end":6798805,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798810,"byte_end":6798817,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798822,"byte_end":6798829,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798834,"byte_end":6798872,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798877,"byte_end":6798880,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798885,"byte_end":6798938,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798943,"byte_end":6798983,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6798988,"byte_end":6798995,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803377,"byte_end":6803398,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803331,"byte_end":6803372,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803433,"byte_end":6803435,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803404,"byte_end":6803428,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803309,"byte_end":6803324,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803227,"byte_end":6803282,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725712,"byte_end":6725722,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725873,"byte_end":6725883,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6726210,"byte_end":6726220,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736067,"byte_end":6736071,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736342,"byte_end":6736348,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739576,"byte_end":6739582,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6744149,"byte_end":6744155,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6744417,"byte_end":6744423,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745194,"byte_end":6745200,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745560,"byte_end":6745564,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745702,"byte_end":6745706,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745913,"byte_end":6745917,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746312,"byte_end":6746316,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746597,"byte_end":6746601,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746818,"byte_end":6746822,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747351,"byte_end":6747355,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747736,"byte_end":6747740,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748643,"byte_end":6748654,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6749788,"byte_end":6749798,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750585,"byte_end":6750595,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6752087,"byte_end":6752097,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6752410,"byte_end":6752420,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6753510,"byte_end":6753520,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6754576,"byte_end":6754587,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6755105,"byte_end":6755116,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758239,"byte_end":6758250,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758573,"byte_end":6758584,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6760012,"byte_end":6760023,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6760734,"byte_end":6760745,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6761077,"byte_end":6761088,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6761931,"byte_end":6761943,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6762285,"byte_end":6762297,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6764557,"byte_end":6764569,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6764905,"byte_end":6764917,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765052,"byte_end":6765064,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765271,"byte_end":6765283,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765678,"byte_end":6765690,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765970,"byte_end":6765982,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779922,"byte_end":6779942,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6783295,"byte_end":6783315,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6784202,"byte_end":6784222,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785563,"byte_end":6785583,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785676,"byte_end":6785683,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795282,"byte_end":6795289,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795415,"byte_end":6795440,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795598,"byte_end":6795623,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795758,"byte_end":6795783,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796852,"byte_end":6796862,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6799404,"byte_end":6799414,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6802825,"byte_end":6802835,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803158,"byte_end":6803168,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803473,"byte_end":6803488,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803770,"byte_end":6803785,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803902,"byte_end":6803917,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/mod.rs","byte_start":6724239,"byte_end":6724255,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":348}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725712,"byte_end":6725722,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6725873,"byte_end":6725883,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/bytes_codec.rs","byte_start":6726210,"byte_end":6726220,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736067,"byte_end":6736071,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6736342,"byte_end":6736348,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6739576,"byte_end":6739582,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6744149,"byte_end":6744155,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":777},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6744417,"byte_end":6744423,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":777},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745194,"byte_end":6745200,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745560,"byte_end":6745564,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745702,"byte_end":6745706,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6745913,"byte_end":6745917,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":732},"to":{"krate":16,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746312,"byte_end":6746316,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":732},"to":{"krate":16,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746597,"byte_end":6746601,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6746818,"byte_end":6746822,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":732},"to":{"krate":16,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747351,"byte_end":6747355,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6747736,"byte_end":6747740,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed.rs","byte_start":6748643,"byte_end":6748654,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6749788,"byte_end":6749798,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6750585,"byte_end":6750595,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6752087,"byte_end":6752097,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":691},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6752410,"byte_end":6752420,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":691},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6753510,"byte_end":6753520,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6754576,"byte_end":6754587,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_read.rs","byte_start":6755105,"byte_end":6755116,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758239,"byte_end":6758250,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6758573,"byte_end":6758584,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6760012,"byte_end":6760023,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":605},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6760734,"byte_end":6760745,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":605},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6761077,"byte_end":6761088,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6761931,"byte_end":6761943,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6762285,"byte_end":6762297,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":568},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6764557,"byte_end":6764569,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6764905,"byte_end":6764917,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765052,"byte_end":6765064,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765271,"byte_end":6765283,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":16,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765678,"byte_end":6765690,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":16,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/framed_write.rs","byte_start":6765970,"byte_end":6765982,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6779922,"byte_end":6779942,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6783295,"byte_end":6783315,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6784202,"byte_end":6784222,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785563,"byte_end":6785583,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6785676,"byte_end":6785683,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795282,"byte_end":6795289,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795415,"byte_end":6795440,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795598,"byte_end":6795623,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/length_delimited.rs","byte_start":6795758,"byte_end":6795783,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6796852,"byte_end":6796862,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6799404,"byte_end":6799414,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6802825,"byte_end":6802835,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803158,"byte_end":6803168,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803473,"byte_end":6803488,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803770,"byte_end":6803785,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.3.1/src/codec/lines_codec.rs","byte_start":6803902,"byte_end":6803917,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1620}}]}