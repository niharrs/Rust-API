{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"codec\"","-C","metadata=40b01d389b63c955","-C","extra-filename=-40b01d389b63c955","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--extern","bytes=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libbytes-94d8fb0f50c48a9e.rmeta","--extern","futures_core=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_core-b48a9c1c3be203f5.rmeta","--extern","futures_sink=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_sink-8fb035f06d04bab9.rmeta","--extern","log=/Users/niharika/Downloads/webapp/target/rls/debug/deps/liblog-8c2d5fb978a9641b.rmeta","--extern","pin_project_lite=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libpin_project_lite-5c102f957b6ff865.rmeta","--extern","tokio=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio-1b4bba8565aaa5a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio_util-40b01d389b63c955.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[12484623963446441179,3349131764622461389]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"<::pin_project_lite::pin_project macros>","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","num":15,"id":{"name":"bytes","disambiguator":[3234461312631938355,4652367375173356794]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":16,"id":{"name":"tokio","disambiguator":[11905398557701652019,15568126096425657729]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":17,"id":{"name":"pin_project_lite","disambiguator":[3029737169759291666,9942484439807821310]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":18,"id":{"name":"futures_core","disambiguator":[7001366758905092501,11004721139566071535]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":19,"id":{"name":"mio","disambiguator":[11431926200436597215,5132575838010453719]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":20,"id":{"name":"net2","disambiguator":[9119776918725886975,8127876557544096078]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":21,"id":{"name":"libc","disambiguator":[12029950799728344980,14625873231468315695]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":23,"id":{"name":"iovec","disambiguator":[3662113506597968008,9055319988211572080]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":24,"id":{"name":"slab","disambiguator":[1409043506054454837,8744282326915100185]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","num":25,"id":{"name":"log","disambiguator":[16869437812774876011,6221816467677339912]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":26,"id":{"name":"mio_uds","disambiguator":[3651254062301955048,1922942977027289515]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":27,"id":{"name":"lazy_static","disambiguator":[2600192780033545957,15495159354165441647]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":28,"id":{"name":"fnv","disambiguator":[13771570177894503084,8684805612069036812]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":29,"id":{"name":"memchr","disambiguator":[251563329699221058,3480720099078396615]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":30,"id":{"name":"signal_hook_registry","disambiguator":[8401647546033715890,13156881933724841041]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","num":31,"id":{"name":"arc_swap","disambiguator":[11698414955222306728,13245458730901588314]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","num":32,"id":{"name":"futures_sink","disambiguator":[11960107017759325617,2870266462260277688]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723581,"byte_end":6723591,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723630,"byte_end":6723637,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723676,"byte_end":6723683,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723721,"byte_end":6723727,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723729,"byte_end":6723740,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723788,"byte_end":6723798,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723847,"byte_end":6723858,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723920,"byte_end":6723940,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723942,"byte_end":6723967,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6724016,"byte_end":6724026,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6724028,"byte_end":6724043,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":0,"byte_end":494,"line_start":1,"line_end":26,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6}],"decl_id":null,"docs":" Utilities for working with Tokio.\n","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":60,"byte_end":166,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":167,"byte_end":210,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":368,"byte_end":405,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":450}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/cfg.rs","byte_start":570,"byte_end":595,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6722979,"byte_end":6723026,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723027,"byte_end":6723030,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723031,"byte_end":6723099,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723100,"byte_end":6723175,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723176,"byte_end":6723224,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723225,"byte_end":6723228,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723229,"byte_end":6723301,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! [`AsyncWrite`]: https://docs.rs/tokio/*/tokio/io/trait.AsyncWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723302,"byte_end":6723376,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! [`Sink`]: https://docs.rs/futures-sink/*/futures_sink/trait.Sink.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723377,"byte_end":6723450,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"! [`Stream`]: https://docs.rs/futures-core/*/futures_core/stream/trait.Stream.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723451,"byte_end":6723535,"line_start":10,"line_end":10,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724326,"byte_end":6724336,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple `Codec` implementation that just ships bytes around.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that just ships bytes around.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724172,"byte_end":6724237,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724438,"byte_end":6724441,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn () -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724365,"byte_end":6724426,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725715,"byte_end":6725722,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725208,"byte_end":6725243,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725244,"byte_end":6725247,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of `Framed` or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725248,"byte_end":6725315,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ `FramedRead`. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725316,"byte_end":6725393,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725394,"byte_end":6725466,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725467,"byte_end":6725491,"line_start":14,"line_end":14,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725492,"byte_end":6725495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725496,"byte_end":6725564,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725565,"byte_end":6725642,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725643,"byte_end":6725704,"line_start":18,"line_end":18,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725770,"byte_end":6725774,"line_start":21,"line_end":21,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725729,"byte_end":6725760,"line_start":20,"line_end":20,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726481,"byte_end":6726486,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725781,"byte_end":6725833,"line_start":23,"line_end":23,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725838,"byte_end":6725841,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725846,"byte_end":6725915,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725920,"byte_end":6725990,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6725995,"byte_end":6726041,"line_start":27,"line_end":27,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726046,"byte_end":6726049,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726054,"byte_end":6726130,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a `FramedRead`, and to enable the default","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726135,"byte_end":6726208,"line_start":30,"line_end":30,"column_start":5,"column_end":78}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726213,"byte_end":6726288,"line_start":31,"line_end":31,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726293,"byte_end":6726333,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726338,"byte_end":6726341,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726346,"byte_end":6726420,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726425,"byte_end":6726471,"line_start":35,"line_end":35,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729319,"byte_end":6729325,"line_start":103,"line_end":103,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn (&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726510,"byte_end":6726575,"line_start":38,"line_end":38,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726580,"byte_end":6726583,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This method is called by `FramedRead` whenever bytes are ready to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726588,"byte_end":6726660,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ parsed.  The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726665,"byte_end":6726738,"line_start":41,"line_end":41,"column_start":5,"column_end":78}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726743,"byte_end":6726816,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726821,"byte_end":6726864,"line_start":43,"line_end":43,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726869,"byte_end":6726872,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726877,"byte_end":6726950,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6726955,"byte_end":6727018,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727023,"byte_end":6727098,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727103,"byte_end":6727178,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727183,"byte_end":6727206,"line_start":49,"line_end":49,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727211,"byte_end":6727214,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727219,"byte_end":6727291,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the `Framed` instance that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727296,"byte_end":6727368,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727373,"byte_end":6727443,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727448,"byte_end":6727451,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727456,"byte_end":6727524,"line_start":55,"line_end":55,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727529,"byte_end":6727600,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727605,"byte_end":6727685,"line_start":57,"line_end":57,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727690,"byte_end":6727702,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727707,"byte_end":6727710,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727715,"byte_end":6727785,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs `Framed` that the stream is now","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727790,"byte_end":6727863,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727868,"byte_end":6727905,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727910,"byte_end":6727913,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727918,"byte_end":6727941,"line_start":64,"line_end":64,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727946,"byte_end":6727949,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6727954,"byte_end":6728028,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728033,"byte_end":6728107,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728112,"byte_end":6728165,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728170,"byte_end":6728173,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728178,"byte_end":6728249,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728254,"byte_end":6728324,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728329,"byte_end":6728345,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728350,"byte_end":6728353,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728358,"byte_end":6728371,"line_start":74,"line_end":74,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728376,"byte_end":6728394,"line_start":75,"line_end":75,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728399,"byte_end":6728404,"line_start":76,"line_end":76,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728409,"byte_end":6728435,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728440,"byte_end":6728477,"line_start":78,"line_end":78,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728482,"byte_end":6728487,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728492,"byte_end":6728513,"line_start":80,"line_end":80,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728518,"byte_end":6728523,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728528,"byte_end":6728558,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728563,"byte_end":6728577,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728582,"byte_end":6728613,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728618,"byte_end":6728651,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728656,"byte_end":6728659,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728664,"byte_end":6728757,"line_start":87,"line_end":87,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728762,"byte_end":6728780,"line_start":88,"line_end":88,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728785,"byte_end":6728788,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728793,"byte_end":6728865,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728870,"byte_end":6728930,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728935,"byte_end":6728987,"line_start":92,"line_end":92,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6728992,"byte_end":6729054,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729059,"byte_end":6729126,"line_start":94,"line_end":94,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729131,"byte_end":6729134,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729139,"byte_end":6729167,"line_start":96,"line_end":96,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729172,"byte_end":6729181,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729186,"byte_end":6729191,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729196,"byte_end":6729203,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729208,"byte_end":6729211,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729216,"byte_end":6729285,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729290,"byte_end":6729311,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730184,"byte_end":6730194,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn (&mut self, buf: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729406,"byte_end":6729478,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729483,"byte_end":6729532,"line_start":106,"line_end":106,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729537,"byte_end":6729540,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729545,"byte_end":6729613,"line_start":108,"line_end":108,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729618,"byte_end":6729685,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729690,"byte_end":6729758,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729763,"byte_end":6729811,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729816,"byte_end":6729819,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729824,"byte_end":6729892,"line_start":113,"line_end":113,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729897,"byte_end":6729972,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6729977,"byte_end":6730052,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730057,"byte_end":6730129,"line_start":116,"line_end":116,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730134,"byte_end":6730176,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731669,"byte_end":6731675,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn <T> (self, io: T) -> Framed<T, Self>","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730612,"byte_end":6730688,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730693,"byte_end":6730769,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730774,"byte_end":6730777,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730782,"byte_end":6730857,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730862,"byte_end":6730932,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6730937,"byte_end":6731008,"line_start":136,"line_end":136,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731013,"byte_end":6731085,"line_start":137,"line_end":137,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731090,"byte_end":6731148,"line_start":138,"line_end":138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731153,"byte_end":6731156,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731161,"byte_end":6731230,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731235,"byte_end":6731310,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731315,"byte_end":6731391,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731396,"byte_end":6731418,"line_start":143,"line_end":143,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731423,"byte_end":6731426,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731431,"byte_end":6731504,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731509,"byte_end":6731580,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/decoder.rs","byte_start":6731585,"byte_end":6731661,"line_start":147,"line_end":147,"column_start":5,"column_end":81}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6731966,"byte_end":6731973,"line_start":6,"line_end":6,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n `FramedWrite`.\n","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6731864,"byte_end":6731936,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6731937,"byte_end":6731955,"line_start":5,"line_end":5,"column_start":1,"column_end":19}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732037,"byte_end":6732041,"line_start":8,"line_end":8,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::encoder::Encoder::Item","value":"type Item;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of items consumed by the `Encoder`\n","sig":null,"attributes":[{"value":"/ The type of items consumed by the `Encoder`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6731980,"byte_end":6732027,"line_start":7,"line_end":7,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732239,"byte_end":6732244,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732048,"byte_end":6732080,"line_start":10,"line_end":10,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732085,"byte_end":6732088,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ `FramedWrite` requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732093,"byte_end":6732168,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732173,"byte_end":6732229,"line_start":13,"line_end":13,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732529,"byte_end":6732535,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn (&mut self, item: Self::Item, dst: &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732268,"byte_end":6732313,"line_start":16,"line_end":16,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732318,"byte_end":6732321,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732326,"byte_end":6732400,"line_start":18,"line_end":18,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the `Framed` instance and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732405,"byte_end":6732478,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/encoder.rs","byte_start":6732483,"byte_end":6732521,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6733440,"byte_end":6733446,"line_start":23,"line_end":23,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":775}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6733882,"byte_end":6733884,"line_start":40,"line_end":40,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6733895,"byte_end":6733900,"line_start":41,"line_end":41,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735435,"byte_end":6735438,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn (inner: T, codec: U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734374,"byte_end":6734450,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734455,"byte_end":6734531,"line_start":65,"line_end":65,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734536,"byte_end":6734539,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734544,"byte_end":6734619,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734624,"byte_end":6734694,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734699,"byte_end":6734770,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734775,"byte_end":6734847,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734852,"byte_end":6734910,"line_start":71,"line_end":71,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734915,"byte_end":6734918,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734923,"byte_end":6734992,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734997,"byte_end":6735072,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735077,"byte_end":6735153,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735158,"byte_end":6735180,"line_start":76,"line_end":76,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735185,"byte_end":6735188,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735193,"byte_end":6735266,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735271,"byte_end":6735342,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735347,"byte_end":6735423,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736851,"byte_end":6736861,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn (parts: FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a `Stream` and `Sink` interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a `Stream` and `Sink` interface for reading and writing to this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735618,"byte_end":6735694,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735699,"byte_end":6735775,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735780,"byte_end":6735783,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735788,"byte_end":6735863,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735868,"byte_end":6735938,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735943,"byte_end":6736014,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736019,"byte_end":6736091,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736096,"byte_end":6736154,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736159,"byte_end":6736162,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736167,"byte_end":6736236,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736241,"byte_end":6736316,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736321,"byte_end":6736397,"line_start":100,"line_end":100,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736402,"byte_end":6736424,"line_start":101,"line_end":101,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736429,"byte_end":6736432,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736437,"byte_end":6736516,"line_start":103,"line_end":103,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736521,"byte_end":6736596,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736601,"byte_end":6736604,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736609,"byte_end":6736682,"line_start":106,"line_end":106,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the `Framed` returned by this method, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736687,"byte_end":6736758,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6736763,"byte_end":6736839,"line_start":108,"line_end":108,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737549,"byte_end":6737556,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737267,"byte_end":6737330,"line_start":124,"line_end":124,"column_start":5,"column_end":68}},{"value":"/ `Frame`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737335,"byte_end":6737347,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737352,"byte_end":6737355,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737360,"byte_end":6737435,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737440,"byte_end":6737510,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737515,"byte_end":6737537,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737916,"byte_end":6737923,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737626,"byte_end":6737697,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ `Frame`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737702,"byte_end":6737714,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737719,"byte_end":6737722,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737727,"byte_end":6737802,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737807,"byte_end":6737877,"line_start":138,"line_end":138,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6737882,"byte_end":6737904,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738255,"byte_end":6738260,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738005,"byte_end":6738063,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ `Frame`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738068,"byte_end":6738080,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738085,"byte_end":6738088,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738093,"byte_end":6738167,"line_start":147,"line_end":147,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738172,"byte_end":6738243,"line_start":148,"line_end":148,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738591,"byte_end":6738600,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Frame`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738333,"byte_end":6738399,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ `Frame`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738404,"byte_end":6738416,"line_start":154,"line_end":154,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738421,"byte_end":6738424,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738429,"byte_end":6738503,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738508,"byte_end":6738579,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738740,"byte_end":6738751,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738685,"byte_end":6738728,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739077,"byte_end":6739087,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738813,"byte_end":6738875,"line_start":167,"line_end":167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738880,"byte_end":6738883,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738888,"byte_end":6738963,"line_start":169,"line_end":169,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6738968,"byte_end":6739038,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739043,"byte_end":6739065,"line_start":171,"line_end":171,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739481,"byte_end":6739491,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn (self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739160,"byte_end":6739233,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739238,"byte_end":6739279,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739284,"byte_end":6739287,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739292,"byte_end":6739367,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739372,"byte_end":6739442,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739447,"byte_end":6739469,"line_start":181,"line_end":181,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":481},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743842,"byte_end":6743853,"line_start":342,"line_end":342,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new `Framed` with a different codec.\n It contains all current buffers and the inner transport.\n","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743610,"byte_end":6743681,"line_start":338,"line_end":338,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new `Framed` with a different codec.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743682,"byte_end":6743752,"line_start":339,"line_end":339,"column_start":1,"column_end":71}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743753,"byte_end":6743813,"line_start":340,"line_end":340,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743939,"byte_end":6743941,"line_start":344,"line_end":344,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743866,"byte_end":6743930,"line_start":343,"line_end":343,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743973,"byte_end":6743978,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743951,"byte_end":6743964,"line_start":346,"line_end":346,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744043,"byte_end":6744051,"line_start":350,"line_end":350,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743988,"byte_end":6744034,"line_start":349,"line_end":349,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":487},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744138,"byte_end":6744147,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::bytes_mut::BytesMut","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744068,"byte_end":6744129,"line_start":352,"line_end":352,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744380,"byte_end":6744383,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn (io: T, codec: U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744328,"byte_end":6744368,"line_start":361,"line_end":361,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":686},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6744982,"byte_end":6744992,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":689}],"decl_id":null,"docs":" A `Stream` of messages decoded from an `AsyncRead`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745450,"byte_end":6745453,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn (inner: T, decoder: D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745382,"byte_end":6745438,"line_start":42,"line_end":42,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745973,"byte_end":6745980,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745686,"byte_end":6745749,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745754,"byte_end":6745771,"line_start":55,"line_end":55,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745776,"byte_end":6745779,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745784,"byte_end":6745859,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745864,"byte_end":6745934,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745939,"byte_end":6745961,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746331,"byte_end":6746338,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746036,"byte_end":6746107,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746112,"byte_end":6746129,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746134,"byte_end":6746137,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746142,"byte_end":6746217,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746222,"byte_end":6746292,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746297,"byte_end":6746319,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746675,"byte_end":6746685,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746406,"byte_end":6746473,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746478,"byte_end":6746481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746486,"byte_end":6746561,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746566,"byte_end":6746636,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746641,"byte_end":6746663,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746800,"byte_end":6746807,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn (&self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746738,"byte_end":6746788,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746936,"byte_end":6746947,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn (&mut self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6746866,"byte_end":6746924,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747073,"byte_end":6747084,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn (&self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747018,"byte_end":6747061,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":600},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6752927,"byte_end":6752938,"line_start":20,"line_end":20,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":603}],"decl_id":null,"docs":" A `Sink` of frames encoded to an `AsyncWrite`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753378,"byte_end":6753381,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn (inner: T, encoder: E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753309,"byte_end":6753366,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753906,"byte_end":6753913,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753618,"byte_end":6753681,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753686,"byte_end":6753704,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753709,"byte_end":6753712,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753717,"byte_end":6753792,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753797,"byte_end":6753867,"line_start":58,"line_end":58,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753872,"byte_end":6753894,"line_start":59,"line_end":59,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754265,"byte_end":6754272,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753969,"byte_end":6754040,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754045,"byte_end":6754063,"line_start":65,"line_end":65,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754068,"byte_end":6754071,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754076,"byte_end":6754151,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754156,"byte_end":6754226,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754231,"byte_end":6754253,"line_start":69,"line_end":69,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754610,"byte_end":6754620,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754340,"byte_end":6754408,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754413,"byte_end":6754416,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754421,"byte_end":6754496,"line_start":76,"line_end":76,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754501,"byte_end":6754571,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754576,"byte_end":6754598,"line_start":78,"line_end":78,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754735,"byte_end":6754742,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754673,"byte_end":6754723,"line_start":83,"line_end":83,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754871,"byte_end":6754882,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6754801,"byte_end":6754859,"line_start":88,"line_end":88,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":342},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":493},{"krate":0,"index":503},{"krate":0,"index":501},{"krate":0,"index":500},{"krate":0,"index":364},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":519},{"krate":0,"index":517},{"krate":0,"index":516},{"krate":0,"index":366},{"krate":0,"index":373},{"krate":0,"index":377},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":409}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761322,"byte_end":6761374,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761375,"byte_end":6761378,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761379,"byte_end":6761449,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761450,"byte_end":6761508,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761509,"byte_end":6761581,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761582,"byte_end":6761652,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761653,"byte_end":6761720,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761721,"byte_end":6761724,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761725,"byte_end":6761746,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761747,"byte_end":6761750,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761751,"byte_end":6761826,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761827,"byte_end":6761898,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761899,"byte_end":6761970,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6761971,"byte_end":6762041,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762042,"byte_end":6762082,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762083,"byte_end":6762086,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762087,"byte_end":6762094,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762095,"byte_end":6762138,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762139,"byte_end":6762197,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762198,"byte_end":6762201,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762202,"byte_end":6762257,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762258,"byte_end":6762300,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762301,"byte_end":6762306,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762307,"byte_end":6762359,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762360,"byte_end":6762365,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762366,"byte_end":6762388,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762389,"byte_end":6762396,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762397,"byte_end":6762400,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762401,"byte_end":6762473,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762474,"byte_end":6762545,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762546,"byte_end":6762565,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762566,"byte_end":6762569,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762570,"byte_end":6762581,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762582,"byte_end":6762631,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762632,"byte_end":6762681,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762682,"byte_end":6762731,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762732,"byte_end":6762739,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762740,"byte_end":6762743,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762744,"byte_end":6762782,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762783,"byte_end":6762786,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762787,"byte_end":6762794,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762795,"byte_end":6762821,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762822,"byte_end":6762880,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762881,"byte_end":6762884,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762885,"byte_end":6762910,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762911,"byte_end":6762932,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762933,"byte_end":6762936,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6762937,"byte_end":6763013,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763014,"byte_end":6763023,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763024,"byte_end":6763066,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763067,"byte_end":6763072,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763073,"byte_end":6763146,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763147,"byte_end":6763194,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763195,"byte_end":6763198,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763199,"byte_end":6763236,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763237,"byte_end":6763251,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763252,"byte_end":6763257,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763258,"byte_end":6763265,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763266,"byte_end":6763269,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763270,"byte_end":6763312,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763313,"byte_end":6763316,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763317,"byte_end":6763328,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763329,"byte_end":6763368,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763369,"byte_end":6763408,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763409,"byte_end":6763448,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763449,"byte_end":6763456,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763457,"byte_end":6763460,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763461,"byte_end":6763475,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763476,"byte_end":6763479,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763480,"byte_end":6763555,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763556,"byte_end":6763629,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763630,"byte_end":6763696,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763697,"byte_end":6763766,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763767,"byte_end":6763832,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763833,"byte_end":6763836,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763837,"byte_end":6763853,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763854,"byte_end":6763857,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763858,"byte_end":6763934,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763935,"byte_end":6763976,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763977,"byte_end":6763980,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763981,"byte_end":6763988,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6763989,"byte_end":6764020,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764021,"byte_end":6764071,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764072,"byte_end":6764113,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764114,"byte_end":6764149,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764150,"byte_end":6764198,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764199,"byte_end":6764230,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764231,"byte_end":6764279,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764280,"byte_end":6764329,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764330,"byte_end":6764352,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764353,"byte_end":6764360,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764361,"byte_end":6764383,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764384,"byte_end":6764391,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764392,"byte_end":6764395,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764396,"byte_end":6764444,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764445,"byte_end":6764448,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764449,"byte_end":6764460,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764461,"byte_end":6764513,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764514,"byte_end":6764579,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764580,"byte_end":6764645,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764646,"byte_end":6764711,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764712,"byte_end":6764719,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764720,"byte_end":6764723,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764724,"byte_end":6764800,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764801,"byte_end":6764875,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764876,"byte_end":6764948,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6764949,"byte_end":6765025,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765026,"byte_end":6765068,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765069,"byte_end":6765072,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765073,"byte_end":6765089,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765090,"byte_end":6765093,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765094,"byte_end":6765169,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765170,"byte_end":6765211,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765212,"byte_end":6765215,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765216,"byte_end":6765223,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765224,"byte_end":6765255,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765256,"byte_end":6765306,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765307,"byte_end":6765348,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765349,"byte_end":6765384,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765385,"byte_end":6765433,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765434,"byte_end":6765465,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765466,"byte_end":6765514,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765515,"byte_end":6765574,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765575,"byte_end":6765597,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765598,"byte_end":6765605,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765606,"byte_end":6765628,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765629,"byte_end":6765636,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765637,"byte_end":6765640,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765641,"byte_end":6765689,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765690,"byte_end":6765693,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765694,"byte_end":6765705,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765706,"byte_end":6765755,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765756,"byte_end":6765810,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765811,"byte_end":6765865,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765866,"byte_end":6765920,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765921,"byte_end":6765928,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765929,"byte_end":6765932,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6765933,"byte_end":6766006,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766007,"byte_end":6766074,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766075,"byte_end":6766078,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766079,"byte_end":6766095,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766096,"byte_end":6766099,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766100,"byte_end":6766176,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766177,"byte_end":6766249,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766250,"byte_end":6766289,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766290,"byte_end":6766293,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766294,"byte_end":6766301,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766302,"byte_end":6766333,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766334,"byte_end":6766384,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766385,"byte_end":6766426,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766427,"byte_end":6766462,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766463,"byte_end":6766511,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766512,"byte_end":6766543,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766544,"byte_end":6766591,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766592,"byte_end":6766612,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766613,"byte_end":6766635,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766636,"byte_end":6766643,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766644,"byte_end":6766666,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766667,"byte_end":6766674,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766675,"byte_end":6766678,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766679,"byte_end":6766727,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766728,"byte_end":6766731,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766732,"byte_end":6766743,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766744,"byte_end":6766796,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766797,"byte_end":6766862,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766863,"byte_end":6766928,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766929,"byte_end":6766994,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6766995,"byte_end":6767002,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767003,"byte_end":6767006,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767007,"byte_end":6767079,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767080,"byte_end":6767155,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767156,"byte_end":6767228,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767229,"byte_end":6767305,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767306,"byte_end":6767379,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767380,"byte_end":6767383,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767384,"byte_end":6767400,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767401,"byte_end":6767404,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767405,"byte_end":6767479,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767480,"byte_end":6767547,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767548,"byte_end":6767551,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767552,"byte_end":6767559,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767560,"byte_end":6767591,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767592,"byte_end":6767642,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767643,"byte_end":6767684,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767685,"byte_end":6767720,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767721,"byte_end":6767769,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767770,"byte_end":6767801,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767802,"byte_end":6767850,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767851,"byte_end":6767871,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767872,"byte_end":6767894,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767895,"byte_end":6767902,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767903,"byte_end":6767925,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767926,"byte_end":6767933,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767934,"byte_end":6767937,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767938,"byte_end":6767986,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767987,"byte_end":6767990,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6767991,"byte_end":6768002,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768003,"byte_end":6768029,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768030,"byte_end":6768075,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768076,"byte_end":6768121,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768122,"byte_end":6768167,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768168,"byte_end":6768171,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768172,"byte_end":6768200,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768201,"byte_end":6768246,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768247,"byte_end":6768292,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768293,"byte_end":6768338,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768339,"byte_end":6768346,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768347,"byte_end":6768350,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768351,"byte_end":6768423,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768424,"byte_end":6768500,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768501,"byte_end":6768571,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768572,"byte_end":6768641,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768642,"byte_end":6768679,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768680,"byte_end":6768683,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768684,"byte_end":6768758,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768759,"byte_end":6768813,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768814,"byte_end":6768817,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768818,"byte_end":6768834,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768835,"byte_end":6768838,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768839,"byte_end":6768912,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768913,"byte_end":6768989,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6768990,"byte_end":6769064,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769065,"byte_end":6769078,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769079,"byte_end":6769082,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769083,"byte_end":6769090,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769091,"byte_end":6769122,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769123,"byte_end":6769173,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769174,"byte_end":6769215,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769216,"byte_end":6769251,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769252,"byte_end":6769301,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769302,"byte_end":6769333,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769334,"byte_end":6769382,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769383,"byte_end":6769427,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769428,"byte_end":6769450,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769451,"byte_end":6769458,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769459,"byte_end":6769481,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769482,"byte_end":6769489,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769490,"byte_end":6769493,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769494,"byte_end":6769542,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769543,"byte_end":6769546,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769547,"byte_end":6769558,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769559,"byte_end":6769585,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769586,"byte_end":6769636,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769637,"byte_end":6769687,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769688,"byte_end":6769738,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769739,"byte_end":6769742,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769743,"byte_end":6769763,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769764,"byte_end":6769794,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769795,"byte_end":6769825,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769826,"byte_end":6769856,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769857,"byte_end":6769864,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769865,"byte_end":6769868,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769869,"byte_end":6769942,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6769943,"byte_end":6770018,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770019,"byte_end":6770091,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770092,"byte_end":6770130,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770131,"byte_end":6770134,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770135,"byte_end":6770209,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770210,"byte_end":6770286,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770287,"byte_end":6770360,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770361,"byte_end":6770389,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770390,"byte_end":6770393,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770394,"byte_end":6770410,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770411,"byte_end":6770414,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770415,"byte_end":6770488,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770489,"byte_end":6770565,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770566,"byte_end":6770640,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770641,"byte_end":6770713,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770714,"byte_end":6770725,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770726,"byte_end":6770729,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770730,"byte_end":6770737,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770738,"byte_end":6770769,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770770,"byte_end":6770820,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770821,"byte_end":6770862,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770863,"byte_end":6770898,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770899,"byte_end":6770948,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770949,"byte_end":6770980,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6770981,"byte_end":6771046,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771047,"byte_end":6771067,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771068,"byte_end":6771090,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771091,"byte_end":6771098,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771099,"byte_end":6771106,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771107,"byte_end":6771110,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771111,"byte_end":6771159,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771160,"byte_end":6771163,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771164,"byte_end":6771175,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771176,"byte_end":6771202,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771203,"byte_end":6771253,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771254,"byte_end":6771304,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771305,"byte_end":6771355,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771356,"byte_end":6771359,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771360,"byte_end":6771380,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771381,"byte_end":6771411,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771412,"byte_end":6771442,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771443,"byte_end":6771473,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771474,"byte_end":6771481,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771482,"byte_end":6771485,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771486,"byte_end":6771559,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771560,"byte_end":6771634,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771635,"byte_end":6771709,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771710,"byte_end":6771783,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771784,"byte_end":6771860,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771861,"byte_end":6771894,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771895,"byte_end":6771898,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771899,"byte_end":6771913,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771914,"byte_end":6771917,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771918,"byte_end":6771993,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6771994,"byte_end":6772066,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772067,"byte_end":6772135,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772136,"byte_end":6772212,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772213,"byte_end":6772254,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772255,"byte_end":6772258,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772259,"byte_end":6772329,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772330,"byte_end":6772348,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772349,"byte_end":6772352,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772353,"byte_end":6772360,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772361,"byte_end":6772393,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772394,"byte_end":6772444,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772445,"byte_end":6772489,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772490,"byte_end":6772503,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772504,"byte_end":6772539,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772540,"byte_end":6772571,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772572,"byte_end":6772595,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772596,"byte_end":6772603,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772604,"byte_end":6772626,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772627,"byte_end":6772634,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772635,"byte_end":6772638,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772639,"byte_end":6772689,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772690,"byte_end":6772693,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772694,"byte_end":6772705,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772706,"byte_end":6772739,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772740,"byte_end":6772773,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772774,"byte_end":6772807,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772808,"byte_end":6772815,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772816,"byte_end":6772819,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772820,"byte_end":6772900,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772901,"byte_end":6772943,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772944,"byte_end":6772988,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6772989,"byte_end":6773034,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773035,"byte_end":6773082,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773083,"byte_end":6773121,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773122,"byte_end":6773192,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":493},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773754,"byte_end":6773761,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773436,"byte_end":6773491,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773492,"byte_end":6773495,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773496,"byte_end":6773571,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773572,"byte_end":6773652,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6773653,"byte_end":6773712,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774432,"byte_end":6774457,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774347,"byte_end":6774420,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774802,"byte_end":6774822,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774478,"byte_end":6774552,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774553,"byte_end":6774556,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774557,"byte_end":6774636,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774637,"byte_end":6774680,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774681,"byte_end":6774684,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774685,"byte_end":6774738,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774739,"byte_end":6774742,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6774743,"byte_end":6774773,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775166,"byte_end":6775169,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775075,"byte_end":6775154,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775396,"byte_end":6775403,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775293,"byte_end":6775368,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775373,"byte_end":6775384,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775625,"byte_end":6775641,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775453,"byte_end":6775494,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775499,"byte_end":6775502,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775507,"byte_end":6775580,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775585,"byte_end":6775613,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6776062,"byte_end":6776082,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn (&mut self, val: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775706,"byte_end":6775740,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775745,"byte_end":6775748,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775753,"byte_end":6775823,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775828,"byte_end":6775903,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775908,"byte_end":6775980,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775985,"byte_end":6776050,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781392,"byte_end":6781395,"line_start":622,"line_end":622,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780850,"byte_end":6780925,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780930,"byte_end":6780941,"line_start":604,"line_end":604,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780946,"byte_end":6780949,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780954,"byte_end":6780968,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780973,"byte_end":6780976,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780981,"byte_end":6780988,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780993,"byte_end":6781024,"line_start":609,"line_end":609,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781029,"byte_end":6781077,"line_start":610,"line_end":610,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781082,"byte_end":6781085,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781090,"byte_end":6781131,"line_start":612,"line_end":612,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781136,"byte_end":6781171,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781176,"byte_end":6781207,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781212,"byte_end":6781243,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781248,"byte_end":6781277,"line_start":616,"line_end":616,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781282,"byte_end":6781302,"line_start":617,"line_end":617,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781307,"byte_end":6781329,"line_start":618,"line_end":618,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781334,"byte_end":6781341,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781346,"byte_end":6781368,"line_start":620,"line_end":620,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6781373,"byte_end":6781380,"line_start":621,"line_end":621,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782580,"byte_end":6782590,"line_start":663,"line_end":663,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782059,"byte_end":6782108,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782113,"byte_end":6782116,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782121,"byte_end":6782153,"line_start":646,"line_end":646,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782158,"byte_end":6782161,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782166,"byte_end":6782234,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782239,"byte_end":6782242,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782247,"byte_end":6782261,"line_start":650,"line_end":650,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782266,"byte_end":6782269,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782274,"byte_end":6782281,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782286,"byte_end":6782317,"line_start":653,"line_end":653,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782322,"byte_end":6782370,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782375,"byte_end":6782378,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782383,"byte_end":6782424,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782429,"byte_end":6782464,"line_start":657,"line_end":657,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782469,"byte_end":6782490,"line_start":658,"line_end":658,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782495,"byte_end":6782517,"line_start":659,"line_end":659,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782522,"byte_end":6782529,"line_start":660,"line_end":660,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782534,"byte_end":6782556,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782561,"byte_end":6782568,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783222,"byte_end":6783235,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782689,"byte_end":6782741,"line_start":668,"line_end":668,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782746,"byte_end":6782749,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782754,"byte_end":6782792,"line_start":670,"line_end":670,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782797,"byte_end":6782800,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782805,"byte_end":6782873,"line_start":672,"line_end":672,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782878,"byte_end":6782881,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782886,"byte_end":6782900,"line_start":674,"line_end":674,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782905,"byte_end":6782908,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782913,"byte_end":6782920,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782925,"byte_end":6782956,"line_start":677,"line_end":677,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6782961,"byte_end":6783009,"line_start":678,"line_end":678,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783014,"byte_end":6783017,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783022,"byte_end":6783063,"line_start":680,"line_end":680,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783068,"byte_end":6783103,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783108,"byte_end":6783132,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783137,"byte_end":6783159,"line_start":683,"line_end":683,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783164,"byte_end":6783171,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783176,"byte_end":6783198,"line_start":685,"line_end":685,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783203,"byte_end":6783210,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783868,"byte_end":6783881,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783335,"byte_end":6783387,"line_start":692,"line_end":692,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783392,"byte_end":6783395,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783400,"byte_end":6783438,"line_start":694,"line_end":694,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783443,"byte_end":6783446,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783451,"byte_end":6783519,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783524,"byte_end":6783527,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783532,"byte_end":6783546,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783551,"byte_end":6783554,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783559,"byte_end":6783566,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783571,"byte_end":6783602,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783607,"byte_end":6783655,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783660,"byte_end":6783663,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783668,"byte_end":6783709,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783714,"byte_end":6783749,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783754,"byte_end":6783778,"line_start":706,"line_end":706,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783783,"byte_end":6783805,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783810,"byte_end":6783817,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783822,"byte_end":6783844,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6783849,"byte_end":6783856,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784962,"byte_end":6784978,"line_start":745,"line_end":745,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784050,"byte_end":6784079,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784084,"byte_end":6784087,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784092,"byte_end":6784164,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784169,"byte_end":6784194,"line_start":722,"line_end":722,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784199,"byte_end":6784202,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784207,"byte_end":6784279,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784284,"byte_end":6784353,"line_start":725,"line_end":725,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784358,"byte_end":6784431,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784436,"byte_end":6784448,"line_start":727,"line_end":727,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784453,"byte_end":6784456,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784461,"byte_end":6784536,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784541,"byte_end":6784602,"line_start":730,"line_end":730,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784607,"byte_end":6784610,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784615,"byte_end":6784629,"line_start":732,"line_end":732,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784634,"byte_end":6784637,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784642,"byte_end":6784649,"line_start":734,"line_end":734,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784654,"byte_end":6784685,"line_start":735,"line_end":735,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784690,"byte_end":6784738,"line_start":736,"line_end":736,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784743,"byte_end":6784746,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784751,"byte_end":6784792,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784797,"byte_end":6784832,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784837,"byte_end":6784872,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784877,"byte_end":6784899,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784904,"byte_end":6784911,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784916,"byte_end":6784938,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6784943,"byte_end":6784950,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785639,"byte_end":6785658,"line_start":769,"line_end":769,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785075,"byte_end":6785138,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785143,"byte_end":6785146,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785151,"byte_end":6785202,"line_start":752,"line_end":752,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785207,"byte_end":6785210,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785215,"byte_end":6785283,"line_start":754,"line_end":754,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785288,"byte_end":6785291,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785296,"byte_end":6785310,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785315,"byte_end":6785318,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785323,"byte_end":6785330,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785335,"byte_end":6785366,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785371,"byte_end":6785419,"line_start":760,"line_end":760,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785424,"byte_end":6785427,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785432,"byte_end":6785473,"line_start":762,"line_end":762,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785478,"byte_end":6785513,"line_start":763,"line_end":763,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785518,"byte_end":6785549,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785554,"byte_end":6785576,"line_start":765,"line_end":765,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785581,"byte_end":6785588,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785593,"byte_end":6785615,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785620,"byte_end":6785627,"line_start":768,"line_end":768,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786317,"byte_end":6786336,"line_start":792,"line_end":792,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785827,"byte_end":6785893,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785898,"byte_end":6785901,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785906,"byte_end":6785961,"line_start":777,"line_end":777,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785966,"byte_end":6785969,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785974,"byte_end":6785988,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6785993,"byte_end":6785996,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786001,"byte_end":6786008,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786013,"byte_end":6786044,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786049,"byte_end":6786097,"line_start":783,"line_end":783,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786102,"byte_end":6786105,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786110,"byte_end":6786151,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786156,"byte_end":6786191,"line_start":786,"line_end":786,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786196,"byte_end":6786227,"line_start":787,"line_end":787,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786232,"byte_end":6786254,"line_start":788,"line_end":788,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786259,"byte_end":6786266,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786271,"byte_end":6786293,"line_start":790,"line_end":790,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786298,"byte_end":6786305,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786890,"byte_end":6786907,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn (&mut self, val: isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786439,"byte_end":6786512,"line_start":797,"line_end":797,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786517,"byte_end":6786535,"line_start":798,"line_end":798,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786540,"byte_end":6786543,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786548,"byte_end":6786562,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786567,"byte_end":6786570,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786575,"byte_end":6786582,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786587,"byte_end":6786618,"line_start":803,"line_end":803,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786623,"byte_end":6786671,"line_start":804,"line_end":804,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786676,"byte_end":6786679,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786684,"byte_end":6786725,"line_start":806,"line_end":806,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786730,"byte_end":6786765,"line_start":807,"line_end":807,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786770,"byte_end":6786800,"line_start":808,"line_end":808,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786805,"byte_end":6786827,"line_start":809,"line_end":809,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786832,"byte_end":6786839,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786844,"byte_end":6786866,"line_start":811,"line_end":811,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6786871,"byte_end":6786878,"line_start":812,"line_end":812,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787557,"byte_end":6787565,"line_start":837,"line_end":837,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787008,"byte_end":6787071,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787076,"byte_end":6787079,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787084,"byte_end":6787145,"line_start":820,"line_end":820,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787150,"byte_end":6787153,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787158,"byte_end":6787212,"line_start":822,"line_end":822,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787217,"byte_end":6787220,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787225,"byte_end":6787239,"line_start":824,"line_end":824,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787244,"byte_end":6787247,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787252,"byte_end":6787259,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787264,"byte_end":6787295,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787300,"byte_end":6787348,"line_start":828,"line_end":828,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787353,"byte_end":6787356,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787361,"byte_end":6787402,"line_start":830,"line_end":830,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787407,"byte_end":6787442,"line_start":831,"line_end":831,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787447,"byte_end":6787467,"line_start":832,"line_end":832,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787472,"byte_end":6787494,"line_start":833,"line_end":833,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787499,"byte_end":6787506,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787511,"byte_end":6787533,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787538,"byte_end":6787545,"line_start":836,"line_end":836,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788085,"byte_end":6788094,"line_start":857,"line_end":857,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn (&self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787663,"byte_end":6787726,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787731,"byte_end":6787734,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787739,"byte_end":6787753,"line_start":844,"line_end":844,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787758,"byte_end":6787761,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787766,"byte_end":6787773,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787778,"byte_end":6787826,"line_start":847,"line_end":847,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787831,"byte_end":6787852,"line_start":848,"line_end":848,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787857,"byte_end":6787892,"line_start":849,"line_end":849,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787897,"byte_end":6787928,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787933,"byte_end":6787964,"line_start":851,"line_end":851,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6787969,"byte_end":6787998,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788003,"byte_end":6788023,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788028,"byte_end":6788049,"line_start":854,"line_end":854,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788054,"byte_end":6788061,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788066,"byte_end":6788073,"line_start":856,"line_end":856,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788750,"byte_end":6788758,"line_start":882,"line_end":882,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn <T> (&self, upstream: T) -> FramedRead<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788246,"byte_end":6788299,"line_start":864,"line_end":864,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788304,"byte_end":6788307,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788312,"byte_end":6788326,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788331,"byte_end":6788334,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788339,"byte_end":6788346,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788351,"byte_end":6788382,"line_start":869,"line_end":869,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788387,"byte_end":6788435,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788440,"byte_end":6788443,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788448,"byte_end":6788489,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788494,"byte_end":6788529,"line_start":873,"line_end":873,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788534,"byte_end":6788565,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788570,"byte_end":6788601,"line_start":875,"line_end":875,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788606,"byte_end":6788635,"line_start":876,"line_end":876,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788640,"byte_end":6788660,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788665,"byte_end":6788687,"line_start":878,"line_end":878,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788692,"byte_end":6788699,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788704,"byte_end":6788726,"line_start":880,"line_end":880,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788731,"byte_end":6788738,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789331,"byte_end":6789340,"line_start":903,"line_end":903,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn <T> (&self, inner: T) -> FramedWrite<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788922,"byte_end":6788976,"line_start":889,"line_end":889,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788981,"byte_end":6788984,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6788989,"byte_end":6789003,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789008,"byte_end":6789011,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789016,"byte_end":6789023,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789028,"byte_end":6789060,"line_start":894,"line_end":894,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789065,"byte_end":6789115,"line_start":895,"line_end":895,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789120,"byte_end":6789164,"line_start":896,"line_end":896,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789169,"byte_end":6789204,"line_start":897,"line_end":897,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789209,"byte_end":6789240,"line_start":898,"line_end":898,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789245,"byte_end":6789268,"line_start":899,"line_end":899,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789273,"byte_end":6789280,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789285,"byte_end":6789307,"line_start":901,"line_end":901,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789312,"byte_end":6789319,"line_start":902,"line_end":902,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789949,"byte_end":6789959,"line_start":925,"line_end":925,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn <T> (&self, inner: T) -> Framed<T, LengthDelimitedCodec>","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789501,"byte_end":6789550,"line_start":910,"line_end":910,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789555,"byte_end":6789558,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789563,"byte_end":6789577,"line_start":912,"line_end":912,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789582,"byte_end":6789585,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789590,"byte_end":6789597,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789602,"byte_end":6789647,"line_start":915,"line_end":915,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789652,"byte_end":6789702,"line_start":916,"line_end":916,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789707,"byte_end":6789763,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789768,"byte_end":6789781,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789786,"byte_end":6789821,"line_start":919,"line_end":919,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789826,"byte_end":6789857,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789862,"byte_end":6789886,"line_start":921,"line_end":921,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789891,"byte_end":6789898,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789903,"byte_end":6789925,"line_start":923,"line_end":923,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6789930,"byte_end":6789937,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791236,"byte_end":6791246,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A simple `Codec` implementation that splits up data into lines.\n","sig":null,"attributes":[{"value":"/ A simple `Codec` implementation that splits up data into lines.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791095,"byte_end":6791162,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792326,"byte_end":6792329,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn () -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791927,"byte_end":6791987,"line_start":28,"line_end":28,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791992,"byte_end":6791995,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792000,"byte_end":6792010,"line_start":30,"line_end":30,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792015,"byte_end":6792018,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792023,"byte_end":6792095,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792100,"byte_end":6792173,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792178,"byte_end":6792245,"line_start":34,"line_end":34,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792250,"byte_end":6792253,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: #method.new_with_max_length","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792258,"byte_end":6792314,"line_start":36,"line_end":36,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793444,"byte_end":6793463,"line_start":63,"line_end":63,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn (max_length: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792487,"byte_end":6792547,"line_start":45,"line_end":45,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792552,"byte_end":6792555,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792560,"byte_end":6792623,"line_start":47,"line_end":47,"column_start":5,"column_end":68}},{"value":"/ [`LengthError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792628,"byte_end":6792702,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792707,"byte_end":6792774,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792779,"byte_end":6792851,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792856,"byte_end":6792926,"line_start":51,"line_end":51,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792931,"byte_end":6792954,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792959,"byte_end":6792962,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792967,"byte_end":6792977,"line_start":54,"line_end":54,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792982,"byte_end":6792985,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6792990,"byte_end":6793065,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793070,"byte_end":6793143,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793148,"byte_end":6793224,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793229,"byte_end":6793302,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793307,"byte_end":6793377,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793382,"byte_end":6793385,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ [`LengthError`]: ../struct.LengthError","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793390,"byte_end":6793432,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6794029,"byte_end":6794039,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793591,"byte_end":6793641,"line_start":70,"line_end":70,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793646,"byte_end":6793649,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793654,"byte_end":6793661,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793666,"byte_end":6793685,"line_start":73,"line_end":73,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793690,"byte_end":6793728,"line_start":74,"line_end":74,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793733,"byte_end":6793736,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793741,"byte_end":6793775,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793780,"byte_end":6793827,"line_start":77,"line_end":77,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793832,"byte_end":6793839,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793844,"byte_end":6793851,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793856,"byte_end":6793894,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793899,"byte_end":6793902,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793907,"byte_end":6793960,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6793965,"byte_end":6794005,"line_start":83,"line_end":83,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6794010,"byte_end":6794017,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798363,"byte_end":6798384,"line_start":204,"line_end":204,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798317,"byte_end":6798358,"line_start":203,"line_end":203,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798419,"byte_end":6798421,"line_start":206,"line_end":206,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798390,"byte_end":6798414,"line_start":205,"line_end":205,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798295,"byte_end":6798310,"line_start":202,"line_end":202,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"LinesCodecError::{MaxLineLengthExceeded, Io}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798213,"byte_end":6798268,"line_start":200,"line_end":200,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724348,"byte_end":6724358,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724509,"byte_end":6724519,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724839,"byte_end":6724849,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734017,"byte_end":6734021,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734292,"byte_end":6734298,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735599,"byte_end":6735605,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739821,"byte_end":6739827,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6740089,"byte_end":6740095,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6740873,"byte_end":6740879,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741239,"byte_end":6741243,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741381,"byte_end":6741385,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741592,"byte_end":6741596,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741991,"byte_end":6741995,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6742276,"byte_end":6742280,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6742497,"byte_end":6742501,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743030,"byte_end":6743034,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743406,"byte_end":6743410,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744304,"byte_end":6744315,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745319,"byte_end":6745329,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745663,"byte_end":6745673,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747165,"byte_end":6747175,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747488,"byte_end":6747498,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6748588,"byte_end":6748598,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6749654,"byte_end":6749665,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6750183,"byte_end":6750194,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753244,"byte_end":6753255,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753594,"byte_end":6753605,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6755033,"byte_end":6755044,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6755762,"byte_end":6755773,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6756105,"byte_end":6756116,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6756959,"byte_end":6756971,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6757313,"byte_end":6757325,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6759683,"byte_end":6759695,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760031,"byte_end":6760043,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760178,"byte_end":6760190,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760397,"byte_end":6760409,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760804,"byte_end":6760816,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6761096,"byte_end":6761108,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775048,"byte_end":6775068,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6778430,"byte_end":6778450,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6779330,"byte_end":6779350,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780723,"byte_end":6780743,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780836,"byte_end":6780843,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790442,"byte_end":6790449,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790575,"byte_end":6790600,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790758,"byte_end":6790783,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790918,"byte_end":6790943,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791910,"byte_end":6791920,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6794426,"byte_end":6794436,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6797841,"byte_end":6797851,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798144,"byte_end":6798154,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798459,"byte_end":6798474,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798756,"byte_end":6798771,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798888,"byte_end":6798903,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/lib.rs","byte_start":455,"byte_end":460,"line_start":21,"line_end":21,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/mod.rs","byte_start":6723869,"byte_end":6723885,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":342}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724348,"byte_end":6724358,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724509,"byte_end":6724519,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/bytes_codec.rs","byte_start":6724839,"byte_end":6724849,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":453},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734017,"byte_end":6734021,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6734292,"byte_end":6734298,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6735599,"byte_end":6735605,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6739821,"byte_end":6739827,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":772},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6740089,"byte_end":6740095,"line_start":208,"line_end":208,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":772},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6740873,"byte_end":6740879,"line_start":233,"line_end":233,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":772},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741239,"byte_end":6741243,"line_start":248,"line_end":248,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741381,"byte_end":6741385,"line_start":254,"line_end":254,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741592,"byte_end":6741596,"line_start":264,"line_end":264,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6741991,"byte_end":6741995,"line_start":278,"line_end":278,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6742276,"byte_end":6742280,"line_start":288,"line_end":288,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":727},"to":{"krate":1,"index":2906}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6742497,"byte_end":6742501,"line_start":298,"line_end":298,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":727},"to":{"krate":16,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743030,"byte_end":6743034,"line_start":316,"line_end":316,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6743406,"byte_end":6743410,"line_start":329,"line_end":329,"column_start":33,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":727},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed.rs","byte_start":6744304,"byte_end":6744315,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":481},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745319,"byte_end":6745329,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6745663,"byte_end":6745673,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747165,"byte_end":6747175,"line_start":99,"line_end":99,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":686},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6747488,"byte_end":6747498,"line_start":112,"line_end":112,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":686},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6748588,"byte_end":6748598,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":686},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6749654,"byte_end":6749665,"line_start":199,"line_end":199,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_read.rs","byte_start":6750183,"byte_end":6750194,"line_start":225,"line_end":225,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":641},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753244,"byte_end":6753255,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6753594,"byte_end":6753605,"line_start":53,"line_end":53,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6755033,"byte_end":6755044,"line_start":95,"line_end":95,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":600},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6755762,"byte_end":6755773,"line_start":120,"line_end":120,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":600},"to":{"krate":18,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6756105,"byte_end":6756116,"line_start":137,"line_end":137,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":600},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6756959,"byte_end":6756971,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":563},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6757313,"byte_end":6757325,"line_start":186,"line_end":186,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":563},"to":{"krate":32,"index":9}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6759683,"byte_end":6759695,"line_start":258,"line_end":258,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760031,"byte_end":6760043,"line_start":271,"line_end":271,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760178,"byte_end":6760190,"line_start":277,"line_end":277,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":563},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760397,"byte_end":6760409,"line_start":287,"line_end":287,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":563},"to":{"krate":16,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6760804,"byte_end":6760816,"line_start":301,"line_end":301,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":563},"to":{"krate":16,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/framed_write.rs","byte_start":6761096,"byte_end":6761108,"line_start":311,"line_end":311,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":563},"to":{"krate":0,"index":80}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6775048,"byte_end":6775068,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6778430,"byte_end":6778450,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6779330,"byte_end":6779350,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780723,"byte_end":6780743,"line_start":594,"line_end":594,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6780836,"byte_end":6780843,"line_start":602,"line_end":602,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790442,"byte_end":6790449,"line_start":943,"line_end":943,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":493},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790575,"byte_end":6790600,"line_start":951,"line_end":951,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790758,"byte_end":6790783,"line_start":957,"line_end":957,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":364},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/length_delimited.rs","byte_start":6790918,"byte_end":6790943,"line_start":963,"line_end":963,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6791910,"byte_end":6791920,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6794426,"byte_end":6794436,"line_start":103,"line_end":103,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":34}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6797841,"byte_end":6797851,"line_start":182,"line_end":182,"column_start":18,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":521},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798144,"byte_end":6798154,"line_start":194,"line_end":194,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":521},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798459,"byte_end":6798474,"line_start":209,"line_end":209,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798756,"byte_end":6798771,"line_start":218,"line_end":218,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.2.0/src/codec/lines_codec.rs","byte_start":6798888,"byte_end":6798903,"line_start":224,"line_end":224,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":1620}}]}