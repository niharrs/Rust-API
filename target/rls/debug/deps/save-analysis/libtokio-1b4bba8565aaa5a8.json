{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"fnv\"","--cfg","feature=\"futures-core\"","--cfg","feature=\"io-driver\"","--cfg","feature=\"io-util\"","--cfg","feature=\"iovec\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"mio-uds\"","--cfg","feature=\"rt-core\"","--cfg","feature=\"rt-util\"","--cfg","feature=\"signal\"","--cfg","feature=\"signal-hook-registry\"","--cfg","feature=\"slab\"","--cfg","feature=\"stream\"","--cfg","feature=\"sync\"","--cfg","feature=\"tcp\"","--cfg","feature=\"time\"","--cfg","feature=\"udp\"","--cfg","feature=\"uds\"","--cfg","feature=\"winapi\"","-C","metadata=1b4bba8565aaa5a8","-C","extra-filename=-1b4bba8565aaa5a8","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--extern","bytes=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libbytes-94d8fb0f50c48a9e.rmeta","--extern","fnv=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfnv-0011ed27dc2fbc31.rmeta","--extern","futures_core=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_core-b48a9c1c3be203f5.rmeta","--extern","iovec=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libiovec-0f630f982b7221b9.rmeta","--extern","lazy_static=/Users/niharika/Downloads/webapp/target/rls/debug/deps/liblazy_static-c19d802a86c0b858.rmeta","--extern","libc=/Users/niharika/Downloads/webapp/target/rls/debug/deps/liblibc-bac3f95e77e89ad6.rmeta","--extern","memchr=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmemchr-6f41c91b37b8db6e.rmeta","--extern","mio=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmio-fb8249778e7599eb.rmeta","--extern","mio_uds=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmio_uds-7453b891f1187722.rmeta","--extern","pin_project_lite=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libpin_project_lite-5c102f957b6ff865.rmeta","--extern","signal_hook_registry=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libsignal_hook_registry-bace78488810dba8.rmeta","--extern","slab=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libslab-85370b29d4fd78b2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio-1b4bba8565aaa5a8.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[11905398557701652019,15568126096425657729]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/try_join.rs","num":15,"id":{"name":"pin_project_lite","disambiguator":[3029737169759291666,9942484439807821310]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","num":16,"id":{"name":"bytes","disambiguator":[3234461312631938355,4652367375173356794]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","num":17,"id":{"name":"futures_core","disambiguator":[7001366758905092501,11004721139566071535]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/platform.rs","num":18,"id":{"name":"mio","disambiguator":[11431926200436597215,5132575838010453719]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/platform.rs","num":19,"id":{"name":"net2","disambiguator":[9119776918725886975,8127876557544096078]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","num":20,"id":{"name":"libc","disambiguator":[12029950799728344980,14625873231468315695]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/platform.rs","num":21,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","num":22,"id":{"name":"iovec","disambiguator":[3662113506597968008,9055319988211572080]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","num":23,"id":{"name":"slab","disambiguator":[1409043506054454837,8744282326915100185]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/platform.rs","num":24,"id":{"name":"log","disambiguator":[16869437812774876011,6221816467677339912]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","num":25,"id":{"name":"mio_uds","disambiguator":[3651254062301955048,1922942977027289515]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","num":26,"id":{"name":"lazy_static","disambiguator":[2600192780033545957,15495159354165441647]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","num":27,"id":{"name":"fnv","disambiguator":[13771570177894503084,8684805612069036812]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_until.rs","num":28,"id":{"name":"memchr","disambiguator":[251563329699221058,3480720099078396615]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","num":29,"id":{"name":"signal_hook_registry","disambiguator":[8401647546033715890,13156881933724841041]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","num":30,"id":{"name":"arc_swap","disambiguator":[11698414955222306728,13245458730901588314]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":0,"byte_end":13854,"line_start":1,"line_end":390,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":7916},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/support.rs","byte_start":27126,"byte_end":27132,"line_start":6,"line_end":6,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":2,"index":29206},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/support.rs","byte_start":27152,"byte_end":27155,"line_start":7,"line_end":7,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":2,"index":31640},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/support.rs","byte_start":27176,"byte_end":27180,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":73}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":27284,"byte_end":27294,"line_start":6,"line_end":6,"column_start":22,"column_end":32},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":27296,"byte_end":27305,"line_start":6,"line_end":6,"column_start":34,"column_end":43},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":112},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":27339,"byte_end":27346,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":77}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40024,"byte_end":40036,"line_start":162,"line_end":162,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40081,"byte_end":40090,"line_start":165,"line_end":165,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40135,"byte_end":40144,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40191,"byte_end":40201,"line_start":171,"line_end":171,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1153},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40297,"byte_end":40308,"line_start":177,"line_end":177,"column_start":27,"column_end":38},"alias_span":null,"name":"PollEvented","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40359,"byte_end":40371,"line_start":180,"line_end":180,"column_start":27,"column_end":39},"alias_span":null,"name":"Registration","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1282},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40603,"byte_end":40608,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40610,"byte_end":40618,"line_start":196,"line_end":196,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1279},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40620,"byte_end":40629,"line_start":196,"line_end":196,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40682,"byte_end":40686,"line_start":199,"line_end":199,"column_start":25,"column_end":29},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40742,"byte_end":40746,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2049},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40748,"byte_end":40753,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2211},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40755,"byte_end":40761,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2226},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40763,"byte_end":40767,"line_start":203,"line_end":203,"column_start":30,"column_end":34},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40769,"byte_end":40784,"line_start":203,"line_end":203,"column_start":36,"column_end":51},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1960},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40786,"byte_end":40798,"line_start":203,"line_end":203,"column_start":53,"column_end":65},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40800,"byte_end":40812,"line_start":203,"line_end":203,"column_start":67,"column_end":79},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40814,"byte_end":40827,"line_start":203,"line_end":203,"column_start":81,"column_end":94},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":9357},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40837,"byte_end":40846,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":9351},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40848,"byte_end":40857,"line_start":204,"line_end":204,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":9280},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40859,"byte_end":40868,"line_start":204,"line_end":204,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2031},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40870,"byte_end":40874,"line_start":204,"line_end":204,"column_start":42,"column_end":46},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2047},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40876,"byte_end":40881,"line_start":204,"line_end":204,"column_start":48,"column_end":53},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":9222},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40883,"byte_end":40888,"line_start":204,"line_end":204,"column_start":55,"column_end":60},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2212},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40890,"byte_end":40896,"line_start":204,"line_end":204,"column_start":62,"column_end":68},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2224},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40898,"byte_end":40902,"line_start":204,"line_end":204,"column_start":70,"column_end":74},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":8748},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40904,"byte_end":40909,"line_start":204,"line_end":204,"column_start":76,"column_end":81},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":8653},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40911,"byte_end":40915,"line_start":204,"line_end":204,"column_start":83,"column_end":87},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":2242},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40966,"byte_end":40979,"line_start":208,"line_end":208,"column_start":24,"column_end":37},"alias_span":null,"name":"stream_reader","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":8700},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":40981,"byte_end":40993,"line_start":208,"line_end":208,"column_start":39,"column_end":51},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":1,"index":2472},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":41148,"byte_end":41153,"line_start":213,"line_end":213,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":1,"index":6579},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":41155,"byte_end":41164,"line_start":213,"line_end":213,"column_start":30,"column_end":39},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":1,"index":2470},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":41166,"byte_end":41172,"line_start":213,"line_end":213,"column_start":41,"column_end":47},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":171}},{"kind":"Use","ref_id":{"krate":0,"index":313},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67395,"byte_end":67408,"line_start":26,"line_end":26,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":2584},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","byte_start":8280196,"byte_end":8280204,"line_start":7,"line_end":7,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2375}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","byte_start":8280234,"byte_end":8280242,"line_start":10,"line_end":10,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2375}},{"kind":"Use","ref_id":{"krate":0,"index":2597},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","byte_start":8280244,"byte_end":8280253,"line_start":10,"line_end":10,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2375}},{"kind":"Use","ref_id":{"krate":0,"index":2582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67539,"byte_end":67550,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":2604},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67577,"byte_end":67586,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","byte_start":8327432,"byte_end":8327440,"line_start":7,"line_end":7,"column_start":17,"column_end":25},"alias_span":null,"name":"RecvHalf","value":"","parent":{"krate":0,"index":2606}},{"kind":"Use","ref_id":{"krate":0,"index":2745},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","byte_start":8327442,"byte_end":8327454,"line_start":7,"line_end":7,"column_start":27,"column_end":39},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2606}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","byte_start":8327456,"byte_end":8327464,"line_start":7,"line_end":7,"column_start":41,"column_end":49},"alias_span":null,"name":"SendHalf","value":"","parent":{"krate":0,"index":2606}},{"kind":"Use","ref_id":{"krate":0,"index":2733},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67644,"byte_end":67653,"line_start":41,"line_end":41,"column_start":26,"column_end":35},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":2990},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":8348563,"byte_end":8348571,"line_start":6,"line_end":6,"column_start":19,"column_end":27},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":2751}},{"kind":"Use","ref_id":{"krate":0,"index":2998},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":8348666,"byte_end":8348674,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2751}},{"kind":"Use","ref_id":{"krate":0,"index":3005},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":8348676,"byte_end":8348685,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2751}},{"kind":"Use","ref_id":{"krate":0,"index":3014},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":8348774,"byte_end":8348779,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":2751}},{"kind":"Use","ref_id":{"krate":0,"index":2988},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67715,"byte_end":67727,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":2996},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67757,"byte_end":67769,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":3012},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67797,"byte_end":67807,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":302}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100003,"byte_end":100007,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"self","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100009,"byte_end":100021,"line_start":16,"line_end":16,"column_start":27,"column_end":39},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":209},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100023,"byte_end":100032,"line_start":16,"line_end":16,"column_start":41,"column_end":50},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":265},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100034,"byte_end":100044,"line_start":16,"line_end":16,"column_start":52,"column_end":62},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100109,"byte_end":100124,"line_start":20,"line_end":20,"column_start":25,"column_end":40},"alias_span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100128,"byte_end":100129,"line_start":20,"line_end":20,"column_start":44,"column_end":45},"name":"_","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":1960},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100131,"byte_end":100143,"line_start":20,"line_end":20,"column_start":47,"column_end":59},"alias_span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100147,"byte_end":100148,"line_start":20,"line_end":20,"column_start":63,"column_end":64},"name":"_","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100150,"byte_end":100162,"line_start":20,"line_end":20,"column_start":66,"column_end":78},"alias_span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100166,"byte_end":100167,"line_start":20,"line_end":20,"column_start":82,"column_end":83},"name":"_","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":1996},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100169,"byte_end":100182,"line_start":20,"line_end":20,"column_start":85,"column_end":98},"alias_span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":100186,"byte_end":100187,"line_start":20,"line_end":20,"column_start":102,"column_end":103},"name":"_","value":"","parent":{"krate":0,"index":546}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107713,"byte_end":107720,"line_start":209,"line_end":209,"column_start":24,"column_end":31},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":552}},{"kind":"Use","ref_id":{"krate":0,"index":3699},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107805,"byte_end":107811,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":552}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107813,"byte_end":107828,"line_start":215,"line_end":215,"column_start":32,"column_end":47},"alias_span":null,"name":"TryCurrentError","value":"","parent":{"krate":0,"index":552}},{"kind":"Use","ref_id":{"krate":0,"index":3803},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580181,"byte_end":8580187,"line_start":47,"line_end":47,"column_start":17,"column_end":23},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":3798}},{"kind":"Use","ref_id":{"krate":0,"index":4058},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617298,"byte_end":8617308,"line_start":18,"line_end":18,"column_start":18,"column_end":28},"alias_span":null,"name":"FromStream","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4150},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617338,"byte_end":8617343,"line_start":21,"line_end":21,"column_start":17,"column_end":22},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4589},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617345,"byte_end":8617350,"line_start":21,"line_end":21,"column_start":24,"column_end":29},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4251},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617516,"byte_end":8617520,"line_start":36,"line_end":36,"column_start":16,"column_end":20},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4596},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617522,"byte_end":8617526,"line_start":36,"line_end":36,"column_start":22,"column_end":26},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4341},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617636,"byte_end":8617640,"line_start":48,"line_end":48,"column_start":16,"column_end":20},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4610},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617642,"byte_end":8617646,"line_start":48,"line_end":48,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617681,"byte_end":8617688,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4616},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617690,"byte_end":8617697,"line_start":51,"line_end":51,"column_start":28,"column_end":35},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":4623},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617737,"byte_end":8617746,"line_start":54,"line_end":54,"column_start":21,"column_end":30},"alias_span":null,"name":"StreamMap","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":17,"index":68},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618038,"byte_end":8618044,"line_start":77,"line_end":77,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":3980}},{"kind":"Use","ref_id":{"krate":0,"index":5924},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737616,"byte_end":8737623,"line_start":424,"line_end":424,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":5936},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737625,"byte_end":8737642,"line_start":424,"line_end":424,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":4924},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777118,"byte_end":8777125,"line_start":42,"line_end":42,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":4918},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777127,"byte_end":8777135,"line_start":42,"line_end":42,"column_start":34,"column_end":42},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":4909},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777137,"byte_end":8777143,"line_start":42,"line_end":42,"column_start":44,"column_end":50},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":5195},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777221,"byte_end":8777238,"line_start":49,"line_end":49,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":5189},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777240,"byte_end":8777257,"line_start":49,"line_end":49,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":5180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777259,"byte_end":8777274,"line_start":49,"line_end":49,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":4823}},{"kind":"Use","ref_id":{"krate":0,"index":6057},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737724,"byte_end":8737729,"line_start":431,"line_end":431,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":5258},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737731,"byte_end":8737741,"line_start":431,"line_end":431,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6069},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737781,"byte_end":8737787,"line_start":434,"line_end":434,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6202},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737924,"byte_end":8737933,"line_start":441,"line_end":441,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6206},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737935,"byte_end":8737950,"line_start":441,"line_end":441,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6218},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737991,"byte_end":8737997,"line_start":444,"line_end":444,"column_start":22,"column_end":28},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6225},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737999,"byte_end":8738014,"line_start":444,"line_end":444,"column_start":30,"column_end":45},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":6234},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8738016,"byte_end":8738032,"line_start":444,"line_end":444,"column_start":47,"column_end":63},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":4668}},{"kind":"Use","ref_id":{"krate":0,"index":3646},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992221,"byte_end":8992230,"line_start":227,"line_end":227,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":3648},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992232,"byte_end":8992242,"line_start":227,"line_end":227,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6317},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992280,"byte_end":8992285,"line_start":230,"line_end":230,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6319},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992330,"byte_end":8992339,"line_start":233,"line_end":233,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6476},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992394,"byte_end":8992405,"line_start":238,"line_end":238,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6468},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992407,"byte_end":8992415,"line_start":238,"line_end":238,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6420},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8992463,"byte_end":8992471,"line_start":241,"line_end":241,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":6300}},{"kind":"Use","ref_id":{"krate":0,"index":6317},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12589,"byte_end":12594,"line_start":343,"line_end":343,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":6976},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027018,"byte_end":9027028,"line_start":69,"line_end":69,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027058,"byte_end":9027067,"line_start":72,"line_end":72,"column_start":17,"column_end":26},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6581},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027069,"byte_end":9027080,"line_start":72,"line_end":72,"column_start":28,"column_end":39},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7018},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027082,"byte_end":9027087,"line_start":72,"line_end":72,"column_start":41,"column_end":46},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7075},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027141,"byte_end":9027146,"line_start":77,"line_end":77,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7087},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027185,"byte_end":9027192,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6834},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027228,"byte_end":9027236,"line_start":83,"line_end":83,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6835},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027238,"byte_end":9027249,"line_start":83,"line_end":83,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7110},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027251,"byte_end":9027259,"line_start":83,"line_end":83,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6861},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027309,"byte_end":9027316,"line_start":87,"line_end":87,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":6863},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027318,"byte_end":9027328,"line_start":87,"line_end":87,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7122},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027330,"byte_end":9027337,"line_start":87,"line_end":87,"column_start":40,"column_end":47},"alias_span":null,"name":"Elapsed","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7115},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027339,"byte_end":9027346,"line_start":87,"line_end":87,"column_start":49,"column_end":56},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7144},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027405,"byte_end":9027413,"line_start":91,"line_end":91,"column_start":24,"column_end":32},"alias_span":null,"name":"throttle","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":0,"index":7476},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027415,"byte_end":9027423,"line_start":91,"line_end":91,"column_start":34,"column_end":42},"alias_span":null,"name":"Throttle","value":"","parent":{"krate":0,"index":6491}},{"kind":"Use","ref_id":{"krate":2,"index":31465},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9027532,"byte_end":9027540,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":6491}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":0,"byte_end":13854,"line_start":1,"line_end":390,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":77},{"krate":0,"index":171},{"krate":0,"index":302},{"krate":0,"index":362},{"krate":0,"index":499},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":723},{"krate":0,"index":3798},{"krate":0,"index":3980},{"krate":0,"index":4668},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6491},{"krate":0,"index":769}],"decl_id":null,"docs":" A runtime for writing reliable, asynchronous, and slim applications.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":56,"byte_end":168,"line_start":2,"line_end":6,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":169,"byte_end":275,"line_start":7,"line_end":12,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":276,"byte_end":319,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"! A runtime for writing reliable, asynchronous, and slim applications.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":477,"byte_end":549,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":550,"byte_end":553,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":554,"byte_end":634,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! applications with the Rust programming language. At a high level, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":635,"byte_end":707,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"! provides a few major components:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":708,"byte_end":744,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":745,"byte_end":748,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":749,"byte_end":816,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"!   [synchronization primitives and channels][sync] and [timeouts, delays, and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":817,"byte_end":897,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"!   intervals][time].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":898,"byte_end":921,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"! * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":922,"byte_end":1009,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"!   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1010,"byte_end":1083,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1084,"byte_end":1162,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"!   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1163,"byte_end":1243,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"!   IOCP, etc...), and a high performance timer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1244,"byte_end":1294,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1295,"byte_end":1298,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! Guide level documentation is found on the [website].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1299,"byte_end":1355,"line_start":35,"line_end":35,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! [tasks]: #working-with-tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1360,"byte_end":1392,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"! [sync]: crate::sync","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1393,"byte_end":1416,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"! [time]: crate::time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1417,"byte_end":1440,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"! [io]: #asynchronous-io","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1441,"byte_end":1467,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"! [net]: crate::net","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1468,"byte_end":1489,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1490,"byte_end":1509,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"! [process]: crate::process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1510,"byte_end":1539,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"! [signal]: crate::signal","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1540,"byte_end":1567,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"! [fs]: crate::fs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1568,"byte_end":1587,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"! [runtime]: crate::runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1588,"byte_end":1617,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"! [website]: https://tokio.rs/docs/overview/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1618,"byte_end":1664,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1665,"byte_end":1668,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! # A Tour of Tokio","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1669,"byte_end":1690,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1691,"byte_end":1694,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1695,"byte_end":1774,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1775,"byte_end":1848,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"! section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1849,"byte_end":1928,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! their uses.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1929,"byte_end":1944,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":1949,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"! enabling the `full` feature flag:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2022,"byte_end":2059,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2060,"byte_end":2063,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2064,"byte_end":2075,"line_start":59,"line_end":59,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2076,"byte_end":2128,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2129,"byte_end":2136,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2137,"byte_end":2140,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ## Feature flags","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2141,"byte_end":2161,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2162,"byte_end":2165,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2166,"byte_end":2247,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"! is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2248,"byte_end":2326,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2327,"byte_end":2407,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"! case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2408,"byte_end":2485,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"! above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2486,"byte_end":2569,"line_start":69,"line_end":69,"column_start":1,"column_end":84}},{"value":"! that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2570,"byte_end":2647,"line_start":70,"line_end":70,"column_start":1,"column_end":78}},{"value":"! recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2648,"byte_end":2735,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"! Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2736,"byte_end":2817,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"! need.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2818,"byte_end":2827,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2828,"byte_end":2831,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! - `full`: Enables all Tokio public API features listed below.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2832,"byte_end":2897,"line_start":75,"line_end":75,"column_start":1,"column_end":66}},{"value":"! - `rt-core`: Enables `tokio::spawn` and the basic (single-threaded) scheduler.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2898,"byte_end":2980,"line_start":76,"line_end":76,"column_start":1,"column_end":83}},{"value":"! - `rt-threaded`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":2981,"byte_end":3063,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"! - `rt-util`: Enables non-scheduler utilities.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3064,"byte_end":3113,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"! - `io-driver`: Enables the `mio` based IO driver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3114,"byte_end":3167,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"! - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3168,"byte_end":3219,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"! - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3220,"byte_end":3280,"line_start":81,"line_end":81,"column_start":1,"column_end":61}},{"value":"! - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3281,"byte_end":3371,"line_start":82,"line_end":82,"column_start":1,"column_end":91}},{"value":"! - `tcp`: Enables all `tokio::net::tcp` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3372,"byte_end":3421,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"! - `udp`: Enables all `tokio::net::udp` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3422,"byte_end":3471,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"! - `uds`: Enables all `tokio::net::unix` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3472,"byte_end":3522,"line_start":85,"line_end":85,"column_start":1,"column_end":51}},{"value":"! - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3523,"byte_end":3600,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"! the built in timer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3601,"byte_end":3624,"line_start":87,"line_end":87,"column_start":1,"column_end":24}},{"value":"! - `process`: Enables `tokio::process` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3625,"byte_end":3673,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"! - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3674,"byte_end":3743,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3744,"byte_end":3790,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"! - `stream`: Enables optional `Stream` implementations for types within Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3791,"byte_end":3872,"line_start":91,"line_end":91,"column_start":1,"column_end":82}},{"value":"! - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3873,"byte_end":3923,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"! - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3924,"byte_end":3962,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"! - `dns`: Enables async `tokio::net::ToSocketAddrs`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":3963,"byte_end":4018,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"! - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4019,"byte_end":4097,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! - `blocking`: Enables `block_in_place` and `spawn_blocking`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4098,"byte_end":4162,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4163,"byte_end":4166,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4167,"byte_end":4249,"line_start":98,"line_end":98,"column_start":1,"column_end":83}},{"value":"! always available._","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4250,"byte_end":4272,"line_start":99,"line_end":99,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4273,"byte_end":4276,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! ### Internal features","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4277,"byte_end":4302,"line_start":101,"line_end":101,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4303,"byte_end":4306,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! These features do not expose any new API, but influence internal","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4307,"byte_end":4375,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"! implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4376,"byte_end":4439,"line_start":104,"line_end":104,"column_start":1,"column_end":64}},{"value":"! dependencies. They are not included in `full`:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4440,"byte_end":4490,"line_start":105,"line_end":105,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4491,"byte_end":4494,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4495,"byte_end":4574,"line_start":107,"line_end":107,"column_start":1,"column_end":80}},{"value":"! synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4575,"byte_end":4652,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"! _parking_lot_ release in use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4653,"byte_end":4686,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4687,"byte_end":4690,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4691,"byte_end":4788,"line_start":111,"line_end":111,"column_start":1,"column_end":98}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4789,"byte_end":4792,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! ### Authoring applications","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4793,"byte_end":4823,"line_start":113,"line_end":113,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4824,"byte_end":4827,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4828,"byte_end":4909,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"! worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4910,"byte_end":4995,"line_start":116,"line_end":116,"column_start":1,"column_end":86}},{"value":"! going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":4996,"byte_end":5080,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"! building your application.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5081,"byte_end":5111,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5112,"byte_end":5115,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5116,"byte_end":5132,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5133,"byte_end":5136,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! This example shows the quickest way to get started with Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5137,"byte_end":5203,"line_start":122,"line_end":122,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5204,"byte_end":5207,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5208,"byte_end":5219,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"full\"] }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5220,"byte_end":5272,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5273,"byte_end":5280,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5281,"byte_end":5284,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! ### Authoring libraries","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5285,"byte_end":5312,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5313,"byte_end":5316,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! As a library author your goal should be to provide the lighest weight crate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5317,"byte_end":5396,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"! that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5397,"byte_end":5479,"line_start":131,"line_end":131,"column_start":1,"column_end":83}},{"value":"! the features you need. This allows users to pick up your crate without having","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5480,"byte_end":5561,"line_start":132,"line_end":132,"column_start":1,"column_end":82}},{"value":"! to enable unnecessary features.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5562,"byte_end":5597,"line_start":133,"line_end":133,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5598,"byte_end":5601,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! #### Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5602,"byte_end":5618,"line_start":135,"line_end":135,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5619,"byte_end":5622,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! This example shows how you may want to import features for a library that just","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5623,"byte_end":5705,"line_start":137,"line_end":137,"column_start":1,"column_end":83}},{"value":"! needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5706,"byte_end":5756,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5757,"byte_end":5760,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5761,"byte_end":5772,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"! tokio = { version = \"0.2\", features = [\"rt-core\", \"tcp\"] }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5773,"byte_end":5835,"line_start":141,"line_end":141,"column_start":1,"column_end":63}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5836,"byte_end":5843,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5844,"byte_end":5847,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! ## Working With Tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5848,"byte_end":5873,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5874,"byte_end":5877,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5878,"byte_end":5954,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"! units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":5955,"byte_end":6038,"line_start":147,"line_end":147,"column_start":1,"column_end":84}},{"value":"! important tools for working with tasks:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6039,"byte_end":6082,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6083,"byte_end":6086,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6087,"byte_end":6166,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"!   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6167,"byte_end":6250,"line_start":151,"line_end":151,"column_start":1,"column_end":84}},{"value":"! * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6251,"byte_end":6329,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"!   task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6330,"byte_end":6349,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6350,"byte_end":6353,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! The [`tokio::task`] module is present only when the \"rt-core\" feature flag","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6354,"byte_end":6432,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"! is enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6433,"byte_end":6448,"line_start":156,"line_end":156,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6449,"byte_end":6452,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6453,"byte_end":6496,"line_start":158,"line_end":158,"column_start":1,"column_end":44}},{"value":"! [`tokio::task`]: crate::task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6497,"byte_end":6529,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"! [`spawn`]: crate::task::spawn()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6530,"byte_end":6565,"line_start":160,"line_end":160,"column_start":1,"column_end":36}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6566,"byte_end":6609,"line_start":161,"line_end":161,"column_start":1,"column_end":44}},{"value":"! [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6610,"byte_end":6663,"line_start":162,"line_end":162,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6664,"byte_end":6667,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6668,"byte_end":6746,"line_start":164,"line_end":164,"column_start":1,"column_end":79}},{"value":"! needing to communicate or share data. These include:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6747,"byte_end":6803,"line_start":165,"line_end":165,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6804,"byte_end":6807,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6808,"byte_end":6881,"line_start":167,"line_end":167,"column_start":1,"column_end":74}},{"value":"!   between tasks,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6882,"byte_end":6902,"line_start":168,"line_end":168,"column_start":1,"column_end":21}},{"value":"! * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6903,"byte_end":6978,"line_start":169,"line_end":169,"column_start":1,"column_end":76}},{"value":"!   value,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6979,"byte_end":6991,"line_start":170,"line_end":170,"column_start":1,"column_end":13}},{"value":"! * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":6992,"byte_end":7072,"line_start":171,"line_end":171,"column_start":1,"column_end":81}},{"value":"!   beginning a computation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7073,"byte_end":7103,"line_start":172,"line_end":172,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7104,"byte_end":7107,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7108,"byte_end":7184,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"! enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7185,"byte_end":7197,"line_start":175,"line_end":175,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7198,"byte_end":7201,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"! [`tokio::sync`]: crate::sync","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7202,"byte_end":7234,"line_start":177,"line_end":177,"column_start":1,"column_end":33}},{"value":"! [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7235,"byte_end":7268,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"! [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7269,"byte_end":7306,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"! [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7307,"byte_end":7344,"line_start":180,"line_end":180,"column_start":1,"column_end":38}},{"value":"! [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7345,"byte_end":7376,"line_start":181,"line_end":181,"column_start":1,"column_end":32}},{"value":"! [`watch`]: crate::sync::watch","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7377,"byte_end":7410,"line_start":182,"line_end":182,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7411,"byte_end":7414,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"! The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7415,"byte_end":7486,"line_start":184,"line_end":184,"column_start":1,"column_end":72}},{"value":"! scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7487,"byte_end":7567,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"! tasks, [delaying][delay] work to run in the future, or [repeating an operation at an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7568,"byte_end":7656,"line_start":186,"line_end":186,"column_start":1,"column_end":89}},{"value":"! interval][interval].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7657,"byte_end":7681,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7682,"byte_end":7685,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7686,"byte_end":7761,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! [`tokio::time`]: crate::time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7766,"byte_end":7798,"line_start":191,"line_end":191,"column_start":1,"column_end":33}},{"value":"! [delay]: crate::time::delay_for()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7799,"byte_end":7836,"line_start":192,"line_end":192,"column_start":1,"column_end":38}},{"value":"! [interval]: crate::time::interval()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7837,"byte_end":7876,"line_start":193,"line_end":193,"column_start":1,"column_end":40}},{"value":"! [timeout]: crate::time::timeout()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7877,"byte_end":7914,"line_start":194,"line_end":194,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7915,"byte_end":7918,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"! Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7919,"byte_end":7997,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"! applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":7998,"byte_end":8082,"line_start":197,"line_end":197,"column_start":1,"column_end":85}},{"value":"! Tokio runtime. In use-cases where manual control over the runtime is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8083,"byte_end":8155,"line_start":198,"line_end":198,"column_start":1,"column_end":73}},{"value":"! required, the [`tokio::runtime`] module provides APIs for configuring and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8156,"byte_end":8233,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"! managing runtimes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8234,"byte_end":8256,"line_start":200,"line_end":200,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8257,"byte_end":8260,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"! Using the runtime requires the \"rt-core\" or \"rt-threaded\" feature flags, to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8261,"byte_end":8340,"line_start":202,"line_end":202,"column_start":1,"column_end":80}},{"value":"! enable the basic [single-threaded scheduler][rt-core] and the [thread-pool","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8341,"byte_end":8419,"line_start":203,"line_end":203,"column_start":1,"column_end":79}},{"value":"! scheduler][rt-threaded], respectively. See the [`runtime` module","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8420,"byte_end":8488,"line_start":204,"line_end":204,"column_start":1,"column_end":69}},{"value":"! documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8489,"byte_end":8567,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"! flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8568,"byte_end":8638,"line_start":206,"line_end":206,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8639,"byte_end":8642,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"! [main]: attr.main.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8643,"byte_end":8669,"line_start":208,"line_end":208,"column_start":1,"column_end":27}},{"value":"! [`tokio::runtime`]: crate::runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8670,"byte_end":8708,"line_start":209,"line_end":209,"column_start":1,"column_end":39}},{"value":"! [`Builder`]: crate::runtime::Builder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8709,"byte_end":8749,"line_start":210,"line_end":210,"column_start":1,"column_end":41}},{"value":"! [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8750,"byte_end":8790,"line_start":211,"line_end":211,"column_start":1,"column_end":41}},{"value":"! [rt-core]: runtime/index.html#basic-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8791,"byte_end":8840,"line_start":212,"line_end":212,"column_start":1,"column_end":50}},{"value":"! [rt-threaded]: runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8841,"byte_end":8897,"line_start":213,"line_end":213,"column_start":1,"column_end":57}},{"value":"! [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8898,"byte_end":8953,"line_start":214,"line_end":214,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8954,"byte_end":8957,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! ## Asynchronous IO","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8958,"byte_end":8980,"line_start":216,"line_end":216,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8981,"byte_end":8984,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":8985,"byte_end":9064,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"! to perform input and output asynchronously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9065,"byte_end":9112,"line_start":219,"line_end":219,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9113,"byte_end":9116,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"! The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9117,"byte_end":9196,"line_start":221,"line_end":221,"column_start":1,"column_end":80}},{"value":"! the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9197,"byte_end":9277,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"! when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9278,"byte_end":9358,"line_start":223,"line_end":223,"column_start":1,"column_end":81}},{"value":"! functions for working with these traits, forming as an asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9359,"byte_end":9430,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"! counterpart to [`std::io`]. When the \"io-driver\" feature flag is enabled, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9431,"byte_end":9511,"line_start":225,"line_end":225,"column_start":1,"column_end":81}},{"value":"! also provides utilities for library authors implementing I/O resources.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9512,"byte_end":9587,"line_start":226,"line_end":226,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9588,"byte_end":9591,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"! Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9592,"byte_end":9672,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"! with the operating system asynchronously. These include:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9673,"byte_end":9733,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9734,"byte_end":9737,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9738,"byte_end":9817,"line_start":231,"line_end":231,"column_start":1,"column_end":80}},{"value":"!   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9818,"byte_end":9887,"line_start":232,"line_end":232,"column_start":1,"column_end":70}},{"value":"! * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9888,"byte_end":9965,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"!   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":9966,"byte_end":10022,"line_start":234,"line_end":234,"column_start":1,"column_end":57}},{"value":"! * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10023,"byte_end":10103,"line_start":235,"line_end":235,"column_start":1,"column_end":81}},{"value":"!   (enabled by the \"signal\" feature flag),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10104,"byte_end":10149,"line_start":236,"line_end":236,"column_start":1,"column_end":46}},{"value":"! * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10150,"byte_end":10229,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"!   the \"process\" feature flag).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10230,"byte_end":10264,"line_start":238,"line_end":238,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10265,"byte_end":10268,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"! [`tokio::io`]: crate::io","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10269,"byte_end":10297,"line_start":240,"line_end":240,"column_start":1,"column_end":29}},{"value":"! [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10298,"byte_end":10337,"line_start":241,"line_end":241,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10338,"byte_end":10379,"line_start":242,"line_end":242,"column_start":1,"column_end":42}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10380,"byte_end":10425,"line_start":243,"line_end":243,"column_start":1,"column_end":46}},{"value":"! [`std::io`]: std::io","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10426,"byte_end":10450,"line_start":244,"line_end":244,"column_start":1,"column_end":25}},{"value":"! [`tokio::net`]: crate::net","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10451,"byte_end":10481,"line_start":245,"line_end":245,"column_start":1,"column_end":31}},{"value":"! [TCP]: crate::net::tcp","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10482,"byte_end":10508,"line_start":246,"line_end":246,"column_start":1,"column_end":27}},{"value":"! [UDP]: crate::net::udp","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10509,"byte_end":10535,"line_start":247,"line_end":247,"column_start":1,"column_end":27}},{"value":"! [UDS]: crate::net::unix","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10536,"byte_end":10563,"line_start":248,"line_end":248,"column_start":1,"column_end":28}},{"value":"! [`tokio::fs`]: crate::fs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10564,"byte_end":10592,"line_start":249,"line_end":249,"column_start":1,"column_end":29}},{"value":"! [`std::fs`]: std::fs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10593,"byte_end":10617,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"! [`tokio::signal`]: crate::signal","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10618,"byte_end":10654,"line_start":251,"line_end":251,"column_start":1,"column_end":37}},{"value":"! [`tokio::process`]: crate::process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10655,"byte_end":10693,"line_start":252,"line_end":252,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10694,"byte_end":10697,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10698,"byte_end":10712,"line_start":254,"line_end":254,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10713,"byte_end":10716,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"! A simple TCP echo server:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10717,"byte_end":10746,"line_start":256,"line_end":256,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10747,"byte_end":10750,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10751,"byte_end":10764,"line_start":258,"line_end":258,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10765,"byte_end":10797,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10798,"byte_end":10824,"line_start":260,"line_end":260,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10825,"byte_end":10828,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10829,"byte_end":10847,"line_start":262,"line_end":262,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10848,"byte_end":10911,"line_start":263,"line_end":263,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10912,"byte_end":10982,"line_start":264,"line_end":264,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10983,"byte_end":10986,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":10987,"byte_end":11001,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11002,"byte_end":11061,"line_start":267,"line_end":267,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11062,"byte_end":11065,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11066,"byte_end":11103,"line_start":269,"line_end":269,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11104,"byte_end":11144,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11145,"byte_end":11148,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11149,"byte_end":11229,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11230,"byte_end":11252,"line_start":273,"line_end":273,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11253,"byte_end":11316,"line_start":274,"line_end":274,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11317,"byte_end":11357,"line_start":275,"line_end":275,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11358,"byte_end":11408,"line_start":276,"line_end":276,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11409,"byte_end":11444,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11445,"byte_end":11480,"line_start":278,"line_end":278,"column_start":1,"column_end":36}},{"value":"!                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11481,"byte_end":11564,"line_start":279,"line_end":279,"column_start":1,"column_end":84}},{"value":"!                         return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11565,"byte_end":11600,"line_start":280,"line_end":280,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11601,"byte_end":11626,"line_start":281,"line_end":281,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11627,"byte_end":11649,"line_start":282,"line_end":282,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11650,"byte_end":11653,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11654,"byte_end":11696,"line_start":284,"line_end":284,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11697,"byte_end":11769,"line_start":285,"line_end":285,"column_start":1,"column_end":73}},{"value":"!                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11770,"byte_end":11848,"line_start":286,"line_end":286,"column_start":1,"column_end":79}},{"value":"!                     return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11849,"byte_end":11880,"line_start":287,"line_end":287,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11881,"byte_end":11902,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11903,"byte_end":11920,"line_start":289,"line_end":289,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11921,"byte_end":11936,"line_start":290,"line_end":290,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11937,"byte_end":11946,"line_start":291,"line_end":291,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11947,"byte_end":11952,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":11953,"byte_end":11960,"line_start":293,"line_end":293,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":73}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12149,"byte_end":12161,"line_start":299,"line_end":299,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/mod.rs","byte_start":13891,"byte_end":13911,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":73},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":77},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":170}],"decl_id":null,"docs":" Asynchronous values.\n","sig":null,"attributes":[{"value":"allow(unused_imports, dead_code)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":27183,"byte_end":27219,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"! Asynchronous values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/mod.rs","byte_start":27221,"byte_end":27245,"line_start":3,"line_end":3,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":855},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27710,"byte_end":27716,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27675,"byte_end":27705,"line_start":11,"line_end":11,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":858},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27770,"byte_end":27774,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27727,"byte_end":27765,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":861},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27936,"byte_end":27940,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":853},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27793,"byte_end":27859,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27864,"byte_end":27931,"line_start":16,"line_end":16,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":853},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27646,"byte_end":27655,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":858},{"krate":0,"index":861}],"decl_id":null,"docs":" A future that may have completed.\n","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":27582,"byte_end":27619,"line_start":8,"line_end":8,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28103,"byte_end":28113,"line_start":24,"line_end":24,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28058,"byte_end":28095,"line_start":23,"line_end":23,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28516,"byte_end":28526,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28232,"byte_end":28317,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28322,"byte_end":28393,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28398,"byte_end":28471,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28476,"byte_end":28504,"line_start":32,"line_end":32,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28904,"byte_end":28915,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempts to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28783,"byte_end":28850,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ towards completion.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28855,"byte_end":28878,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28883,"byte_end":28892,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30127,"byte_end":30133,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":109}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30075,"byte_end":30115,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":112},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30263,"byte_end":30270,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].\n","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30184,"byte_end":30255,"line_start":15,"line_end":15,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31041,"byte_end":31046,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":30806,"byte_end":30853,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":30854,"byte_end":30857,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":30858,"byte_end":30935,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31004,"byte_end":31029,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":171},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":301},{"krate":0,"index":948},{"krate":0,"index":1044},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1126},{"krate":0,"index":1162},{"krate":0,"index":1231},{"krate":0,"index":1235},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":2372},{"krate":0,"index":1272}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"! Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":33801,"byte_end":33878,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":33879,"byte_end":33882,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":33883,"byte_end":33954,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"! defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":33955,"byte_end":34035,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34036,"byte_end":34110,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34111,"byte_end":34114,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # AsyncRead and AsyncWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34115,"byte_end":34145,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34146,"byte_end":34149,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34150,"byte_end":34230,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34231,"byte_end":34308,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"! input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34309,"byte_end":34386,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"! _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34387,"byte_end":34467,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34468,"byte_end":34546,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34547,"byte_end":34612,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34613,"byte_end":34616,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Another difference is that [`AsyncRead`] and [`AsyncWrite`] only contain","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34617,"byte_end":34693,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"! core methods needed to provide asynchronous reading and writing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34694,"byte_end":34761,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"! functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34762,"byte_end":34841,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34842,"byte_end":34916,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! implemented for all values that implement [`AsyncRead`] and [`AsyncWrite`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34917,"byte_end":34995,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! respectively.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":34996,"byte_end":35013,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35014,"byte_end":35017,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! End users will rarely interact directly with [`AsyncRead`] and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35018,"byte_end":35084,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"! [`AsyncWrite`]. Instead, they will use the async functions defined in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35085,"byte_end":35162,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"! extension traits. Library authors are expected to implement [`AsyncRead`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35163,"byte_end":35240,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"! and [`AsyncWrite`] in order to provide types that behave like byte streams.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35241,"byte_end":35320,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35321,"byte_end":35324,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! Even with these differences, Tokio's [`AsyncRead`] and [`AsyncWrite`] traits","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35325,"byte_end":35405,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35406,"byte_end":35481,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"! `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35482,"byte_end":35562,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35563,"byte_end":35634,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"! `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35635,"byte_end":35704,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35705,"byte_end":35708,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! For example, the standard library documentation introduces `Read` by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35709,"byte_end":35781,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"! [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35782,"byte_end":35862,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"! can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35863,"byte_end":35916,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35917,"byte_end":35920,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35921,"byte_end":35934,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35935,"byte_end":35975,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":35976,"byte_end":36000,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36001,"byte_end":36004,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36005,"byte_end":36023,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36024,"byte_end":36063,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"!     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36064,"byte_end":36113,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"!     let mut buffer = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36114,"byte_end":36147,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36148,"byte_end":36151,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     // read up to 10 bytes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36152,"byte_end":36182,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"!     let n = f.read(&mut buffer).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36183,"byte_end":36226,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36227,"byte_end":36230,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"!     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36231,"byte_end":36281,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36282,"byte_end":36296,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36297,"byte_end":36302,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36303,"byte_end":36310,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36311,"byte_end":36314,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! [`File`]: crate::fs::File","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36315,"byte_end":36344,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"! [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36345,"byte_end":36385,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"! [`std::fs::File`]: std::fs::File","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36386,"byte_end":36422,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"! [std_example]: https://doc.rust-lang.org/std/io/index.html#read-and-write","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36423,"byte_end":36500,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36501,"byte_end":36504,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ## Buffered Readers and Writers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36505,"byte_end":36540,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36541,"byte_end":36544,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36545,"byte_end":36626,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"! making near-constant calls to the operating system. To help with this,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36627,"byte_end":36701,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"! `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36702,"byte_end":36780,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! and therefore, `tokio::io` does as well.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36781,"byte_end":36825,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36826,"byte_end":36829,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36830,"byte_end":36900,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"! [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36901,"byte_end":36979,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"! wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":36980,"byte_end":37058,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"! of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37059,"byte_end":37136,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37137,"byte_end":37140,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37141,"byte_end":37216,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"! extra methods to any async reader:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37217,"byte_end":37255,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37256,"byte_end":37259,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37260,"byte_end":37273,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37274,"byte_end":37328,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37329,"byte_end":37353,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37354,"byte_end":37357,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37358,"byte_end":37376,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37377,"byte_end":37416,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"!     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37417,"byte_end":37462,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"!     let mut reader = BufReader::new(f);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37463,"byte_end":37506,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"!     let mut buffer = String::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37507,"byte_end":37546,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37547,"byte_end":37550,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"!     // read a line into buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37551,"byte_end":37585,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"!     reader.read_line(&mut buffer).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37586,"byte_end":37631,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37632,"byte_end":37635,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"!     println!(\"{}\", buffer);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37636,"byte_end":37667,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37668,"byte_end":37682,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37683,"byte_end":37688,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37689,"byte_end":37696,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37697,"byte_end":37700,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37701,"byte_end":37782,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"! to [`write`](crate::io::AsyncWriteExt::write):","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37783,"byte_end":37833,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37834,"byte_end":37837,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37838,"byte_end":37851,"line_start":98,"line_end":98,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37852,"byte_end":37904,"line_start":99,"line_end":99,"column_start":1,"column_end":53}},{"value":"! use tokio::fs::File;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37905,"byte_end":37929,"line_start":100,"line_end":100,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37930,"byte_end":37933,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37934,"byte_end":37952,"line_start":102,"line_end":102,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37953,"byte_end":37992,"line_start":103,"line_end":103,"column_start":1,"column_end":40}},{"value":"!     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":37993,"byte_end":38040,"line_start":104,"line_end":104,"column_start":1,"column_end":48}},{"value":"!     {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38041,"byte_end":38050,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"!         let mut writer = BufWriter::new(f);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38051,"byte_end":38098,"line_start":106,"line_end":106,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38099,"byte_end":38102,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"!         // write a byte to the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38103,"byte_end":38144,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"!         writer.write(&[42u8]).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38145,"byte_end":38186,"line_start":109,"line_end":109,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38187,"byte_end":38190,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"!     } // the buffer is flushed once writer goes out of scope","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38191,"byte_end":38255,"line_start":111,"line_end":111,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38256,"byte_end":38259,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38260,"byte_end":38274,"line_start":113,"line_end":113,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38275,"byte_end":38280,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38281,"byte_end":38288,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38289,"byte_end":38292,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! [stdbuf]: https://doc.rust-lang.org/std/io/index.html#bufreader-and-bufwriter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38293,"byte_end":38374,"line_start":117,"line_end":117,"column_start":1,"column_end":82}},{"value":"! [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38375,"byte_end":38417,"line_start":118,"line_end":118,"column_start":1,"column_end":43}},{"value":"! [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38418,"byte_end":38463,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"! [`BufReader`]: crate::io::BufReader","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38464,"byte_end":38503,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"! [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38504,"byte_end":38543,"line_start":121,"line_end":121,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38544,"byte_end":38547,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38548,"byte_end":38592,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38593,"byte_end":38596,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Because they are traits, we can implement `AsyncRead` and `AsyncWrite` for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38597,"byte_end":38675,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"! our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38676,"byte_end":38755,"line_start":126,"line_end":126,"column_start":1,"column_end":80}},{"value":"! non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38756,"byte_end":38830,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"! other words, these types must never block the thread, and instead the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38831,"byte_end":38904,"line_start":128,"line_end":128,"column_start":1,"column_end":74}},{"value":"! current task is notified when the I/O resource is ready.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38905,"byte_end":38965,"line_start":129,"line_end":129,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38966,"byte_end":38969,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # Standard input and output","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":38970,"byte_end":39001,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39002,"byte_end":39005,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39006,"byte_end":39086,"line_start":133,"line_end":133,"column_start":1,"column_end":81}},{"value":"! These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39087,"byte_end":39163,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"! implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39164,"byte_end":39211,"line_start":135,"line_end":135,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39212,"byte_end":39215,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39216,"byte_end":39289,"line_start":137,"line_end":137,"column_start":1,"column_end":74}},{"value":"! context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39290,"byte_end":39366,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"! function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39367,"byte_end":39443,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39444,"byte_end":39447,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! [input]: fn.stdin.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39448,"byte_end":39474,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"! [output]: fn.stdout.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39475,"byte_end":39503,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"! [error]: fn.stderr.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39504,"byte_end":39531,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39532,"byte_end":39535,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! # `std` re-exports","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39536,"byte_end":39558,"line_start":145,"line_end":145,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39559,"byte_end":39562,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! Additionally, [`Error`], [`ErrorKind`], and [`Result`] are re-exported","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39563,"byte_end":39637,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"! from `std::io` for ease of use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39638,"byte_end":39673,"line_start":148,"line_end":148,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39674,"byte_end":39677,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39678,"byte_end":39717,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39718,"byte_end":39759,"line_start":151,"line_end":151,"column_start":1,"column_end":42}},{"value":"! [`Error`]: struct.Error.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39760,"byte_end":39792,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"! [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39793,"byte_end":39831,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"! [`Result`]: type.Result.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39832,"byte_end":39864,"line_start":154,"line_end":154,"column_start":1,"column_end":33}},{"value":"! [`Read`]: std::io::Read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39865,"byte_end":39892,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"! [`Write`]: std::io::Write","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/mod.rs","byte_start":39893,"byte_end":39922,"line_start":156,"line_end":156,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42093,"byte_end":42105,"line_start":19,"line_end":19,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41621,"byte_end":41652,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41653,"byte_end":41656,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait inherits from [`std::io::BufRead`] and indicates that an I/O object is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41657,"byte_end":41742,"line_start":10,"line_end":10,"column_start":1,"column_end":86}},{"value":"/ **non-blocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41743,"byte_end":41819,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ bytes are unavailable instead of blocking the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41820,"byte_end":41885,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41886,"byte_end":41889,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41890,"byte_end":41958,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41959,"byte_end":41983,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41984,"byte_end":41987,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":41988,"byte_end":42030,"line_start":17,"line_end":17,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42031,"byte_end":42082,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43203,"byte_end":43216,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42123,"byte_end":42208,"line_start":20,"line_end":20,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42213,"byte_end":42254,"line_start":21,"line_end":21,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42259,"byte_end":42262,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42267,"byte_end":42314,"line_start":23,"line_end":23,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42319,"byte_end":42322,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42327,"byte_end":42386,"line_start":25,"line_end":25,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42391,"byte_end":42449,"line_start":26,"line_end":26,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42454,"byte_end":42535,"line_start":27,"line_end":27,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42540,"byte_end":42566,"line_start":28,"line_end":28,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42571,"byte_end":42574,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42579,"byte_end":42650,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42655,"byte_end":42717,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42722,"byte_end":42793,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42798,"byte_end":42879,"line_start":33,"line_end":33,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42884,"byte_end":42960,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42965,"byte_end":43016,"line_start":35,"line_end":35,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43021,"byte_end":43024,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43029,"byte_end":43100,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43105,"byte_end":43108,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43113,"byte_end":43152,"line_start":39,"line_end":39,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43157,"byte_end":43195,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44119,"byte_end":44126,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43294,"byte_end":43368,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43373,"byte_end":43440,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43445,"byte_end":43448,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43453,"byte_end":43524,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43529,"byte_end":43598,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43603,"byte_end":43677,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43682,"byte_end":43759,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43764,"byte_end":43834,"line_start":50,"line_end":50,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43839,"byte_end":43892,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43897,"byte_end":43900,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43905,"byte_end":43977,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":43982,"byte_end":44004,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44009,"byte_end":44012,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44017,"byte_end":44056,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44061,"byte_end":44111,"line_start":57,"line_end":57,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":209},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47379,"byte_end":47388,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":45798,"byte_end":45828,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":45829,"byte_end":45832,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":45833,"byte_end":45912,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":45913,"byte_end":45987,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":45988,"byte_end":46067,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46068,"byte_end":46145,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46146,"byte_end":46157,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46158,"byte_end":46161,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46162,"byte_end":46239,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46240,"byte_end":46258,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46259,"byte_end":46262,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46263,"byte_end":46339,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   and placed into the output buffer, where `n` == 0 implies that EOF has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46340,"byte_end":46416,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/   been reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46417,"byte_end":46436,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46437,"byte_end":46440,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46441,"byte_end":46506,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46507,"byte_end":46587,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46588,"byte_end":46667,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46668,"byte_end":46741,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46742,"byte_end":46815,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46816,"byte_end":46837,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46838,"byte_end":46841,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46842,"byte_end":46926,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46927,"byte_end":46951,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46952,"byte_end":46955,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":46956,"byte_end":47029,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47030,"byte_end":47109,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47110,"byte_end":47113,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47114,"byte_end":47179,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47180,"byte_end":47201,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47202,"byte_end":47205,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47206,"byte_end":47245,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47246,"byte_end":47282,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47283,"byte_end":47322,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47323,"byte_end":47368,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49027,"byte_end":49055,"line_start":77,"line_end":77,"column_start":15,"column_end":43},"name":"prepare_uninitialized_buffer","qualname":"::io::async_read::AsyncRead::prepare_uninitialized_buffer","value":"fn (&self, buf: &mut [MaybeUninit<u8>]) -> bool","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Prepares an uninitialized buffer to be safe to pass to `read`. Returns\n `true` if the supplied buffer was zeroed out.","sig":null,"attributes":[{"value":"/ Prepares an uninitialized buffer to be safe to pass to `read`. Returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47395,"byte_end":47469,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ `true` if the supplied buffer was zeroed out.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47474,"byte_end":47523,"line_start":45,"line_end":45,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47528,"byte_end":47531,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ While it would be highly unusual, implementations of [`io::Read`] are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47536,"byte_end":47609,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ able to read data from the buffer passed as an argument. Because of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47614,"byte_end":47685,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ this, the buffer passed to [`io::Read`] must be initialized memory. In","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47690,"byte_end":47764,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ situations where large numbers of buffers are used, constantly having to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47769,"byte_end":47845,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"/ zero out buffers can be expensive.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47850,"byte_end":47888,"line_start":51,"line_end":51,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47893,"byte_end":47896,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function does any necessary work to prepare an uninitialized buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47901,"byte_end":47977,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ to be safe to pass to `read`. If `read` guarantees to never attempt to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":47982,"byte_end":48056,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ read data out of the supplied buffer, then `prepare_uninitialized_buffer`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48061,"byte_end":48138,"line_start":55,"line_end":55,"column_start":5,"column_end":82}},{"value":"/ doesn't need to do any work.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48143,"byte_end":48175,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48180,"byte_end":48183,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ If this function returns `true`, then the memory has been zeroed out.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48188,"byte_end":48261,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ This allows implementations of `AsyncRead` which are composed of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48266,"byte_end":48334,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ multiple subimplementations to efficiently implement","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48339,"byte_end":48395,"line_start":60,"line_end":60,"column_start":5,"column_end":61}},{"value":"/ `prepare_uninitialized_buffer`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48400,"byte_end":48435,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48440,"byte_end":48443,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function isn't actually `unsafe` to call but `unsafe` to implement.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48448,"byte_end":48524,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ The implementer must ensure that either the whole `buf` has been zeroed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48529,"byte_end":48604,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ or `poll_read_buf()` overwrites the buffer without reading it and returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48609,"byte_end":48686,"line_start":65,"line_end":65,"column_start":5,"column_end":82}},{"value":"/ correct value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48691,"byte_end":48709,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48714,"byte_end":48717,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This function is called from [`poll_read_buf`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48722,"byte_end":48773,"line_start":68,"line_end":68,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48778,"byte_end":48781,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48786,"byte_end":48798,"line_start":70,"line_end":70,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48803,"byte_end":48806,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Implementations that return `false` must never read from data slices","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48811,"byte_end":48883,"line_start":72,"line_end":72,"column_start":5,"column_end":77}},{"value":"/ that they did not write to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48888,"byte_end":48919,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48924,"byte_end":48927,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`io::Read`]: std::io::Read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48932,"byte_end":48963,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ [`poll_read_buf`]: #method.poll_read_buf","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":48968,"byte_end":49012,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49563,"byte_end":49572,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49193,"byte_end":49246,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49251,"byte_end":49254,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49259,"byte_end":49317,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49322,"byte_end":49325,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49330,"byte_end":49389,"line_start":89,"line_end":89,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49394,"byte_end":49452,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49457,"byte_end":49524,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49529,"byte_end":49555,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":50033,"byte_end":50046,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"poll_read_buf","qualname":"::io::async_read::AsyncRead::poll_read_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<io::Result<usize>>","parent":{"krate":0,"index":209},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified `BufMut`, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Pulls some bytes from this source into the specified `BufMut`, returning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49697,"byte_end":49773,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ how many bytes were read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49778,"byte_end":49807,"line_start":100,"line_end":100,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49812,"byte_end":49815,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The `buf` provided will have bytes read into it and the internal cursor","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49820,"byte_end":49895,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ will be advanced if any bytes were read. Note that this method typically","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49900,"byte_end":49976,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/ will not reallocate the buffer provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":49981,"byte_end":50025,"line_start":104,"line_end":104,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":240},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53173,"byte_end":53182,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52691,"byte_end":52721,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52722,"byte_end":52725,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52726,"byte_end":52800,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52801,"byte_end":52871,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52872,"byte_end":52941,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52942,"byte_end":52945,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":52946,"byte_end":53011,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53012,"byte_end":53033,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53034,"byte_end":53037,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53038,"byte_end":53074,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53075,"byte_end":53116,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53117,"byte_end":53162,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53520,"byte_end":53530,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, position: SeekFrom) -> Poll<io::Result<()>>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53189,"byte_end":53246,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53251,"byte_end":53254,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53259,"byte_end":53332,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53337,"byte_end":53363,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53368,"byte_end":53371,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53376,"byte_end":53451,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53456,"byte_end":53512,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54113,"byte_end":54126,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53656,"byte_end":53699,"line_start":32,"line_end":32,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53704,"byte_end":53707,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53712,"byte_end":53761,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53766,"byte_end":53836,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53841,"byte_end":53902,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53907,"byte_end":53910,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53915,"byte_end":53927,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53932,"byte_end":53935,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":53940,"byte_end":53996,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54001,"byte_end":54004,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54009,"byte_end":54021,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54026,"byte_end":54029,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Calling this method without calling `start_seek` first is an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54034,"byte_end":54105,"line_start":44,"line_end":44,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57663,"byte_end":57673,"line_start":46,"line_end":46,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":55800,"byte_end":55832,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":55833,"byte_end":55836,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":55837,"byte_end":55919,"line_start":9,"line_end":9,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":55920,"byte_end":55995,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":55996,"byte_end":56063,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56064,"byte_end":56067,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56068,"byte_end":56148,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56149,"byte_end":56167,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56168,"byte_end":56171,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56172,"byte_end":56243,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56244,"byte_end":56258,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56259,"byte_end":56262,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56263,"byte_end":56331,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56332,"byte_end":56412,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56413,"byte_end":56492,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56493,"byte_end":56566,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56567,"byte_end":56640,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56641,"byte_end":56662,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56663,"byte_end":56666,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56667,"byte_end":56751,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56752,"byte_end":56776,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56777,"byte_end":56780,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56781,"byte_end":56863,"line_start":29,"line_end":29,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56864,"byte_end":56947,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56948,"byte_end":56951,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":56952,"byte_end":57036,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57037,"byte_end":57121,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57122,"byte_end":57200,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57201,"byte_end":57280,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57281,"byte_end":57342,"line_start":36,"line_end":36,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57343,"byte_end":57346,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57347,"byte_end":57413,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57414,"byte_end":57436,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57437,"byte_end":57440,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57441,"byte_end":57479,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57480,"byte_end":57524,"line_start":42,"line_end":42,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57525,"byte_end":57564,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57565,"byte_end":57604,"line_start":44,"line_end":44,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57605,"byte_end":57652,"line_start":45,"line_end":45,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58057,"byte_end":58067,"line_start":55,"line_end":55,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57680,"byte_end":57734,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57739,"byte_end":57742,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57747,"byte_end":57808,"line_start":49,"line_end":49,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57813,"byte_end":57816,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57821,"byte_end":57883,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57888,"byte_end":57946,"line_start":52,"line_end":52,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":57951,"byte_end":58018,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58023,"byte_end":58049,"line_start":54,"line_end":54,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58608,"byte_end":58618,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58195,"byte_end":58266,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58271,"byte_end":58293,"line_start":62,"line_end":62,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58298,"byte_end":58301,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58306,"byte_end":58352,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58357,"byte_end":58360,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58365,"byte_end":58429,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58434,"byte_end":58492,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58497,"byte_end":58565,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58570,"byte_end":58600,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61904,"byte_end":61917,"line_start":130,"line_end":130,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58700,"byte_end":58774,"line_start":72,"line_end":72,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58779,"byte_end":58827,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58832,"byte_end":58835,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58840,"byte_end":58911,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58916,"byte_end":58992,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":58997,"byte_end":59073,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59078,"byte_end":59153,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59158,"byte_end":59229,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59234,"byte_end":59310,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59315,"byte_end":59343,"line_start":81,"line_end":81,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59348,"byte_end":59351,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59356,"byte_end":59417,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59422,"byte_end":59493,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59498,"byte_end":59570,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59575,"byte_end":59650,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59655,"byte_end":59728,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59733,"byte_end":59808,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59813,"byte_end":59885,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59890,"byte_end":59901,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59906,"byte_end":59909,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59914,"byte_end":59988,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":59993,"byte_end":60065,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60070,"byte_end":60139,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60144,"byte_end":60212,"line_start":95,"line_end":95,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60217,"byte_end":60278,"line_start":96,"line_end":96,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60283,"byte_end":60286,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60291,"byte_end":60309,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60314,"byte_end":60317,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60322,"byte_end":60392,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60397,"byte_end":60400,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60405,"byte_end":60468,"line_start":102,"line_end":102,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60473,"byte_end":60542,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60547,"byte_end":60622,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60627,"byte_end":60700,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60705,"byte_end":60756,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60761,"byte_end":60764,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60769,"byte_end":60839,"line_start":108,"line_end":108,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60844,"byte_end":60919,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":60924,"byte_end":60996,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61001,"byte_end":61071,"line_start":111,"line_end":111,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61076,"byte_end":61151,"line_start":112,"line_end":112,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61156,"byte_end":61159,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61164,"byte_end":61245,"line_start":114,"line_end":114,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61250,"byte_end":61325,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61330,"byte_end":61397,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61402,"byte_end":61405,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61410,"byte_end":61422,"line_start":118,"line_end":118,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61427,"byte_end":61430,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61435,"byte_end":61506,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61511,"byte_end":61577,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61582,"byte_end":61656,"line_start":122,"line_end":122,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61661,"byte_end":61725,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61730,"byte_end":61769,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61774,"byte_end":61777,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61782,"byte_end":61794,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61799,"byte_end":61802,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61807,"byte_end":61882,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61887,"byte_end":61896,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":62205,"byte_end":62219,"line_start":136,"line_end":136,"column_start":8,"column_end":22},"name":"poll_write_buf","qualname":"::io::async_write::AsyncWrite::poll_write_buf","value":"fn <B> (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut B) -> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Writes a `Buf` into this value, returning how many bytes were written.","sig":null,"attributes":[{"value":"/ Writes a `Buf` into this value, returning how many bytes were written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":61999,"byte_end":62073,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":62078,"byte_end":62081,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Note that this method will advance the `buf` provided automatically by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":62086,"byte_end":62160,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ the number of bytes written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":62165,"byte_end":62197,"line_start":135,"line_end":135,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8103793,"byte_end":8103804,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"name":"PollEvented","qualname":"::io::poll_evented::PollEvented","value":"PollEvented {  }","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156}],"decl_id":null,"docs":" Associates an I/O resource that implements the [`std::io::Read`] and/or\n [`std::io::Write`] traits with the reactor that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":16486,"byte_end":16515,"line_start":98,"line_end":98,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106050,"byte_end":8106053,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<PollEvented<E>>::new","value":"fn (io: E) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollEvented` associated with the default reactor.","sig":null,"attributes":[{"value":"/ Creates a new `PollEvented` associated with the default reactor.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105628,"byte_end":8105696,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105701,"byte_end":8105704,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105709,"byte_end":8105721,"line_start":170,"line_end":170,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105726,"byte_end":8105729,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105734,"byte_end":8105794,"line_start":172,"line_end":172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105799,"byte_end":8105802,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105807,"byte_end":8105877,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105882,"byte_end":8105955,"line_start":175,"line_end":175,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105960,"byte_end":8106038,"line_start":176,"line_end":176,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106494,"byte_end":8106501,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollEvented<E>>::get_ref","value":"fn (&self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the underlying I/O object this readiness","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106380,"byte_end":8106454,"line_start":189,"line_end":189,"column_start":5,"column_end":79}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106459,"byte_end":8106482,"line_start":190,"line_end":190,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106677,"byte_end":8106684,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<PollEvented<E>>::get_mut","value":"fn (&mut self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O object this readiness\n stream is wrapping.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O object this readiness","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106562,"byte_end":8106637,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ stream is wrapping.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106642,"byte_end":8106665,"line_start":196,"line_end":196,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107220,"byte_end":8107230,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollEvented<E>>::into_inner","value":"fn (mut self) -> io::Result<E>","parent":null,"children":[],"decl_id":null,"docs":" Consumes self, returning the inner I/O object","sig":null,"attributes":[{"value":"/ Consumes self, returning the inner I/O object","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106753,"byte_end":8106802,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106807,"byte_end":8106810,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function will deregister the I/O resource from the reactor before","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106815,"byte_end":8106889,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ returning. If the deregistration operation fails, an error is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106894,"byte_end":8106969,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106974,"byte_end":8106977,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8106982,"byte_end":8107057,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107062,"byte_end":8107138,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107143,"byte_end":8107208,"line_start":208,"line_end":208,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108213,"byte_end":8108228,"line_start":236,"line_end":236,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<PollEvented<E>>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>, mask: mio::Ready) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's read readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's read readiness state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107378,"byte_end":8107429,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107434,"byte_end":8107437,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The mask argument allows specifying what readiness to notify on. This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107442,"byte_end":8107515,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ can be any value, including platform specific readiness, **except**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107520,"byte_end":8107591,"line_start":218,"line_end":218,"column_start":5,"column_end":76}},{"value":"/ `writable`. HUP is always implicitly included on platforms that support","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107596,"byte_end":8107671,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107676,"byte_end":8107683,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107688,"byte_end":8107691,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a read then `Poll::Pending` is returned","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107696,"byte_end":8107772,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ and the current task is notified once a new event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107777,"byte_end":8107843,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107848,"byte_end":8107851,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a read-ready state until readiness is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107856,"byte_end":8107929,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ cleared by calling [`clear_read_ready`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107934,"byte_end":8107978,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107983,"byte_end":8107986,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ [`clear_read_ready`]: #method.clear_read_ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8107991,"byte_end":8108041,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108046,"byte_end":8108049,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108054,"byte_end":8108066,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108071,"byte_end":8108074,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108079,"byte_end":8108107,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108112,"byte_end":8108115,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108120,"byte_end":8108152,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108157,"byte_end":8108201,"line_start":235,"line_end":235,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109204,"byte_end":8109220,"line_start":266,"line_end":266,"column_start":12,"column_end":28},"name":"clear_read_ready","qualname":"<PollEvented<E>>::clear_read_ready","value":"fn (&self, cx: &mut Context<'_>, ready: mio::Ready) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Clears the I/O resource's read readiness state and registers the current\n task to be notified once a read readiness event is received.","sig":null,"attributes":[{"value":"/ Clears the I/O resource's read readiness state and registers the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108605,"byte_end":8108681,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/ task to be notified once a read readiness event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108686,"byte_end":8108750,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108755,"byte_end":8108758,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_read_ready` will return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108763,"byte_end":8108825,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` until a new read readiness event has been received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108830,"byte_end":8108901,"line_start":255,"line_end":255,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108906,"byte_end":8108909,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ The `mask` argument specifies the readiness bits to clear. This may not","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108914,"byte_end":8108989,"line_start":257,"line_end":257,"column_start":5,"column_end":80}},{"value":"/ include `writable` or `hup`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8108994,"byte_end":8109026,"line_start":258,"line_end":258,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109031,"byte_end":8109034,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109039,"byte_end":8109051,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109056,"byte_end":8109059,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109064,"byte_end":8109092,"line_start":262,"line_end":262,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109097,"byte_end":8109100,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ * `ready` includes writable or HUP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109105,"byte_end":8109143,"line_start":264,"line_end":264,"column_start":5,"column_end":43}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109148,"byte_end":8109192,"line_start":265,"line_end":265,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110487,"byte_end":8110503,"line_start":302,"line_end":302,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<PollEvented<E>>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Checks the I/O resource's write readiness state.","sig":null,"attributes":[{"value":"/ Checks the I/O resource's write readiness state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109745,"byte_end":8109797,"line_start":283,"line_end":283,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109802,"byte_end":8109805,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This always checks for writable readiness and also checks for HUP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109810,"byte_end":8109879,"line_start":285,"line_end":285,"column_start":5,"column_end":74}},{"value":"/ readiness on platforms that support it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109884,"byte_end":8109927,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109932,"byte_end":8109935,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ If the resource is not ready for a write then `Poll::Pending` is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8109940,"byte_end":8110008,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ returned and the current task is notified once a new event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110013,"byte_end":8110088,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110093,"byte_end":8110096,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The I/O resource will remain in a write-ready state until readiness is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110101,"byte_end":8110175,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ cleared by calling [`clear_write_ready`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110180,"byte_end":8110225,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110230,"byte_end":8110233,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`clear_write_ready`]: #method.clear_write_ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110238,"byte_end":8110290,"line_start":294,"line_end":294,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110295,"byte_end":8110298,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110303,"byte_end":8110315,"line_start":296,"line_end":296,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110320,"byte_end":8110323,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ This function panics if:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110328,"byte_end":8110356,"line_start":298,"line_end":298,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110361,"byte_end":8110364,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * `ready` contains bits besides `writable` and `hup`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110369,"byte_end":8110426,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ * called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110431,"byte_end":8110475,"line_start":301,"line_end":301,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111352,"byte_end":8111369,"line_start":324,"line_end":324,"column_start":12,"column_end":29},"name":"clear_write_ready","qualname":"<PollEvented<E>>::clear_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Resets the I/O resource's write readiness state and registers the current\n task to be notified once a write readiness event is received.","sig":null,"attributes":[{"value":"/ Resets the I/O resource's write readiness state and registers the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110779,"byte_end":8110856,"line_start":312,"line_end":312,"column_start":5,"column_end":82}},{"value":"/ task to be notified once a write readiness event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110861,"byte_end":8110926,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110931,"byte_end":8110934,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This only clears writable readiness. HUP (on platforms that support HUP)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8110939,"byte_end":8111015,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ cannot be cleared as it is a final state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111020,"byte_end":8111065,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111070,"byte_end":8111073,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ After calling this function, `poll_write_ready(Ready::writable())` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111078,"byte_end":8111153,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/ return `NotReady` until a new write readiness event has been received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111158,"byte_end":8111232,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111237,"byte_end":8111240,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111245,"byte_end":8111257,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111262,"byte_end":8111265,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111270,"byte_end":8111340,"line_start":323,"line_end":323,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115598,"byte_end":8115610,"line_start":41,"line_end":41,"column_start":16,"column_end":28},"name":"Registration","qualname":"::io::registration::Registration","value":"Registration {  }","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":" Associates an I/O resource with the reactor instance that drives it.","sig":null,"attributes":[{"value":"cfg(feature = \"io-driver\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":16486,"byte_end":16515,"line_start":98,"line_end":98,"column_start":13,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116302,"byte_end":8116305,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Registration>::new","value":"fn <T> (io: &T) -> io::Result<Registration>","parent":null,"children":[],"decl_id":null,"docs":" Registers the I/O resource with the default reactor.","sig":null,"attributes":[{"value":"/ Registers the I/O resource with the default reactor.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115730,"byte_end":8115786,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115791,"byte_end":8115794,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115799,"byte_end":8115811,"line_start":52,"line_end":52,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115816,"byte_end":8115819,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ - `Ok` if the registration happened successfully","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115824,"byte_end":8115876,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ - `Err` if an error was encountered during registration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115881,"byte_end":8115940,"line_start":55,"line_end":55,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115945,"byte_end":8115948,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115953,"byte_end":8115956,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115961,"byte_end":8115973,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115978,"byte_end":8115981,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115986,"byte_end":8116046,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116051,"byte_end":8116054,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116059,"byte_end":8116129,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116134,"byte_end":8116207,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116212,"byte_end":8116290,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117514,"byte_end":8117524,"line_start":98,"line_end":98,"column_start":12,"column_end":22},"name":"deregister","qualname":"<Registration>::deregister","value":"fn <T> (&mut self, io: &T) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Deregisters the I/O resource from the reactor it is associated with.","sig":null,"attributes":[{"value":"/ Deregisters the I/O resource from the reactor it is associated with.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116738,"byte_end":8116810,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116815,"byte_end":8116818,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This function must be called before the I/O resource associated with the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116823,"byte_end":8116899,"line_start":84,"line_end":84,"column_start":5,"column_end":81}},{"value":"/ registration is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116904,"byte_end":8116932,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116937,"byte_end":8116940,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that deregistering does not guarantee that the I/O resource can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8116945,"byte_end":8117020,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ registered with a different reactor. Some I/O resource types can only be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117025,"byte_end":8117101,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ associated with a single reactor instance for their lifetime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117106,"byte_end":8117171,"line_start":89,"line_end":89,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117176,"byte_end":8117179,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117184,"byte_end":8117196,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117201,"byte_end":8117204,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the deregistration was successful, `Ok` is returned. Any calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117209,"byte_end":8117281,"line_start":93,"line_end":93,"column_start":5,"column_end":77}},{"value":"/ `Reactor::turn` that happen after a successful call to `deregister` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117286,"byte_end":8117362,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ no longer result in notifications getting sent for this registration.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117367,"byte_end":8117440,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117445,"byte_end":8117448,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ `Err` is returned if an error is encountered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117453,"byte_end":8117502,"line_start":97,"line_end":97,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119267,"byte_end":8119282,"line_start":141,"line_end":141,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<Registration>::poll_read_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's read readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's read readiness stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117827,"byte_end":8117892,"line_start":109,"line_end":109,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117897,"byte_end":8117900,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new read readiness event since the last","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117905,"byte_end":8117979,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ call to `poll_read_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8117984,"byte_end":8118057,"line_start":112,"line_end":112,"column_start":5,"column_end":78}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118062,"byte_end":8118112,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118117,"byte_end":8118120,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118125,"byte_end":8118198,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118203,"byte_end":8118278,"line_start":116,"line_end":116,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118283,"byte_end":8118319,"line_start":117,"line_end":117,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118324,"byte_end":8118327,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118332,"byte_end":8118383,"line_start":119,"line_end":119,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118388,"byte_end":8118391,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118396,"byte_end":8118414,"line_start":121,"line_end":121,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118419,"byte_end":8118422,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118427,"byte_end":8118472,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118477,"byte_end":8118480,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118485,"byte_end":8118560,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118565,"byte_end":8118626,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118631,"byte_end":8118634,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118639,"byte_end":8118714,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_read_ready`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118719,"byte_end":8118766,"line_start":129,"line_end":129,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118771,"byte_end":8118774,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118779,"byte_end":8118855,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118860,"byte_end":8118935,"line_start":132,"line_end":132,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118940,"byte_end":8118994,"line_start":133,"line_end":133,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8118999,"byte_end":8119002,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119007,"byte_end":8119041,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119046,"byte_end":8119147,"line_start":136,"line_end":136,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119152,"byte_end":8119155,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119160,"byte_end":8119172,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119177,"byte_end":8119180,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119185,"byte_end":8119255,"line_start":140,"line_end":140,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119965,"byte_end":8119980,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"take_read_ready","qualname":"<Registration>::take_read_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consume any pending read readiness event.","sig":null,"attributes":[{"value":"/ Consume any pending read readiness event.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119609,"byte_end":8119654,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119659,"byte_end":8119662,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_read_ready`] **except** that it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119667,"byte_end":8119739,"line_start":154,"line_end":154,"column_start":5,"column_end":77}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119744,"byte_end":8119819,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119824,"byte_end":8119892,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119897,"byte_end":8119900,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: #method.poll_read_ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8119905,"byte_end":8119953,"line_start":158,"line_end":158,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121526,"byte_end":8121542,"line_start":195,"line_end":195,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<Registration>::poll_write_ready","value":"fn (&self, cx: &mut Context<'_>) -> Poll<io::Result<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for events on the I/O resource's write readiness stream.","sig":null,"attributes":[{"value":"/ Polls for events on the I/O resource's write readiness stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120082,"byte_end":8120148,"line_start":163,"line_end":163,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120153,"byte_end":8120156,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If the I/O resource receives a new write readiness event since the last","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120161,"byte_end":8120236,"line_start":165,"line_end":165,"column_start":5,"column_end":80}},{"value":"/ call to `poll_write_ready`, it is returned. If it has not, the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120241,"byte_end":8120315,"line_start":166,"line_end":166,"column_start":5,"column_end":79}},{"value":"/ task is notified once a new event is received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120320,"byte_end":8120370,"line_start":167,"line_end":167,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120375,"byte_end":8120378,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ All events except `HUP` are [edge-triggered]. Once `HUP` is returned,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120383,"byte_end":8120456,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ the function will always return `Ready(HUP)`. This should be treated as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120461,"byte_end":8120536,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ the end of the readiness stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120541,"byte_end":8120577,"line_start":171,"line_end":171,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120582,"byte_end":8120585,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Ensure that [`register`] has been called first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120590,"byte_end":8120641,"line_start":173,"line_end":173,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120646,"byte_end":8120649,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120654,"byte_end":8120672,"line_start":175,"line_end":175,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120677,"byte_end":8120680,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120685,"byte_end":8120730,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120735,"byte_end":8120738,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(readiness))` means that the I/O resource has received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120743,"byte_end":8120818,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/   a new readiness event. The readiness value is included.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120823,"byte_end":8120884,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120889,"byte_end":8120892,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` means that no new readiness events have been received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120897,"byte_end":8120972,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/   since the last call to `poll_write_ready`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8120977,"byte_end":8121025,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121030,"byte_end":8121033,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(err))` means that the registration has encountered an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121038,"byte_end":8121114,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/   error. This error either represents a permanent internal error **or**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121119,"byte_end":8121194,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/   the fact that [`register`] was not called first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121199,"byte_end":8121253,"line_start":187,"line_end":187,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121258,"byte_end":8121261,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`register`]: #method.register","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121266,"byte_end":8121300,"line_start":189,"line_end":189,"column_start":5,"column_end":39}},{"value":"/ [edge-triggered]: https://docs.rs/mio/0.6/mio/struct.Poll.html#edge-triggered-and-level-triggered","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121305,"byte_end":8121406,"line_start":190,"line_end":190,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121411,"byte_end":8121414,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121419,"byte_end":8121431,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121436,"byte_end":8121439,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121444,"byte_end":8121514,"line_start":194,"line_end":194,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8122231,"byte_end":8122247,"line_start":213,"line_end":213,"column_start":12,"column_end":28},"name":"take_write_ready","qualname":"<Registration>::take_write_ready","value":"fn (&self) -> io::Result<Option<mio::Ready>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes any pending write readiness event.","sig":null,"attributes":[{"value":"/ Consumes any pending write readiness event.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121870,"byte_end":8121917,"line_start":206,"line_end":206,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121922,"byte_end":8121925,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This function is identical to [`poll_write_ready`] **except** that it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8121930,"byte_end":8122003,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/ will not notify the current task when a new event is received. As such,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8122008,"byte_end":8122083,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ it is safe to call this function from outside of a task context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8122088,"byte_end":8122156,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8122161,"byte_end":8122164,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_ready`]: #method.poll_write_ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8122169,"byte_end":8122219,"line_start":212,"line_end":212,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8135153,"byte_end":8135161,"line_start":21,"line_end":21,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1278}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8135290,"byte_end":8135299,"line_start":26,"line_end":26,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1281}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8135613,"byte_end":8135618,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"fn <T> (stream: T) -> (ReadHalf<T>, WriteHalf<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136244,"byte_end":8136254,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"fn (&self, other: &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136141,"byte_end":8136216,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136221,"byte_end":8136232,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136661,"byte_end":8136668,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"fn (self, wr: WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136337,"byte_end":8136386,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136391,"byte_end":8136394,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136399,"byte_end":8136411,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136416,"byte_end":8136419,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136424,"byte_end":8136498,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136503,"byte_end":8136553,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136558,"byte_end":8136622,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136627,"byte_end":8136649,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137169,"byte_end":8137179,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"fn (&self, other: &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137067,"byte_end":8137141,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137146,"byte_end":8137157,"line_start":95,"line_end":95,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/seek.rs","byte_start":8140416,"byte_end":8140420,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/seek.rs","byte_start":8140253,"byte_end":8140319,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/seek.rs","byte_start":8140337,"byte_end":8140404,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8143579,"byte_end":8143594,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1958}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8146294,"byte_end":8146304,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"fn <'a> (&'a mut self, byte: u8, buf: &'a mut Vec<u8>) -> ReadUntil<'a, Self>","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8149195,"byte_end":8149204,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"fn <'a> (&'a mut self, buf: &'a mut String) -> ReadLine<'a, Self>","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8150604,"byte_end":8150609,"line_start":200,"line_end":200,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"fn (self, byte: u8) -> Split<Self>","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8152459,"byte_end":8152464,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"fn (self) -> Lines<Self>","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8154539,"byte_end":8154551,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1993},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1974}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8155671,"byte_end":8155676,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"fn <R> (self, next: R) -> Chain<Self, R>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8158505,"byte_end":8158509,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> Read<'a, Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8160811,"byte_end":8160819,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"fn <'a, B> (&'a mut self, buf: &'a mut B) -> ReadBuf<'a, Self, B>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8163045,"byte_end":8163055,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"fn <'a> (&'a mut self, buf: &'a mut [u8]) -> ReadExact<'a, Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8164492,"byte_end":8164499,"line_start":326,"line_end":326,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"fn <'a> (&'a mut self) -> ReadU8<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8165788,"byte_end":8165795,"line_start":364,"line_end":364,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"fn <'a> (&'a mut self) -> ReadI8<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8167126,"byte_end":8167134,"line_start":402,"line_end":402,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"fn <'a> (&'a mut self) -> ReadU16<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8168474,"byte_end":8168482,"line_start":440,"line_end":440,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"fn <'a> (&'a mut self) -> ReadI16<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8169763,"byte_end":8169771,"line_start":477,"line_end":477,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"fn <'a> (&'a mut self) -> ReadU32<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8171066,"byte_end":8171074,"line_start":515,"line_end":515,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"fn <'a> (&'a mut self) -> ReadI32<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8172437,"byte_end":8172445,"line_start":554,"line_end":554,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"fn <'a> (&'a mut self) -> ReadU64<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8173738,"byte_end":8173746,"line_start":591,"line_end":591,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"fn <'a> (&'a mut self) -> ReadI64<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8175206,"byte_end":8175215,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"fn <'a> (&'a mut self) -> ReadU128<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8176609,"byte_end":8176618,"line_start":671,"line_end":671,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"fn <'a> (&'a mut self) -> ReadI128<&'a mut Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8178229,"byte_end":8178240,"line_start":717,"line_end":717,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"fn <'a> (&'a mut self, buf: &'a mut Vec<u8>) -> ReadToEnd<'a, Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8179808,"byte_end":8179822,"line_start":764,"line_end":764,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"fn <'a> (&'a mut self, dst: &'a mut String) -> ReadToString<'a, Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8181000,"byte_end":8181004,"line_start":798,"line_end":798,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"fn (self, limit: u64) -> Take<Self>","parent":{"krate":0,"index":1960},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181839,"byte_end":8181851,"line_start":28,"line_end":28,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":1356}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181271,"byte_end":8181342,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181343,"byte_end":8181346,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181347,"byte_end":8181361,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181362,"byte_end":8181365,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181366,"byte_end":8181373,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ use std::io::{Cursor, SeekFrom};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181374,"byte_end":8181410,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181411,"byte_end":8181437,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181438,"byte_end":8181441,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181442,"byte_end":8181460,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181461,"byte_end":8181500,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/     let mut cursor = Cursor::new(b\"abcdefg\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181501,"byte_end":8181550,"line_start":15,"line_end":15,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181551,"byte_end":8181554,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/     // the `seek` method is defined by this trait","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181555,"byte_end":8181608,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/     cursor.seek(SeekFrom::Start(3)).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181609,"byte_end":8181656,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181657,"byte_end":8181660,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/     let mut buf = [0; 1];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181661,"byte_end":8181690,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/     let n = cursor.read(&mut buf).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181691,"byte_end":8181736,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181737,"byte_end":8181762,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/     assert_eq!(buf, [b'd']);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181763,"byte_end":8181795,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181796,"byte_end":8181799,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181800,"byte_end":8181814,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181815,"byte_end":8181820,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181821,"byte_end":8181828,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182568,"byte_end":8182572,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"fn (&mut self, pos: SeekFrom) -> Seek<'_, Self>","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181869,"byte_end":8181938,"line_start":29,"line_end":29,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181943,"byte_end":8181996,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182001,"byte_end":8182004,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182009,"byte_end":8182086,"line_start":32,"line_end":32,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182091,"byte_end":8182113,"line_start":33,"line_end":33,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182118,"byte_end":8182121,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182126,"byte_end":8182140,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182145,"byte_end":8182148,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182153,"byte_end":8182166,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182171,"byte_end":8182195,"line_start":38,"line_end":38,"column_start":5,"column_end":29}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182200,"byte_end":8182226,"line_start":39,"line_end":39,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182231,"byte_end":8182234,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ use std::io::SeekFrom;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182239,"byte_end":8182265,"line_start":41,"line_end":41,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182270,"byte_end":8182273,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> std::io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182278,"byte_end":8182323,"line_start":43,"line_end":43,"column_start":5,"column_end":50}},{"value":"/ let mut file = File::open(\"foo.txt\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182328,"byte_end":8182376,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ file.seek(SeekFrom::Start(6)).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182381,"byte_end":8182422,"line_start":45,"line_end":45,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182427,"byte_end":8182430,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ let mut contents = vec![0u8; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182435,"byte_end":8182472,"line_start":47,"line_end":47,"column_start":5,"column_end":42}},{"value":"/ file.read_exact(&mut contents).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182477,"byte_end":8182519,"line_start":48,"line_end":48,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182524,"byte_end":8182536,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182541,"byte_end":8182548,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182553,"byte_end":8182560,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8184655,"byte_end":8184668,"line_start":62,"line_end":62,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2024},{"krate":0,"index":2004},{"krate":0,"index":2005}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8186510,"byte_end":8186515,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> Write<'a, Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8189317,"byte_end":8189326,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"fn <'a, B> (&'a mut self, src: &'a mut B) -> WriteBuf<'a, Self, B>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8190660,"byte_end":8190669,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"fn <'a> (&'a mut self, src: &'a [u8]) -> WriteAll<'a, Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8192069,"byte_end":8192077,"line_start":265,"line_end":265,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"fn <'a> (&'a mut self, n: u8) -> WriteU8<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8193338,"byte_end":8193346,"line_start":302,"line_end":302,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"fn <'a> (&'a mut self, n: i8) -> WriteI8<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8194661,"byte_end":8194670,"line_start":340,"line_end":340,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"fn <'a> (&'a mut self, n: u16) -> WriteU16<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8195983,"byte_end":8195992,"line_start":378,"line_end":378,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"fn <'a> (&'a mut self, n: i16) -> WriteI16<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8197332,"byte_end":8197341,"line_start":416,"line_end":416,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"fn <'a> (&'a mut self, n: u32) -> WriteU32<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8198676,"byte_end":8198685,"line_start":454,"line_end":454,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"fn <'a> (&'a mut self, n: i32) -> WriteI32<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8200062,"byte_end":8200071,"line_start":492,"line_end":492,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"fn <'a> (&'a mut self, n: u64) -> WriteU64<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8201458,"byte_end":8201467,"line_start":530,"line_end":530,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"fn <'a> (&'a mut self, n: i64) -> WriteI64<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8202922,"byte_end":8202932,"line_start":570,"line_end":570,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"fn <'a> (&'a mut self, n: u128) -> WriteU128<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8204322,"byte_end":8204332,"line_start":610,"line_end":610,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"fn <'a> (&'a mut self, n: i128) -> WriteI128<&'a mut Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8205350,"byte_end":8205355,"line_start":643,"line_end":643,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"fn (&mut self) -> Flush<'_, Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8206575,"byte_end":8206583,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"fn (&mut self) -> Shutdown<'_, Self>","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9357},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8207976,"byte_end":8207985,"line_start":28,"line_end":28,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":9359},{"krate":0,"index":9360},{"krate":0,"index":9361},{"krate":0,"index":9362}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208321,"byte_end":8208324,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn (inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208179,"byte_end":8208271,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208276,"byte_end":8208309,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208486,"byte_end":8208499,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn (capacity: usize, inner: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208409,"byte_end":8208474,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209175,"byte_end":8209182,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209038,"byte_end":8209084,"line_start":64,"line_end":64,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209089,"byte_end":8209092,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209097,"byte_end":8209163,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209374,"byte_end":8209381,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209229,"byte_end":8209283,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209288,"byte_end":8209291,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209296,"byte_end":8209362,"line_start":73,"line_end":73,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209592,"byte_end":8209603,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209440,"byte_end":8209501,"line_start":78,"line_end":78,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209506,"byte_end":8209509,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209514,"byte_end":8209580,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209834,"byte_end":8209844,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209683,"byte_end":8209746,"line_start":85,"line_end":85,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209751,"byte_end":8209754,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209759,"byte_end":8209822,"line_start":87,"line_end":87,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8210048,"byte_end":8210054,"line_start":95,"line_end":95,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209888,"byte_end":8209944,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209949,"byte_end":8209952,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8209957,"byte_end":8210036,"line_start":94,"line_end":94,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":9351},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214095,"byte_end":8214104,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":9353}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214383,"byte_end":8214386,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"fn (stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214229,"byte_end":8214286,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214291,"byte_end":8214294,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214299,"byte_end":8214371,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214718,"byte_end":8214731,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"fn (reader_capacity: usize, writer_capacity: usize, stream: RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214518,"byte_end":8214603,"line_start":36,"line_end":36,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214608,"byte_end":8214621,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214626,"byte_end":8214629,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214634,"byte_end":8214706,"line_start":39,"line_end":39,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215188,"byte_end":8215195,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"fn (&self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215043,"byte_end":8215093,"line_start":53,"line_end":53,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215098,"byte_end":8215101,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215106,"byte_end":8215176,"line_start":55,"line_end":55,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215415,"byte_end":8215422,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"fn (&mut self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215262,"byte_end":8215320,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215325,"byte_end":8215328,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215333,"byte_end":8215403,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215657,"byte_end":8215668,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215497,"byte_end":8215562,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215567,"byte_end":8215570,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215575,"byte_end":8215645,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215932,"byte_end":8215942,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"fn (self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215777,"byte_end":8215844,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215849,"byte_end":8215852,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8215857,"byte_end":8215920,"line_start":76,"line_end":76,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":9280},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8219761,"byte_end":8219770,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":9282},{"krate":0,"index":9283},{"krate":0,"index":9284}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8220078,"byte_end":8220081,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn (inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8219936,"byte_end":8220028,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8220033,"byte_end":8220066,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8220243,"byte_end":8220256,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn (cap: usize, inner: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8220166,"byte_end":8220231,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221338,"byte_end":8221345,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221280,"byte_end":8221326,"line_start":85,"line_end":85,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221536,"byte_end":8221543,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221392,"byte_end":8221446,"line_start":90,"line_end":90,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221451,"byte_end":8221454,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221459,"byte_end":8221524,"line_start":92,"line_end":92,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221753,"byte_end":8221764,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221602,"byte_end":8221663,"line_start":97,"line_end":97,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221668,"byte_end":8221671,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221676,"byte_end":8221741,"line_start":99,"line_end":99,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221995,"byte_end":8222005,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221844,"byte_end":8221907,"line_start":104,"line_end":104,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221912,"byte_end":8221915,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8221920,"byte_end":8221983,"line_start":106,"line_end":106,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8222117,"byte_end":8222123,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8222049,"byte_end":8222105,"line_start":111,"line_end":111,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9231},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8224756,"byte_end":8224761,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9234},{"krate":0,"index":9235},{"krate":0,"index":9236}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225202,"byte_end":8225209,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn (&self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225128,"byte_end":8225190,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225541,"byte_end":8225548,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn (&mut self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225278,"byte_end":8225348,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225353,"byte_end":8225356,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225361,"byte_end":8225434,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225439,"byte_end":8225512,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225517,"byte_end":8225529,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225907,"byte_end":8225918,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225637,"byte_end":8225714,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225719,"byte_end":8225722,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225727,"byte_end":8225800,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225805,"byte_end":8225878,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225883,"byte_end":8225895,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226115,"byte_end":8226125,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226047,"byte_end":8226103,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/copy.rs","byte_start":8228395,"byte_end":8228399,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::util::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" A future that asynchronously copies the entire contents of a reader into a\n writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/copy.rs","byte_start":8228312,"byte_end":8228379,"line_start":17,"line_end":17,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/copy.rs","byte_start":8229664,"byte_end":8229668,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"copy","qualname":"::io::util::copy::copy","value":"fn <'a, R, W> (reader: &'a mut R, writer: &'a mut W) -> Copy<'a, R, W>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8232417,"byte_end":8232422,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2048}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233101,"byte_end":8233106,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"fn () -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/flush.rs","byte_start":8234147,"byte_end":8234152,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":2053}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9222},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235268,"byte_end":8235273,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":9224},{"krate":0,"index":9225},{"krate":0,"index":9226},{"krate":0,"index":9227}],"decl_id":null,"docs":" Stream for the [`lines`](crate::io::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236120,"byte_end":8236129,"line_start":57,"line_end":57,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"fn (&mut self) -> io::Result<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235630,"byte_end":8235670,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235675,"byte_end":8235678,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235683,"byte_end":8235697,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235702,"byte_end":8235705,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235710,"byte_end":8235717,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235722,"byte_end":8235756,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235761,"byte_end":8235796,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235801,"byte_end":8235804,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235809,"byte_end":8235892,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235897,"byte_end":8235937,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235942,"byte_end":8235945,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235950,"byte_end":8236003,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236008,"byte_end":8236051,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236056,"byte_end":8236061,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236066,"byte_end":8236078,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236083,"byte_end":8236090,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236095,"byte_end":8236102,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236363,"byte_end":8236377,"line_start":69,"line_end":69,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read.rs","byte_start":8238307,"byte_end":8238311,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":2061},{"krate":0,"index":2062}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read.rs","byte_start":8238224,"byte_end":8238291,"line_start":27,"line_end":27,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_buf.rs","byte_start":8239355,"byte_end":8239362,"line_start":21,"line_end":21,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2072}],"decl_id":null,"docs":" Future returned by [`read_buf`](AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_buf.rs","byte_start":8239272,"byte_end":8239339,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_exact.rs","byte_start":8240638,"byte_end":8240647,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_exact.rs","byte_start":8240555,"byte_end":8240622,"line_start":30,"line_end":30,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":9150},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8244971,"byte_end":8244977,"line_start":112,"line_end":112,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":9152}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9117},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8244993,"byte_end":8244999,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":9119}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9072},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245015,"byte_end":8245022,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":9074},{"krate":0,"index":9075},{"krate":0,"index":9077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9027},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245047,"byte_end":8245054,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":9029},{"krate":0,"index":9030},{"krate":0,"index":9032}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8982},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245079,"byte_end":8245086,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":8984},{"krate":0,"index":8985},{"krate":0,"index":8987}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8937},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245111,"byte_end":8245119,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":8939},{"krate":0,"index":8940},{"krate":0,"index":8942}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8892},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245147,"byte_end":8245154,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":8894},{"krate":0,"index":8895},{"krate":0,"index":8897}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8847},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245179,"byte_end":8245186,"line_start":121,"line_end":121,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":8849},{"krate":0,"index":8850},{"krate":0,"index":8852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8802},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245211,"byte_end":8245218,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":8804},{"krate":0,"index":8805},{"krate":0,"index":8807}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8757},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_int.rs","byte_start":8245243,"byte_end":8245251,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":8759},{"krate":0,"index":8760},{"krate":0,"index":8762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_line.rs","byte_start":8245680,"byte_end":8245688,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_line.rs","byte_start":8245597,"byte_end":8245664,"line_start":14,"line_end":14,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8247737,"byte_end":8247746,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8247607,"byte_end":8247674,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_string.rs","byte_start":8250730,"byte_end":8250742,"line_start":13,"line_end":13,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_string.rs","byte_start":8250647,"byte_end":8250714,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_until.rs","byte_start":8252879,"byte_end":8252888,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2206}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_until.rs","byte_start":8252796,"byte_end":8252863,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/repeat.rs","byte_start":8255151,"byte_end":8255157,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2213}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/repeat.rs","byte_start":8255843,"byte_end":8255849,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"fn (byte: u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/shutdown.rs","byte_start":8256613,"byte_end":8256621,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":2219}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8257793,"byte_end":8257797,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2225}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8258638,"byte_end":8258642,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"fn () -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8748},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8259887,"byte_end":8259892,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":8750},{"krate":0,"index":8751},{"krate":0,"index":8752},{"krate":0,"index":8753}],"decl_id":null,"docs":" Stream for the [`split`](crate::io::AsyncBufReadExt::split) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260753,"byte_end":8260765,"line_start":57,"line_end":57,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"fn (&mut self) -> io::Result<Option<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260241,"byte_end":8260284,"line_start":40,"line_end":40,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260289,"byte_end":8260292,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260297,"byte_end":8260311,"line_start":42,"line_end":42,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260316,"byte_end":8260319,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260324,"byte_end":8260331,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260336,"byte_end":8260370,"line_start":45,"line_end":45,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260375,"byte_end":8260410,"line_start":46,"line_end":46,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260415,"byte_end":8260418,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260423,"byte_end":8260506,"line_start":48,"line_end":48,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260511,"byte_end":8260558,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260563,"byte_end":8260566,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260571,"byte_end":8260633,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260638,"byte_end":8260684,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260689,"byte_end":8260694,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260699,"byte_end":8260711,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260716,"byte_end":8260723,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260728,"byte_end":8260735,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8261003,"byte_end":8261020,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8700},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274323,"byte_end":8274335,"line_start":20,"line_end":20,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::util::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":8703},{"krate":0,"index":8704}],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275611,"byte_end":8275624,"line_start":68,"line_end":68,"column_start":8,"column_end":21},"name":"stream_reader","qualname":"::io::util::stream_reader::stream_reader","value":"fn <S, B> (stream: S) -> StreamReader<S, B>","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](crate::io::AsyncRead).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274412,"byte_end":8274492,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274493,"byte_end":8274496,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274497,"byte_end":8274510,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274511,"byte_end":8274514,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274515,"byte_end":8274522,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274523,"byte_end":8274544,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/ use tokio::io::{stream_reader, AsyncReadExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274545,"byte_end":8274594,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274595,"byte_end":8274615,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274616,"byte_end":8274662,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274663,"byte_end":8274666,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Create a stream from an iterator.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274667,"byte_end":8274707,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/ let stream = tokio::stream::iter(vec![","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274708,"byte_end":8274750,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     Ok(Bytes::from_static(&[0, 1, 2, 3])),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274751,"byte_end":8274797,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[4, 5, 6, 7])),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274798,"byte_end":8274844,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/     Ok(Bytes::from_static(&[8, 9, 10, 11])),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274845,"byte_end":8274893,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/ ]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274894,"byte_end":8274901,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274902,"byte_end":8274905,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Convert it to an AsyncRead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274906,"byte_end":8274940,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ let mut read = stream_reader(stream);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274941,"byte_end":8274982,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274983,"byte_end":8274986,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ // Read five bytes from the stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8274987,"byte_end":8275026,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ let mut buf = [0; 5];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275027,"byte_end":8275052,"line_start":48,"line_end":48,"column_start":1,"column_end":26}},{"value":"/ read.read_exact(&mut buf).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275053,"byte_end":8275090,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(buf, [0, 1, 2, 3, 4]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275091,"byte_end":8275128,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275129,"byte_end":8275132,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Read the rest of the current chunk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275133,"byte_end":8275175,"line_start":52,"line_end":52,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275176,"byte_end":8275222,"line_start":53,"line_end":53,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..3], [5, 6, 7]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275223,"byte_end":8275260,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275261,"byte_end":8275264,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Read the next chunk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275265,"byte_end":8275292,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 4);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275293,"byte_end":8275339,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(&buf[..4], [8, 9, 10, 11]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275340,"byte_end":8275382,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275383,"byte_end":8275386,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // We have now reached the end.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275387,"byte_end":8275422,"line_start":60,"line_end":60,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(read.read(&mut buf).await?, 0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275423,"byte_end":8275469,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275470,"byte_end":8275473,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275474,"byte_end":8275486,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275487,"byte_end":8275494,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275495,"byte_end":8275502,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8653},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262494,"byte_end":8262498,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":8655},{"krate":0,"index":8656}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263088,"byte_end":8263093,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262785,"byte_end":8262838,"line_start":30,"line_end":30,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262843,"byte_end":8262889,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262894,"byte_end":8262897,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262902,"byte_end":8262912,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262917,"byte_end":8262920,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262925,"byte_end":8263002,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263007,"byte_end":8263076,"line_start":36,"line_end":36,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263412,"byte_end":8263421,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn (&mut self, limit: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263141,"byte_end":8263212,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263217,"byte_end":8263291,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263296,"byte_end":8263371,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263376,"byte_end":8263400,"line_start":44,"line_end":44,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263544,"byte_end":8263551,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263486,"byte_end":8263532,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263843,"byte_end":8263850,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"fn (&mut self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263598,"byte_end":8263652,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263657,"byte_end":8263660,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263665,"byte_end":8263738,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263743,"byte_end":8263815,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263820,"byte_end":8263831,"line_start":58,"line_end":58,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264161,"byte_end":8264172,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263909,"byte_end":8263970,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263975,"byte_end":8263978,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8263983,"byte_end":8264056,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264061,"byte_end":8264133,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264138,"byte_end":8264149,"line_start":67,"line_end":67,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264318,"byte_end":8264328,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264252,"byte_end":8264306,"line_start":72,"line_end":72,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write.rs","byte_start":8266258,"byte_end":8266263,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2269}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write.rs","byte_start":8266175,"byte_end":8266242,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_all.rs","byte_start":8267159,"byte_end":8267167,"line_start":12,"line_end":12,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":2277},{"krate":0,"index":2278}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_all.rs","byte_start":8267076,"byte_end":8267143,"line_start":11,"line_end":11,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_buf.rs","byte_start":8268550,"byte_end":8268558,"line_start":13,"line_end":13,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":17052,"byte_end":17079,"line_start":127,"line_end":127,"column_start":13,"column_end":40}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_buf.rs","byte_start":8268467,"byte_end":8268534,"line_start":12,"line_end":12,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8583},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272333,"byte_end":8272340,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":8585},{"krate":0,"index":8586}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8546},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272356,"byte_end":8272363,"line_start":109,"line_end":109,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":8548},{"krate":0,"index":8549}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8501},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272379,"byte_end":8272387,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":8503},{"krate":0,"index":8504},{"krate":0,"index":8506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8456},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272412,"byte_end":8272420,"line_start":112,"line_end":112,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":8458},{"krate":0,"index":8459},{"krate":0,"index":8461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8411},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272445,"byte_end":8272453,"line_start":113,"line_end":113,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":8413},{"krate":0,"index":8414},{"krate":0,"index":8416}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8366},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272478,"byte_end":8272487,"line_start":114,"line_end":114,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":8368},{"krate":0,"index":8369},{"krate":0,"index":8371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8321},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272515,"byte_end":8272523,"line_start":116,"line_end":116,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":8323},{"krate":0,"index":8324},{"krate":0,"index":8326}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272548,"byte_end":8272556,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":8278},{"krate":0,"index":8279},{"krate":0,"index":8281}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8231},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272581,"byte_end":8272589,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8233},{"krate":0,"index":8234},{"krate":0,"index":8236}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8186},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_int.rs","byte_start":8272614,"byte_end":8272623,"line_start":119,"line_end":119,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8188},{"krate":0,"index":8189},{"krate":0,"index":8191}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":302},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":361},{"krate":0,"index":2375},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2606},{"krate":0,"index":2732},{"krate":0,"index":2751},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not (loom))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66496,"byte_end":66514,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66516,"byte_end":66554,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66555,"byte_end":66558,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66559,"byte_end":66642,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"! library, which can be used to implement networking protocols.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66643,"byte_end":66708,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66709,"byte_end":66712,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! # Organization","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66713,"byte_end":66731,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66732,"byte_end":66735,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66736,"byte_end":66824,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"! * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66825,"byte_end":66894,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"! * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66895,"byte_end":66983,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"! Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":66984,"byte_end":67042,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"! * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67043,"byte_end":67106,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"! over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67107,"byte_end":67172,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67174,"byte_end":67177,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! [`TcpListener`]: TcpListener","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67178,"byte_end":67210,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"! [`TcpStream`]: TcpStream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67211,"byte_end":67239,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"! [`UdpSocket`]: UdpSocket","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67240,"byte_end":67268,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"! [`UnixListener`]: UnixListener","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67269,"byte_end":67303,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"! [`UnixStream`]: UnixStream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67304,"byte_end":67334,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"! [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67335,"byte_end":67369,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":313},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68618,"byte_end":68631,"line_start":22,"line_end":22,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":67930,"byte_end":68007,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68008,"byte_end":68011,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68012,"byte_end":68021,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68022,"byte_end":68025,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68026,"byte_end":68103,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ These implementations are only provided when Tokio is used with the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68104,"byte_end":68175,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ **`dns`** feature flag.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68176,"byte_end":68203,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68204,"byte_end":68207,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68208,"byte_end":68221,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68222,"byte_end":68225,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68226,"byte_end":68303,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68304,"byte_end":68376,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68377,"byte_end":68446,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68447,"byte_end":68450,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68451,"byte_end":68530,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust langague.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68531,"byte_end":68607,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":357},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":73945,"byte_end":73962,"line_start":223,"line_end":223,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":358},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":73978,"byte_end":73982,"line_start":224,"line_end":224,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":359},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":74043,"byte_end":74049,"line_start":225,"line_end":225,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":74121,"byte_end":74136,"line_start":227,"line_end":227,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"fn (&self) -> Self::Future","parent":{"krate":0,"index":357},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2376},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2579}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":19787,"byte_end":19810,"line_start":265,"line_end":265,"column_start":13,"column_end":36}},{"value":"! TCP utility types","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/mod.rs","byte_start":8280077,"byte_end":8280098,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282612,"byte_end":8282623,"line_start":69,"line_end":69,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":2583}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":19787,"byte_end":19810,"line_start":265,"line_end":265,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283825,"byte_end":8283829,"line_start":107,"line_end":107,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"fn <A> (addr: A) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener which will be bound to the specified address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282706,"byte_end":8282781,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282786,"byte_end":8282789,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282794,"byte_end":8282855,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282860,"byte_end":8282863,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282868,"byte_end":8282943,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282948,"byte_end":8283024,"line_start":80,"line_end":80,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283029,"byte_end":8283040,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283045,"byte_end":8283048,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of `ToSocketAddrs` trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283053,"byte_end":8283122,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283127,"byte_end":8283130,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283135,"byte_end":8283211,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283216,"byte_end":8283289,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283294,"byte_end":8283367,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283372,"byte_end":8283424,"line_start":88,"line_end":88,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283429,"byte_end":8283432,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283437,"byte_end":8283451,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283456,"byte_end":8283459,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283464,"byte_end":8283477,"line_start":92,"line_end":92,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283482,"byte_end":8283514,"line_start":93,"line_end":93,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283519,"byte_end":8283522,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283527,"byte_end":8283543,"line_start":95,"line_end":95,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283548,"byte_end":8283551,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283556,"byte_end":8283574,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283579,"byte_end":8283618,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283623,"byte_end":8283686,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283691,"byte_end":8283694,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283699,"byte_end":8283726,"line_start":101,"line_end":101,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283731,"byte_end":8283734,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283739,"byte_end":8283766,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283771,"byte_end":8283785,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283790,"byte_end":8283795,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8283800,"byte_end":8283807,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285397,"byte_end":8285403,"line_start":159,"line_end":159,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"fn (&mut self) -> io::Result<(TcpStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284542,"byte_end":8284599,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284604,"byte_end":8284607,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284612,"byte_end":8284687,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284692,"byte_end":8284762,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284767,"byte_end":8284796,"line_start":136,"line_end":136,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284801,"byte_end":8284804,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: ../struct.TcpStream.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284809,"byte_end":8284852,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284857,"byte_end":8284860,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284865,"byte_end":8284879,"line_start":140,"line_end":140,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284884,"byte_end":8284887,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284892,"byte_end":8284905,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284910,"byte_end":8284942,"line_start":143,"line_end":143,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284947,"byte_end":8284950,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284955,"byte_end":8284971,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284976,"byte_end":8284979,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8284984,"byte_end":8285002,"line_start":147,"line_end":147,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285007,"byte_end":8285046,"line_start":148,"line_end":148,"column_start":5,"column_end":44}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285051,"byte_end":8285121,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285126,"byte_end":8285129,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285134,"byte_end":8285173,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285178,"byte_end":8285248,"line_start":152,"line_end":152,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285253,"byte_end":8285316,"line_start":153,"line_end":153,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285321,"byte_end":8285330,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285335,"byte_end":8285338,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285343,"byte_end":8285357,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285362,"byte_end":8285367,"line_start":157,"line_end":157,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285372,"byte_end":8285379,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285739,"byte_end":8285750,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","sig":null,"attributes":[{"value":"/ Attempts to poll `SocketAddr` and `TcpStream` bound to this address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285516,"byte_end":8285588,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285593,"byte_end":8285596,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ In case if I/O resource isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285601,"byte_end":8285677,"line_start":165,"line_end":165,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8285682,"byte_end":8285727,"line_start":166,"line_end":166,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288612,"byte_end":8288620,"line_start":241,"line_end":241,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"fn (listener: net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TCP listener from the standard library's TCP listener.","sig":null,"attributes":[{"value":"/ Creates a new TCP listener from the standard library's TCP listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286597,"byte_end":8286669,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286674,"byte_end":8286677,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This method can be used when the `Handle::tcp_listen` method isn't","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286682,"byte_end":8286752,"line_start":197,"line_end":197,"column_start":5,"column_end":75}},{"value":"/ sufficient because perhaps some more configuration is needed in terms of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286757,"byte_end":8286833,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ before the calls to `bind` and `listen`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286838,"byte_end":8286882,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286887,"byte_end":8286890,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `net2` crate and the `TcpBuilder`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286895,"byte_end":8286970,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8286975,"byte_end":8287051,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287056,"byte_end":8287121,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287126,"byte_end":8287181,"line_start":204,"line_end":204,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287186,"byte_end":8287189,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The `addr` argument here is one of the addresses that `listener` is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287194,"byte_end":8287265,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ bound to and the listener will only be guaranteed to accept connections","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287270,"byte_end":8287345,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ of the same address type currently.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287350,"byte_end":8287389,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287394,"byte_end":8287397,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The platform specific behavior of this function looks like:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287402,"byte_end":8287465,"line_start":210,"line_end":210,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287470,"byte_end":8287473,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ * On Unix, the socket is placed into nonblocking mode and connections","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287478,"byte_end":8287551,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/   can be accepted as normal","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287556,"byte_end":8287587,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287592,"byte_end":8287595,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ * On Windows, the address is stored internally and all future accepts","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287600,"byte_end":8287673,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/   will only be for the same IP version as `addr` specified. That is, if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287678,"byte_end":8287753,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/   `addr` is an IPv4 address then all sockets accepted will be IPv4 as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287758,"byte_end":8287831,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/   well (same for IPv6).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287836,"byte_end":8287863,"line_start":218,"line_end":218,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287868,"byte_end":8287871,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287876,"byte_end":8287890,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287895,"byte_end":8287898,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287903,"byte_end":8287921,"line_start":222,"line_end":222,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287926,"byte_end":8287952,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287957,"byte_end":8287989,"line_start":224,"line_end":224,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8287994,"byte_end":8287997,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288002,"byte_end":8288020,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288025,"byte_end":8288076,"line_start":227,"line_end":227,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288081,"byte_end":8288152,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288157,"byte_end":8288217,"line_start":229,"line_end":229,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288222,"byte_end":8288236,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288241,"byte_end":8288246,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288251,"byte_end":8288258,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288263,"byte_end":8288266,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288271,"byte_end":8288283,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288288,"byte_end":8288291,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288296,"byte_end":8288356,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288361,"byte_end":8288364,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288369,"byte_end":8288439,"line_start":238,"line_end":238,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288444,"byte_end":8288517,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288522,"byte_end":8288600,"line_start":240,"line_end":240,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289704,"byte_end":8289714,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8288978,"byte_end":8289039,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289044,"byte_end":8289047,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289052,"byte_end":8289125,"line_start":254,"line_end":254,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289130,"byte_end":8289164,"line_start":255,"line_end":255,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289169,"byte_end":8289172,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289177,"byte_end":8289191,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289196,"byte_end":8289199,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289204,"byte_end":8289222,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289227,"byte_end":8289259,"line_start":260,"line_end":260,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289264,"byte_end":8289267,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289272,"byte_end":8289288,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289293,"byte_end":8289348,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289353,"byte_end":8289356,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289361,"byte_end":8289379,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289384,"byte_end":8289423,"line_start":266,"line_end":266,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289428,"byte_end":8289494,"line_start":267,"line_end":267,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289499,"byte_end":8289502,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289507,"byte_end":8289549,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289554,"byte_end":8289643,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289648,"byte_end":8289651,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289656,"byte_end":8289670,"line_start":272,"line_end":272,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289675,"byte_end":8289680,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289685,"byte_end":8289692,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291145,"byte_end":8291153,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"incoming","qualname":"<TcpListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289800,"byte_end":8289874,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289879,"byte_end":8289882,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Note that `TcpListener` also directly implements `Stream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289887,"byte_end":8289949,"line_start":281,"line_end":281,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289954,"byte_end":8289957,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8289962,"byte_end":8290038,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290043,"byte_end":8290112,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290117,"byte_end":8290146,"line_start":285,"line_end":285,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290151,"byte_end":8290154,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290159,"byte_end":8290171,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290176,"byte_end":8290179,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290184,"byte_end":8290259,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290264,"byte_end":8290339,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290344,"byte_end":8290418,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290423,"byte_end":8290498,"line_start":292,"line_end":292,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290503,"byte_end":8290511,"line_start":293,"line_end":293,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290516,"byte_end":8290519,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290524,"byte_end":8290538,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290543,"byte_end":8290546,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290551,"byte_end":8290564,"line_start":297,"line_end":297,"column_start":5,"column_end":18}},{"value":"/ use tokio::{net::TcpListener, stream::StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290569,"byte_end":8290622,"line_start":298,"line_end":298,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290627,"byte_end":8290630,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290635,"byte_end":8290653,"line_start":300,"line_end":300,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290658,"byte_end":8290679,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290684,"byte_end":8290762,"line_start":302,"line_end":302,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290767,"byte_end":8290814,"line_start":303,"line_end":303,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290819,"byte_end":8290822,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290827,"byte_end":8290883,"line_start":305,"line_end":305,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290888,"byte_end":8290914,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290919,"byte_end":8290950,"line_start":307,"line_end":307,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8290955,"byte_end":8290999,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291004,"byte_end":8291021,"line_start":309,"line_end":309,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291026,"byte_end":8291079,"line_start":310,"line_end":310,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291084,"byte_end":8291097,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291102,"byte_end":8291111,"line_start":312,"line_end":312,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291116,"byte_end":8291121,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291126,"byte_end":8291133,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291834,"byte_end":8291837,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291222,"byte_end":8291280,"line_start":319,"line_end":319,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291285,"byte_end":8291288,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291293,"byte_end":8291353,"line_start":321,"line_end":321,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291358,"byte_end":8291361,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291366,"byte_end":8291398,"line_start":323,"line_end":323,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291403,"byte_end":8291406,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291411,"byte_end":8291425,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291430,"byte_end":8291433,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291438,"byte_end":8291451,"line_start":327,"line_end":327,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291456,"byte_end":8291488,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291493,"byte_end":8291496,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291501,"byte_end":8291517,"line_start":330,"line_end":330,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291522,"byte_end":8291525,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291530,"byte_end":8291548,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291553,"byte_end":8291592,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291597,"byte_end":8291659,"line_start":334,"line_end":334,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291664,"byte_end":8291667,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291672,"byte_end":8291729,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291734,"byte_end":8291774,"line_start":337,"line_end":337,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291779,"byte_end":8291782,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291787,"byte_end":8291800,"line_start":339,"line_end":339,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291805,"byte_end":8291810,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291815,"byte_end":8291822,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292476,"byte_end":8292483,"line_start":367,"line_end":367,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291909,"byte_end":8291967,"line_start":346,"line_end":346,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291972,"byte_end":8291975,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8291980,"byte_end":8292056,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292061,"byte_end":8292082,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292087,"byte_end":8292090,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292095,"byte_end":8292109,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292114,"byte_end":8292117,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292122,"byte_end":8292135,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292140,"byte_end":8292172,"line_start":354,"line_end":354,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292177,"byte_end":8292180,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292185,"byte_end":8292201,"line_start":356,"line_end":356,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292206,"byte_end":8292209,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292214,"byte_end":8292232,"line_start":358,"line_end":358,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292237,"byte_end":8292276,"line_start":359,"line_end":359,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292281,"byte_end":8292344,"line_start":360,"line_end":360,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292349,"byte_end":8292352,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292357,"byte_end":8292415,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292420,"byte_end":8292423,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292428,"byte_end":8292442,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292447,"byte_end":8292452,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292457,"byte_end":8292464,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294756,"byte_end":8294764,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::tcp::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2586}],"decl_id":null,"docs":" Stream returned by the `TcpListener::incoming` function representing the\n stream of sockets received from a listener.\n","sig":null,"attributes":[{"value":"/ Stream returned by the `TcpListener::incoming` function representing the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294554,"byte_end":8294630,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ stream of sockets received from a listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294631,"byte_end":8294678,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294679,"byte_end":8294727,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295179,"byte_end":8295190,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<TcpStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `TcpStream` by polling inner `TcpListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `TcpStream` by polling inner `TcpListener` to accept","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294942,"byte_end":8295015,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295020,"byte_end":8295035,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295040,"byte_end":8295043,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ If `TcpListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295048,"byte_end":8295117,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ current task will be notified by a waker.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295122,"byte_end":8295167,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296401,"byte_end":8296409,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `TcpStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `TcpStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296341,"byte_end":8296372,"line_start":22,"line_end":22,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296648,"byte_end":8296657,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `TcpStream`.","sig":null,"attributes":[{"value":"/ Write half of a `TcpStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296431,"byte_end":8296463,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296464,"byte_end":8296467,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Note that in the `AsyncWrite` implemenation of `TcpStreamWriteHalf`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296468,"byte_end":8296540,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ `poll_shutdown` actually shuts down the TCP stream in the write direction.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296541,"byte_end":8296619,"line_start":29,"line_end":29,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297714,"byte_end":8297723,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296831,"byte_end":8296905,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296910,"byte_end":8296983,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296988,"byte_end":8297002,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297007,"byte_end":8297010,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297015,"byte_end":8297088,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297093,"byte_end":8297096,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297101,"byte_end":8297115,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297120,"byte_end":8297123,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297128,"byte_end":8297141,"line_start":46,"line_end":46,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297146,"byte_end":8297164,"line_start":47,"line_end":47,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297169,"byte_end":8297199,"line_start":48,"line_end":48,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297204,"byte_end":8297207,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297212,"byte_end":8297245,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297250,"byte_end":8297253,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297258,"byte_end":8297276,"line_start":52,"line_end":52,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297281,"byte_end":8297320,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297325,"byte_end":8297394,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297399,"byte_end":8297447,"line_start":55,"line_end":55,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297452,"byte_end":8297482,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297487,"byte_end":8297490,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297495,"byte_end":8297517,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297522,"byte_end":8297567,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297572,"byte_end":8297590,"line_start":60,"line_end":60,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297595,"byte_end":8297598,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297603,"byte_end":8297617,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297622,"byte_end":8297627,"line_start":63,"line_end":63,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297632,"byte_end":8297639,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297644,"byte_end":8297647,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297652,"byte_end":8297702,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298947,"byte_end":8298951,"line_start":105,"line_end":105,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297848,"byte_end":8297918,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297923,"byte_end":8297992,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8297997,"byte_end":8298036,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298041,"byte_end":8298044,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298049,"byte_end":8298117,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298122,"byte_end":8298125,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298130,"byte_end":8298144,"line_start":77,"line_end":77,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298149,"byte_end":8298152,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298157,"byte_end":8298170,"line_start":79,"line_end":79,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298175,"byte_end":8298205,"line_start":80,"line_end":80,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298210,"byte_end":8298236,"line_start":81,"line_end":81,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298241,"byte_end":8298267,"line_start":82,"line_end":82,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298272,"byte_end":8298275,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298280,"byte_end":8298298,"line_start":84,"line_end":84,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298303,"byte_end":8298354,"line_start":85,"line_end":85,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298359,"byte_end":8298387,"line_start":86,"line_end":86,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298392,"byte_end":8298461,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298466,"byte_end":8298514,"line_start":88,"line_end":88,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298519,"byte_end":8298522,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298527,"byte_end":8298556,"line_start":90,"line_end":90,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298561,"byte_end":8298590,"line_start":91,"line_end":91,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298595,"byte_end":8298598,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298603,"byte_end":8298630,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298635,"byte_end":8298682,"line_start":94,"line_end":94,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298687,"byte_end":8298690,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298695,"byte_end":8298719,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298724,"byte_end":8298783,"line_start":97,"line_end":97,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298788,"byte_end":8298827,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298832,"byte_end":8298835,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298840,"byte_end":8298854,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298859,"byte_end":8298864,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298869,"byte_end":8298876,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298881,"byte_end":8298884,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8298889,"byte_end":8298929,"line_start":104,"line_end":104,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301746,"byte_end":8301755,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":2605}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":19787,"byte_end":19810,"line_start":265,"line_end":265,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302837,"byte_end":8302844,"line_start":79,"line_end":79,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"fn <A> (addr: A) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301834,"byte_end":8301878,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301883,"byte_end":8301886,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301891,"byte_end":8301961,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ `ToSocketAddrs` trait can be supplied for the address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301966,"byte_end":8302024,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302029,"byte_end":8302032,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ If `addr` yields multiple addresses, connect will be attempted with each","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302037,"byte_end":8302113,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ of the addresses until a connection is successful. If none of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302118,"byte_end":8302187,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ addresses result in a successful connection, the error returned from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302192,"byte_end":8302268,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/ last connection attempt (the last address) is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302273,"byte_end":8302332,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302337,"byte_end":8302340,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302345,"byte_end":8302359,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302364,"byte_end":8302367,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302372,"byte_end":8302385,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302390,"byte_end":8302420,"line_start":64,"line_end":64,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302425,"byte_end":8302451,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302456,"byte_end":8302482,"line_start":66,"line_end":66,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302487,"byte_end":8302490,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302495,"byte_end":8302513,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302518,"byte_end":8302569,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302574,"byte_end":8302602,"line_start":70,"line_end":70,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302607,"byte_end":8302676,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302681,"byte_end":8302684,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302689,"byte_end":8302716,"line_start":73,"line_end":73,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302721,"byte_end":8302770,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302775,"byte_end":8302778,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302783,"byte_end":8302797,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302802,"byte_end":8302807,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8302812,"byte_end":8302819,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305277,"byte_end":8305285,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"fn (stream: net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304310,"byte_end":8304367,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304372,"byte_end":8304375,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function will convert a TCP stream created by the standard library","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304380,"byte_end":8304455,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ to a TCP stream ready to be used with the provided event loop handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304460,"byte_end":8304533,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304538,"byte_end":8304541,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304546,"byte_end":8304560,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304565,"byte_end":8304568,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304573,"byte_end":8304591,"line_start":131,"line_end":131,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304596,"byte_end":8304622,"line_start":132,"line_end":132,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304627,"byte_end":8304657,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304662,"byte_end":8304665,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304670,"byte_end":8304688,"line_start":135,"line_end":135,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304693,"byte_end":8304744,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304749,"byte_end":8304823,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304828,"byte_end":8304882,"line_start":138,"line_end":138,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304887,"byte_end":8304901,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304906,"byte_end":8304911,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304916,"byte_end":8304923,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304928,"byte_end":8304931,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304936,"byte_end":8304948,"line_start":143,"line_end":143,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304953,"byte_end":8304956,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8304961,"byte_end":8305021,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305026,"byte_end":8305029,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305034,"byte_end":8305104,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305109,"byte_end":8305182,"line_start":148,"line_end":148,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305187,"byte_end":8305265,"line_start":149,"line_end":149,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8305682,"byte_end":8305693,"line_start":160,"line_end":160,"column_start":18,"column_end":29},"name":"connect_std","qualname":"<TcpStream>::connect_std","value":"fn (stream: net::TcpStream, addr: &SocketAddr) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306841,"byte_end":8306851,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306442,"byte_end":8306501,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306506,"byte_end":8306509,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306514,"byte_end":8306528,"line_start":182,"line_end":182,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306533,"byte_end":8306536,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306541,"byte_end":8306554,"line_start":184,"line_end":184,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306559,"byte_end":8306589,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306594,"byte_end":8306597,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306602,"byte_end":8306666,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306671,"byte_end":8306732,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306737,"byte_end":8306740,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306745,"byte_end":8306788,"line_start":190,"line_end":190,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306793,"byte_end":8306805,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306810,"byte_end":8306817,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306822,"byte_end":8306829,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307340,"byte_end":8307349,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8306937,"byte_end":8307001,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307006,"byte_end":8307009,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307014,"byte_end":8307028,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307033,"byte_end":8307036,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307041,"byte_end":8307054,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307059,"byte_end":8307089,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307094,"byte_end":8307097,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307102,"byte_end":8307166,"line_start":205,"line_end":205,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307171,"byte_end":8307232,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307237,"byte_end":8307240,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307245,"byte_end":8307287,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307292,"byte_end":8307304,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307309,"byte_end":8307316,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307321,"byte_end":8307328,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308507,"byte_end":8308516,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"fn (&mut self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307434,"byte_end":8307509,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307514,"byte_end":8307587,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307592,"byte_end":8307606,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307611,"byte_end":8307614,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307619,"byte_end":8307637,"line_start":220,"line_end":220,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307642,"byte_end":8307645,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307650,"byte_end":8307675,"line_start":222,"line_end":222,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307680,"byte_end":8307683,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307688,"byte_end":8307739,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307744,"byte_end":8307827,"line_start":225,"line_end":225,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307832,"byte_end":8307887,"line_start":226,"line_end":226,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307892,"byte_end":8307895,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307900,"byte_end":8307912,"line_start":228,"line_end":228,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307917,"byte_end":8307920,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8307925,"byte_end":8308000,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308005,"byte_end":8308008,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308013,"byte_end":8308027,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308032,"byte_end":8308035,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308040,"byte_end":8308053,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308058,"byte_end":8308076,"line_start":235,"line_end":235,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308081,"byte_end":8308111,"line_start":236,"line_end":236,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308116,"byte_end":8308119,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308124,"byte_end":8308157,"line_start":238,"line_end":238,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308162,"byte_end":8308165,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308170,"byte_end":8308188,"line_start":240,"line_end":240,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308193,"byte_end":8308232,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308237,"byte_end":8308306,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308311,"byte_end":8308341,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308346,"byte_end":8308349,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308354,"byte_end":8308376,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308381,"byte_end":8308423,"line_start":246,"line_end":246,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308428,"byte_end":8308446,"line_start":247,"line_end":247,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308451,"byte_end":8308454,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308459,"byte_end":8308473,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308478,"byte_end":8308483,"line_start":250,"line_end":250,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8308488,"byte_end":8308495,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310235,"byte_end":8310239,"line_start":305,"line_end":305,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309177,"byte_end":8309247,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309252,"byte_end":8309321,"line_start":274,"line_end":274,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309326,"byte_end":8309365,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309370,"byte_end":8309373,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309378,"byte_end":8309452,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309457,"byte_end":8309517,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309522,"byte_end":8309525,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309530,"byte_end":8309544,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309549,"byte_end":8309552,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309557,"byte_end":8309570,"line_start":282,"line_end":282,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309575,"byte_end":8309605,"line_start":283,"line_end":283,"column_start":5,"column_end":35}},{"value":"/ use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309610,"byte_end":8309636,"line_start":284,"line_end":284,"column_start":5,"column_end":31}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309641,"byte_end":8309667,"line_start":285,"line_end":285,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309672,"byte_end":8309675,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309680,"byte_end":8309698,"line_start":287,"line_end":287,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309703,"byte_end":8309754,"line_start":288,"line_end":288,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309759,"byte_end":8309787,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309792,"byte_end":8309861,"line_start":290,"line_end":290,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309866,"byte_end":8309869,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309874,"byte_end":8309903,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309908,"byte_end":8309937,"line_start":293,"line_end":293,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309942,"byte_end":8309945,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309950,"byte_end":8309977,"line_start":295,"line_end":295,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8309982,"byte_end":8310026,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310031,"byte_end":8310034,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310039,"byte_end":8310063,"line_start":298,"line_end":298,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310068,"byte_end":8310124,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310129,"byte_end":8310168,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310173,"byte_end":8310176,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310181,"byte_end":8310195,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310200,"byte_end":8310205,"line_start":303,"line_end":303,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310210,"byte_end":8310217,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311108,"byte_end":8311116,"line_start":333,"line_end":333,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<TcpStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310353,"byte_end":8310419,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310424,"byte_end":8310427,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O on the specified","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310432,"byte_end":8310504,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ portions to return immediately with an appropriate value (see the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310509,"byte_end":8310578,"line_start":312,"line_end":312,"column_start":5,"column_end":74}},{"value":"/ documentation of `Shutdown`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310583,"byte_end":8310616,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310621,"byte_end":8310624,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310629,"byte_end":8310643,"line_start":315,"line_end":315,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310648,"byte_end":8310651,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310656,"byte_end":8310669,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310674,"byte_end":8310704,"line_start":318,"line_end":318,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310709,"byte_end":8310735,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310740,"byte_end":8310767,"line_start":320,"line_end":320,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310772,"byte_end":8310775,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310780,"byte_end":8310798,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310803,"byte_end":8310854,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310859,"byte_end":8310887,"line_start":324,"line_end":324,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310892,"byte_end":8310957,"line_start":325,"line_end":325,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310962,"byte_end":8310965,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/     // Shutdown the stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8310970,"byte_end":8311000,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/     stream.shutdown(Shutdown::Write)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311005,"byte_end":8311047,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311052,"byte_end":8311055,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311060,"byte_end":8311074,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311079,"byte_end":8311084,"line_start":331,"line_end":331,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311089,"byte_end":8311096,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311742,"byte_end":8311749,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311210,"byte_end":8311272,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311277,"byte_end":8311280,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311285,"byte_end":8311349,"line_start":339,"line_end":339,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311354,"byte_end":8311357,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311362,"byte_end":8311405,"line_start":341,"line_end":341,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311410,"byte_end":8311413,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311418,"byte_end":8311432,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311437,"byte_end":8311440,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311445,"byte_end":8311458,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311463,"byte_end":8311493,"line_start":346,"line_end":346,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311498,"byte_end":8311501,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311506,"byte_end":8311570,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311575,"byte_end":8311636,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311641,"byte_end":8311644,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311649,"byte_end":8311689,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311694,"byte_end":8311706,"line_start":352,"line_end":352,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311711,"byte_end":8311718,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311723,"byte_end":8311730,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312556,"byte_end":8312567,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311826,"byte_end":8311888,"line_start":359,"line_end":359,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311893,"byte_end":8311896,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311901,"byte_end":8311970,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8311975,"byte_end":8312048,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312053,"byte_end":8312126,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312131,"byte_end":8312206,"line_start":364,"line_end":364,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312211,"byte_end":8312229,"line_start":365,"line_end":365,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312234,"byte_end":8312237,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312242,"byte_end":8312256,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312261,"byte_end":8312264,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312269,"byte_end":8312282,"line_start":369,"line_end":369,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312287,"byte_end":8312317,"line_start":370,"line_end":370,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312322,"byte_end":8312325,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312330,"byte_end":8312394,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312399,"byte_end":8312460,"line_start":373,"line_end":373,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312465,"byte_end":8312468,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312473,"byte_end":8312503,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312508,"byte_end":8312520,"line_start":376,"line_end":376,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312525,"byte_end":8312532,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312537,"byte_end":8312544,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313234,"byte_end":8313250,"line_start":401,"line_end":401,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpStream>::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312668,"byte_end":8312728,"line_start":383,"line_end":383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312733,"byte_end":8312736,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_recv_buffer_size`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312741,"byte_end":8312814,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312819,"byte_end":8312822,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: TcpStream::set_recv_buffer_size","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312827,"byte_end":8312888,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312893,"byte_end":8312896,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312901,"byte_end":8312915,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312920,"byte_end":8312923,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312928,"byte_end":8312941,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312946,"byte_end":8312976,"line_start":392,"line_end":392,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312981,"byte_end":8312984,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8312989,"byte_end":8313053,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313058,"byte_end":8313119,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313124,"byte_end":8313127,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.recv_buffer_size()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313132,"byte_end":8313181,"line_start":397,"line_end":397,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313186,"byte_end":8313198,"line_start":398,"line_end":398,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313203,"byte_end":8313210,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313215,"byte_end":8313222,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313842,"byte_end":8313862,"line_start":422,"line_end":422,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpStream>::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_RCVBUF` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313337,"byte_end":8313397,"line_start":405,"line_end":405,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313402,"byte_end":8313405,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's receive buffer associated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313410,"byte_end":8313482,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/ with the socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313487,"byte_end":8313507,"line_start":408,"line_end":408,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313512,"byte_end":8313515,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313520,"byte_end":8313534,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313539,"byte_end":8313542,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313547,"byte_end":8313560,"line_start":412,"line_end":412,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313565,"byte_end":8313595,"line_start":413,"line_end":413,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313600,"byte_end":8313603,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313608,"byte_end":8313672,"line_start":415,"line_end":415,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313677,"byte_end":8313738,"line_start":416,"line_end":416,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313743,"byte_end":8313746,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ stream.set_recv_buffer_size(100)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313751,"byte_end":8313789,"line_start":418,"line_end":418,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313794,"byte_end":8313806,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313811,"byte_end":8313818,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313823,"byte_end":8313830,"line_start":421,"line_end":421,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314533,"byte_end":8314549,"line_start":444,"line_end":444,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpStream>::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8313967,"byte_end":8314027,"line_start":426,"line_end":426,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314032,"byte_end":8314035,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_send_buffer_size`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314040,"byte_end":8314113,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314118,"byte_end":8314121,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: TcpStream::set_send_buffer_size","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314126,"byte_end":8314187,"line_start":430,"line_end":430,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314192,"byte_end":8314195,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314200,"byte_end":8314214,"line_start":432,"line_end":432,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314219,"byte_end":8314222,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314227,"byte_end":8314240,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314245,"byte_end":8314275,"line_start":435,"line_end":435,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314280,"byte_end":8314283,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314288,"byte_end":8314352,"line_start":437,"line_end":437,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314357,"byte_end":8314418,"line_start":438,"line_end":438,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314423,"byte_end":8314426,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.send_buffer_size()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314431,"byte_end":8314480,"line_start":440,"line_end":440,"column_start":5,"column_end":54}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314485,"byte_end":8314497,"line_start":441,"line_end":441,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314502,"byte_end":8314509,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314514,"byte_end":8314521,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315138,"byte_end":8315158,"line_start":465,"line_end":465,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpStream>::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_SNDBUF` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314636,"byte_end":8314696,"line_start":448,"line_end":448,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314701,"byte_end":8314704,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Changes the size of the operating system's send buffer associated with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314709,"byte_end":8314783,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ the socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314788,"byte_end":8314803,"line_start":451,"line_end":451,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314808,"byte_end":8314811,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314816,"byte_end":8314830,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314835,"byte_end":8314838,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314843,"byte_end":8314856,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314861,"byte_end":8314891,"line_start":456,"line_end":456,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314896,"byte_end":8314899,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314904,"byte_end":8314968,"line_start":458,"line_end":458,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8314973,"byte_end":8315034,"line_start":459,"line_end":459,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315039,"byte_end":8315042,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ stream.set_send_buffer_size(100)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315047,"byte_end":8315085,"line_start":461,"line_end":461,"column_start":5,"column_end":43}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315090,"byte_end":8315102,"line_start":462,"line_end":462,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315107,"byte_end":8315114,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315119,"byte_end":8315126,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315860,"byte_end":8315869,"line_start":488,"line_end":488,"column_start":12,"column_end":21},"name":"keepalive","qualname":"<TcpStream>::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[{"value":"/ Returns whether keepalive messages are enabled on this socket, and if so","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315263,"byte_end":8315339,"line_start":469,"line_end":469,"column_start":5,"column_end":81}},{"value":"/ the duration of time between them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315344,"byte_end":8315382,"line_start":470,"line_end":470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315387,"byte_end":8315390,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_keepalive`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315395,"byte_end":8315461,"line_start":472,"line_end":472,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315466,"byte_end":8315469,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ [`set_keepalive`]: TcpStream::set_keepalive","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315474,"byte_end":8315521,"line_start":474,"line_end":474,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315526,"byte_end":8315529,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315534,"byte_end":8315548,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315553,"byte_end":8315556,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315561,"byte_end":8315574,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315579,"byte_end":8315609,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315614,"byte_end":8315617,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315622,"byte_end":8315686,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315691,"byte_end":8315752,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315757,"byte_end":8315760,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.keepalive()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315765,"byte_end":8315807,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315812,"byte_end":8315824,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315829,"byte_end":8315836,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315841,"byte_end":8315848,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316900,"byte_end":8316913,"line_start":517,"line_end":517,"column_start":12,"column_end":25},"name":"set_keepalive","qualname":"<TcpStream>::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[{"value":"/ Sets whether keepalive messages are enabled to be sent on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8315960,"byte_end":8316034,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316039,"byte_end":8316042,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ On Unix, this option will set the `SO_KEEPALIVE` as well as the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316047,"byte_end":8316114,"line_start":494,"line_end":494,"column_start":5,"column_end":72}},{"value":"/ `TCP_KEEPALIVE` or `TCP_KEEPIDLE` option (depending on your platform).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316119,"byte_end":8316193,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/ On Windows, this will set the `SIO_KEEPALIVE_VALS` option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316198,"byte_end":8316260,"line_start":496,"line_end":496,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316265,"byte_end":8316268,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified then keepalive messages are disabled, otherwise","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316273,"byte_end":8316347,"line_start":498,"line_end":498,"column_start":5,"column_end":79}},{"value":"/ the duration specified will be the time to remain idle before sending a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316352,"byte_end":8316427,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ TCP keepalive probe.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316432,"byte_end":8316456,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316461,"byte_end":8316464,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Some platforms specify this value in seconds, so sub-second","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316469,"byte_end":8316532,"line_start":502,"line_end":502,"column_start":5,"column_end":68}},{"value":"/ specifications may be omitted.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316537,"byte_end":8316571,"line_start":503,"line_end":503,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316576,"byte_end":8316579,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316584,"byte_end":8316598,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316603,"byte_end":8316606,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316611,"byte_end":8316624,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316629,"byte_end":8316659,"line_start":508,"line_end":508,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316664,"byte_end":8316667,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316672,"byte_end":8316736,"line_start":510,"line_end":510,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316741,"byte_end":8316802,"line_start":511,"line_end":511,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316807,"byte_end":8316810,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ stream.set_keepalive(None)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316815,"byte_end":8316847,"line_start":513,"line_end":513,"column_start":5,"column_end":37}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316852,"byte_end":8316864,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316869,"byte_end":8316876,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8316881,"byte_end":8316888,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317544,"byte_end":8317547,"line_start":539,"line_end":539,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317032,"byte_end":8317090,"line_start":521,"line_end":521,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317095,"byte_end":8317098,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317103,"byte_end":8317163,"line_start":523,"line_end":523,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317168,"byte_end":8317171,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317176,"byte_end":8317211,"line_start":525,"line_end":525,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317216,"byte_end":8317219,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317224,"byte_end":8317238,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317243,"byte_end":8317246,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317251,"byte_end":8317264,"line_start":529,"line_end":529,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317269,"byte_end":8317299,"line_start":530,"line_end":530,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317304,"byte_end":8317307,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317312,"byte_end":8317376,"line_start":532,"line_end":532,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317381,"byte_end":8317442,"line_start":533,"line_end":533,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317447,"byte_end":8317450,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317455,"byte_end":8317491,"line_start":535,"line_end":535,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317496,"byte_end":8317508,"line_start":536,"line_end":536,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317513,"byte_end":8317520,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317525,"byte_end":8317532,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318114,"byte_end":8318121,"line_start":560,"line_end":560,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317619,"byte_end":8317677,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317682,"byte_end":8317685,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317690,"byte_end":8317766,"line_start":545,"line_end":545,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317771,"byte_end":8317792,"line_start":546,"line_end":546,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317797,"byte_end":8317800,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317805,"byte_end":8317819,"line_start":548,"line_end":548,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317824,"byte_end":8317827,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317832,"byte_end":8317845,"line_start":550,"line_end":550,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317850,"byte_end":8317880,"line_start":551,"line_end":551,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317885,"byte_end":8317888,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317893,"byte_end":8317957,"line_start":553,"line_end":553,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8317962,"byte_end":8318023,"line_start":554,"line_end":554,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318028,"byte_end":8318031,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318036,"byte_end":8318061,"line_start":556,"line_end":556,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318066,"byte_end":8318078,"line_start":557,"line_end":557,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318083,"byte_end":8318090,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318095,"byte_end":8318102,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318763,"byte_end":8318769,"line_start":583,"line_end":583,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318209,"byte_end":8318281,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318286,"byte_end":8318297,"line_start":565,"line_end":565,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318302,"byte_end":8318305,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318310,"byte_end":8318373,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318378,"byte_end":8318381,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318386,"byte_end":8318427,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318432,"byte_end":8318435,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318440,"byte_end":8318454,"line_start":571,"line_end":571,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318459,"byte_end":8318462,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318467,"byte_end":8318480,"line_start":573,"line_end":573,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318485,"byte_end":8318515,"line_start":574,"line_end":574,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318520,"byte_end":8318523,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318528,"byte_end":8318592,"line_start":576,"line_end":576,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318597,"byte_end":8318658,"line_start":577,"line_end":577,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318663,"byte_end":8318666,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318671,"byte_end":8318710,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318715,"byte_end":8318727,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318732,"byte_end":8318739,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318744,"byte_end":8318751,"line_start":582,"line_end":582,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319711,"byte_end":8319721,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the `SO_LINGER`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318857,"byte_end":8318927,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318932,"byte_end":8318943,"line_start":588,"line_end":588,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318948,"byte_end":8318951,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8318956,"byte_end":8319031,"line_start":590,"line_end":590,"column_start":5,"column_end":80}},{"value":"/ and the stream is closed. If `SO_LINGER` is set, the system","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319036,"byte_end":8319099,"line_start":591,"line_end":591,"column_start":5,"column_end":68}},{"value":"/ shall block the process until it can transmit the data or until the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319104,"byte_end":8319175,"line_start":592,"line_end":592,"column_start":5,"column_end":76}},{"value":"/ time expires.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319180,"byte_end":8319197,"line_start":593,"line_end":593,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319202,"byte_end":8319205,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ If `SO_LINGER` is not specified, and the stream is closed, the system","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319210,"byte_end":8319283,"line_start":595,"line_end":595,"column_start":5,"column_end":78}},{"value":"/ handles the call in a way that allows the process to continue as quickly","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319288,"byte_end":8319364,"line_start":596,"line_end":596,"column_start":5,"column_end":81}},{"value":"/ as possible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319369,"byte_end":8319385,"line_start":597,"line_end":597,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319390,"byte_end":8319393,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319398,"byte_end":8319412,"line_start":599,"line_end":599,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319417,"byte_end":8319420,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319425,"byte_end":8319438,"line_start":601,"line_end":601,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319443,"byte_end":8319473,"line_start":602,"line_end":602,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319478,"byte_end":8319481,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319486,"byte_end":8319550,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319555,"byte_end":8319616,"line_start":605,"line_end":605,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319621,"byte_end":8319624,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319629,"byte_end":8319658,"line_start":607,"line_end":607,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319663,"byte_end":8319675,"line_start":608,"line_end":608,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319680,"byte_end":8319687,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319692,"byte_end":8319699,"line_start":610,"line_end":610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8320068,"byte_end":8320073,"line_start":620,"line_end":620,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319825,"byte_end":8319902,"line_start":615,"line_end":615,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319907,"byte_end":8319953,"line_start":616,"line_end":616,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319958,"byte_end":8319961,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8319966,"byte_end":8320039,"line_start":618,"line_end":618,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8320044,"byte_end":8320056,"line_start":619,"line_end":619,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::net::udp","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","parent":null,"children":[{"krate":0,"index":2607},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2728}],"decl_id":null,"docs":" UDP utility types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20623,"byte_end":20646,"line_start":307,"line_end":307,"column_start":13,"column_end":36}},{"value":"! UDP utility types.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/mod.rs","byte_start":8327323,"byte_end":8327345,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8327801,"byte_end":8327810,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::socket::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":2734}],"decl_id":null,"docs":" A UDP socket\n","sig":null,"attributes":[{"value":"cfg(feature = \"udp\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20623,"byte_end":20646,"line_start":307,"line_end":307,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8328008,"byte_end":8328012,"line_start":22,"line_end":22,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"fn <A> (addr: A) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.\n","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8327889,"byte_end":8327961,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8327966,"byte_end":8327990,"line_start":21,"line_end":21,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329715,"byte_end":8329723,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"fn (socket: net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UdpSocket` from the previously bound socket provided.","sig":null,"attributes":[{"value":"/ Creates a new `UdpSocket` from the previously bound socket provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8328847,"byte_end":8328919,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8328924,"byte_end":8328927,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The socket given will be registered with the event loop that `handle`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8328932,"byte_end":8329005,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ is associated with. This function requires that `socket` has previously","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329010,"byte_end":8329085,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ been bound to an address to work correctly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329090,"byte_end":8329137,"line_start":55,"line_end":55,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329142,"byte_end":8329145,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with net2's `UdpBuilder` interface to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329150,"byte_end":8329223,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329228,"byte_end":8329303,"line_start":58,"line_end":58,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329308,"byte_end":8329361,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329366,"byte_end":8329369,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329374,"byte_end":8329386,"line_start":61,"line_end":61,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329391,"byte_end":8329394,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329399,"byte_end":8329459,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329464,"byte_end":8329467,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329472,"byte_end":8329542,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329547,"byte_end":8329620,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329625,"byte_end":8329703,"line_start":67,"line_end":67,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330210,"byte_end":8330215,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"name":"split","qualname":"<UdpSocket>::split","value":"fn (self) -> (RecvHalf, SendHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `UdpSocket` into a receive half and a send half. The two parts\n can be used to receive and send datagrams concurrently, even from two\n different tasks.","sig":null,"attributes":[{"value":"/ Splits the `UdpSocket` into a receive half and a send half. The two parts","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329915,"byte_end":8329992,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ can be used to receive and send datagrams concurrently, even from two","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8329997,"byte_end":8330070,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ different tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330075,"byte_end":8330095,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330100,"byte_end":8330103,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330108,"byte_end":8330181,"line_start":78,"line_end":78,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330186,"byte_end":8330198,"line_start":79,"line_end":79,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330350,"byte_end":8330360,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330279,"byte_end":8330338,"line_start":84,"line_end":84,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330632,"byte_end":8330639,"line_start":92,"line_end":92,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.\n","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330446,"byte_end":8330520,"line_start":89,"line_end":89,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330525,"byte_end":8330598,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8330603,"byte_end":8330614,"line_start":91,"line_end":91,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331571,"byte_end":8331575,"line_start":118,"line_end":118,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331173,"byte_end":8331271,"line_start":111,"line_end":111,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331276,"byte_end":8331347,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331352,"byte_end":8331355,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331360,"byte_end":8331443,"line_start":114,"line_end":114,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331448,"byte_end":8331508,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331513,"byte_end":8331516,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8331521,"byte_end":8331553,"line_start":117,"line_end":117,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332302,"byte_end":8332311,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333324,"byte_end":8333328,"line_start":157,"line_end":157,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332689,"byte_end":8332768,"line_start":145,"line_end":145,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332773,"byte_end":8332857,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332862,"byte_end":8332894,"line_start":147,"line_end":147,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332899,"byte_end":8332902,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332907,"byte_end":8332988,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8332993,"byte_end":8333076,"line_start":150,"line_end":150,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333081,"byte_end":8333115,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333120,"byte_end":8333123,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333128,"byte_end":8333211,"line_start":153,"line_end":153,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333216,"byte_end":8333261,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333266,"byte_end":8333269,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: #method.connect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333274,"byte_end":8333306,"line_start":156,"line_end":156,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333468,"byte_end":8333477,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8334196,"byte_end":8334203,"line_start":179,"line_end":179,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"fn <A> (&mut self, buf: &[u8], target: A) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333905,"byte_end":8333977,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8333982,"byte_end":8334053,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8334058,"byte_end":8334061,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8334066,"byte_end":8334142,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8334147,"byte_end":8334178,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8334675,"byte_end":8334687,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"fn (&self, cx: &mut Context<'_>, buf: &[u8], target: &SocketAddr) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335526,"byte_end":8335535,"line_start":216,"line_end":216,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335136,"byte_end":8335215,"line_start":210,"line_end":210,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335220,"byte_end":8335287,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335292,"byte_end":8335295,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335300,"byte_end":8335378,"line_start":213,"line_end":213,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335383,"byte_end":8335461,"line_start":214,"line_end":214,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335466,"byte_end":8335508,"line_start":215,"line_end":215,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8335694,"byte_end":8335708,"line_start":221,"line_end":221,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"fn (&self, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<(usize, SocketAddr), io::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336405,"byte_end":8336414,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336193,"byte_end":8336257,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336262,"byte_end":8336265,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336270,"byte_end":8336336,"line_start":239,"line_end":239,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336341,"byte_end":8336344,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: #method.set_broadcast","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336349,"byte_end":8336393,"line_start":241,"line_end":241,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336670,"byte_end":8336683,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336493,"byte_end":8336557,"line_start":246,"line_end":246,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336562,"byte_end":8336565,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336570,"byte_end":8336641,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336646,"byte_end":8336658,"line_start":249,"line_end":249,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337017,"byte_end":8337034,"line_start":259,"line_end":259,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336776,"byte_end":8336845,"line_start":254,"line_end":254,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336850,"byte_end":8336853,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336858,"byte_end":8336932,"line_start":256,"line_end":256,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336937,"byte_end":8336940,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: #method.set_multicast_loop_v4","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8336945,"byte_end":8337005,"line_start":258,"line_end":258,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337374,"byte_end":8337395,"line_start":270,"line_end":270,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337121,"byte_end":8337190,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337195,"byte_end":8337198,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337203,"byte_end":8337277,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337282,"byte_end":8337285,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337290,"byte_end":8337300,"line_start":267,"line_end":267,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337305,"byte_end":8337308,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337313,"byte_end":8337362,"line_start":269,"line_end":269,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337733,"byte_end":8337749,"line_start":279,"line_end":279,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337496,"byte_end":8337564,"line_start":274,"line_end":274,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337569,"byte_end":8337572,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337577,"byte_end":8337650,"line_start":276,"line_end":276,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337655,"byte_end":8337658,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: #method.set_multicast_ttl_v4","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337663,"byte_end":8337721,"line_start":278,"line_end":278,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338228,"byte_end":8338248,"line_start":292,"line_end":292,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337834,"byte_end":8337902,"line_start":283,"line_end":283,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337907,"byte_end":8337910,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337915,"byte_end":8337985,"line_start":285,"line_end":285,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8337990,"byte_end":8338064,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338069,"byte_end":8338131,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338136,"byte_end":8338139,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338144,"byte_end":8338154,"line_start":289,"line_end":289,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338159,"byte_end":8338162,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338167,"byte_end":8338216,"line_start":291,"line_end":291,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338592,"byte_end":8338609,"line_start":301,"line_end":301,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338349,"byte_end":8338420,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338425,"byte_end":8338428,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338433,"byte_end":8338507,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338512,"byte_end":8338515,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: #method.set_multicast_loop_v6","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338520,"byte_end":8338580,"line_start":300,"line_end":300,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338953,"byte_end":8338974,"line_start":312,"line_end":312,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"fn (&self, on: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338696,"byte_end":8338767,"line_start":305,"line_end":305,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338772,"byte_end":8338775,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338780,"byte_end":8338856,"line_start":307,"line_end":307,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338861,"byte_end":8338864,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338869,"byte_end":8338879,"line_start":309,"line_end":309,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338884,"byte_end":8338887,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8338892,"byte_end":8338941,"line_start":311,"line_end":311,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339263,"byte_end":8339266,"line_start":321,"line_end":321,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"fn (&self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339075,"byte_end":8339133,"line_start":316,"line_end":316,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339138,"byte_end":8339141,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339146,"byte_end":8339206,"line_start":318,"line_end":318,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339211,"byte_end":8339214,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: #method.set_ttl","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339219,"byte_end":8339251,"line_start":320,"line_end":320,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339523,"byte_end":8339530,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339338,"byte_end":8339396,"line_start":325,"line_end":325,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339401,"byte_end":8339404,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339409,"byte_end":8339485,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339490,"byte_end":8339511,"line_start":328,"line_end":328,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340048,"byte_end":8340065,"line_start":340,"line_end":340,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339618,"byte_end":8339676,"line_start":333,"line_end":333,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339681,"byte_end":8339684,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339689,"byte_end":8339763,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339768,"byte_end":8339841,"line_start":336,"line_end":336,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339846,"byte_end":8339918,"line_start":337,"line_end":337,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339923,"byte_end":8339993,"line_start":338,"line_end":338,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8339998,"byte_end":8340036,"line_start":339,"line_end":339,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340530,"byte_end":8340547,"line_start":349,"line_end":349,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340214,"byte_end":8340274,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340279,"byte_end":8340282,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340287,"byte_end":8340361,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340366,"byte_end":8340439,"line_start":347,"line_end":347,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340444,"byte_end":8340518,"line_start":348,"line_end":348,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340909,"byte_end":8340927,"line_start":358,"line_end":358,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"fn (&self, multiaddr: Ipv4Addr, interface: Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340690,"byte_end":8340749,"line_start":353,"line_end":353,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340754,"byte_end":8340757,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340762,"byte_end":8340832,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340837,"byte_end":8340840,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: #method.join_multicast_v4","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8340845,"byte_end":8340897,"line_start":357,"line_end":357,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341298,"byte_end":8341316,"line_start":367,"line_end":367,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341077,"byte_end":8341138,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341143,"byte_end":8341146,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341151,"byte_end":8341221,"line_start":364,"line_end":364,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341226,"byte_end":8341229,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: #method.join_multicast_v6","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341234,"byte_end":8341286,"line_start":366,"line_end":366,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343946,"byte_end":8343954,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"SendHalf","qualname":"::net::udp::split::SendHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The send half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The send half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343768,"byte_end":8343827,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343828,"byte_end":8343831,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Use [`send_to`](#method.send_to) or [`send`](#method.send) to send","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343832,"byte_end":8343902,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"/ datagrams.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343903,"byte_end":8343917,"line_start":27,"line_end":27,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344158,"byte_end":8344166,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"RecvHalf","qualname":"::net::udp::split::RecvHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" The recv half after [`split`](super::UdpSocket::split).","sig":null,"attributes":[{"value":"/ The recv half after [`split`](super::UdpSocket::split).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8343973,"byte_end":8344032,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344033,"byte_end":8344036,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Use [`recv_from`](#method.recv_from) or [`recv`](#method.recv) to receive","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344037,"byte_end":8344114,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ datagrams.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344115,"byte_end":8344129,"line_start":34,"line_end":34,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2745},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344508,"byte_end":8344520,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::udp::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating two halves were not from the same socket, and thus could\n not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating two halves were not from the same socket, and thus could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344379,"byte_end":8344456,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ not be `reunite`d.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344457,"byte_end":8344479,"line_start":46,"line_end":46,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345557,"byte_end":8345564,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"reunite","qualname":"<RecvHalf>::reunite","value":"fn (self, other: SendHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345342,"byte_end":8345413,"line_start":75,"line_end":75,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345418,"byte_end":8345484,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345489,"byte_end":8345545,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346055,"byte_end":8346064,"line_start":88,"line_end":88,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<RecvHalf>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram on the socket. On success,\n the future resolves to the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram on the socket. On success,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345665,"byte_end":8345744,"line_start":82,"line_end":82,"column_start":5,"column_end":84}},{"value":"/ the future resolves to the number of bytes read and the origin.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345749,"byte_end":8345816,"line_start":83,"line_end":83,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345821,"byte_end":8345824,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345829,"byte_end":8345907,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ to hold the message bytes. If a message is too long to fit in the supplied","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345912,"byte_end":8345990,"line_start":86,"line_end":86,"column_start":5,"column_end":83}},{"value":"/ buffer, excess bytes may be discarded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345995,"byte_end":8346037,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346844,"byte_end":8346848,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"recv","qualname":"<RecvHalf>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that receives a single datagram message on the socket from\n the remote address to which it is connected. On success, the future will resolve\n to the number of bytes read.","sig":null,"attributes":[{"value":"/ Returns a future that receives a single datagram message on the socket from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346199,"byte_end":8346278,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"/ the remote address to which it is connected. On success, the future will resolve","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346283,"byte_end":8346367,"line_start":93,"line_end":93,"column_start":5,"column_end":89}},{"value":"/ to the number of bytes read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346372,"byte_end":8346404,"line_start":94,"line_end":94,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346409,"byte_end":8346412,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient size to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346417,"byte_end":8346498,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/ hold the message bytes. If a message is too long to fit in the supplied buffer,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346503,"byte_end":8346586,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/ excess bytes may be discarded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346591,"byte_end":8346625,"line_start":98,"line_end":98,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346630,"byte_end":8346633,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346638,"byte_end":8346721,"line_start":100,"line_end":100,"column_start":5,"column_end":88}},{"value":"/ will fail if the socket is not connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346726,"byte_end":8346771,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346776,"byte_end":8346779,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346784,"byte_end":8346826,"line_start":103,"line_end":103,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347197,"byte_end":8347204,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reunite","qualname":"<SendHalf>::reunite","value":"fn (self, other: RecvHalf) -> Result<UdpSocket, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a `UdpSocket` back together and\n recover the original socket. Succeeds only if the two \"halves\"\n originated from the same call to `UdpSocket::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a `UdpSocket` back together and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346982,"byte_end":8347053,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ recover the original socket. Succeeds only if the two \"halves\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347058,"byte_end":8347124,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ originated from the same call to `UdpSocket::split`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347129,"byte_end":8347185,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347596,"byte_end":8347603,"line_start":122,"line_end":122,"column_start":18,"column_end":25},"name":"send_to","qualname":"<SendHalf>::send_to","value":"fn (&mut self, buf: &[u8], target: &SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the given address.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the given address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347305,"byte_end":8347377,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347382,"byte_end":8347453,"line_start":118,"line_end":118,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347458,"byte_end":8347461,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The future will resolve to an error if the IP version of the socket does","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347466,"byte_end":8347542,"line_start":120,"line_end":120,"column_start":5,"column_end":81}},{"value":"/ not match that of `target`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347547,"byte_end":8347578,"line_start":121,"line_end":121,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348155,"byte_end":8348159,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"send","qualname":"<SendHalf>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that sends data on the socket to the remote address to which it is connected.\n On success, the future will resolve to the number of bytes written.","sig":null,"attributes":[{"value":"/ Returns a future that sends data on the socket to the remote address to which it is connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347747,"byte_end":8347845,"line_start":126,"line_end":126,"column_start":5,"column_end":103}},{"value":"/ On success, the future will resolve to the number of bytes written.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347850,"byte_end":8347921,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347926,"byte_end":8347929,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. The future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8347934,"byte_end":8348017,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/ will resolve to an error if the socket is not connected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348022,"byte_end":8348082,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348087,"byte_end":8348090,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: super::UdpSocket::connect","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348095,"byte_end":8348137,"line_start":132,"line_end":132,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":2752},{"krate":0,"index":2813},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2876},{"krate":0,"index":2877},{"krate":0,"index":2901},{"krate":0,"index":2904},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2984}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20816,"byte_end":20850,"line_start":317,"line_end":317,"column_start":13,"column_end":47}},{"value":"! Unix domain socket utility types","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/mod.rs","byte_start":8348467,"byte_end":8348503,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2988},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349141,"byte_end":8349153,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":2989}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.\n","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20816,"byte_end":20850,"line_start":317,"line_end":317,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349310,"byte_end":8349314,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"fn <P> (path: P) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349237,"byte_end":8349298,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349777,"byte_end":8349781,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"fn () -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349497,"byte_end":8349546,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349551,"byte_end":8349554,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349559,"byte_end":8349630,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349635,"byte_end":8349705,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349710,"byte_end":8349765,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350607,"byte_end":8350615,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"fn (datagram: net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixDatagram` in the standard library and returns a\n nonblocking `UnixDatagram` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixDatagram` in the standard library and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349992,"byte_end":8350059,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixDatagram` from this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350064,"byte_end":8350111,"line_start":44,"line_end":44,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350116,"byte_end":8350119,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The returned datagram will be associated with the given event loop","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350124,"byte_end":8350194,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350199,"byte_end":8350253,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350258,"byte_end":8350261,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350266,"byte_end":8350278,"line_start":49,"line_end":49,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350283,"byte_end":8350286,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350291,"byte_end":8350351,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350356,"byte_end":8350359,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350364,"byte_end":8350434,"line_start":53,"line_end":53,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350439,"byte_end":8350512,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350517,"byte_end":8350595,"line_start":55,"line_end":55,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351066,"byte_end":8351073,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"fn () -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.\n","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8350987,"byte_end":8351054,"line_start":67,"line_end":67,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351426,"byte_end":8351433,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"fn <P> (&self, path: P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351207,"byte_end":8351256,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351261,"byte_end":8351264,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351269,"byte_end":8351341,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351346,"byte_end":8351414,"line_start":76,"line_end":76,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351605,"byte_end":8351609,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"fn (&mut self, buf: &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8351537,"byte_end":8351587,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8352804,"byte_end":8352808,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8352752,"byte_end":8352786,"line_start":112,"line_end":112,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8353486,"byte_end":8353493,"line_start":134,"line_end":134,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"fn <P> (&mut self, buf: &[u8], target: P) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.\n","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8353414,"byte_end":8353468,"line_start":133,"line_end":133,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8354214,"byte_end":8354223,"line_start":159,"line_end":159,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"fn (&mut self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.\n","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8354162,"byte_end":8354196,"line_start":158,"line_end":158,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8354950,"byte_end":8354960,"line_start":180,"line_end":180,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.\n","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8354879,"byte_end":8354938,"line_start":179,"line_end":179,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355176,"byte_end":8355185,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355046,"byte_end":8355092,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355097,"byte_end":8355100,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355105,"byte_end":8355164,"line_start":186,"line_end":186,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355329,"byte_end":8355339,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355270,"byte_end":8355317,"line_start":191,"line_end":191,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355713,"byte_end":8355721,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355432,"byte_end":8355498,"line_start":196,"line_end":196,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355503,"byte_end":8355506,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355511,"byte_end":8355579,"line_start":198,"line_end":198,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355584,"byte_end":8355654,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355659,"byte_end":8355701,"line_start":200,"line_end":200,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2990},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357099,"byte_end":8357107,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::net::unix::incoming::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":2992}],"decl_id":null,"docs":" Stream of listeners\n","sig":null,"attributes":[{"value":"/ Stream of listeners","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8356998,"byte_end":8357021,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357039,"byte_end":8357087,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357616,"byte_end":8357627,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Incoming>::poll_accept","value":"fn (mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<io::Result<UnixStream>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to poll `UnixStream` by polling inner `UnixListener` to accept\n connection.","sig":null,"attributes":[{"value":"/ Attempts to poll `UnixStream` by polling inner `UnixListener` to accept","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357287,"byte_end":8357362,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357367,"byte_end":8357382,"line_start":20,"line_end":20,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357387,"byte_end":8357390,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ If `UnixListener` isn't ready yet, `Poll::Pending` is returned and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357395,"byte_end":8357465,"line_start":22,"line_end":22,"column_start":5,"column_end":75}},{"value":"/ current task will be notified by a waker.  Otherwise `Poll::Ready` with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357470,"byte_end":8357545,"line_start":23,"line_end":23,"column_start":5,"column_end":80}},{"value":"/ `Result` containing `UnixStream` will be returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357550,"byte_end":8357604,"line_start":24,"line_end":24,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8359966,"byte_end":8359978,"line_start":50,"line_end":50,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":2997}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20816,"byte_end":20850,"line_start":317,"line_end":317,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360477,"byte_end":8360481,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"fn <P> (path: P) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360062,"byte_end":8360123,"line_start":56,"line_end":56,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360128,"byte_end":8360131,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360136,"byte_end":8360148,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360153,"byte_end":8360156,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360161,"byte_end":8360221,"line_start":60,"line_end":60,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360226,"byte_end":8360229,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360234,"byte_end":8360304,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360309,"byte_end":8360382,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360387,"byte_end":8360465,"line_start":64,"line_end":64,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361325,"byte_end":8361333,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"fn (listener: net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixListener` in the standard library and returns a\n nonblocking `UnixListener` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixListener` in the standard library and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360710,"byte_end":8360777,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ nonblocking `UnixListener` from this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360782,"byte_end":8360829,"line_start":75,"line_end":75,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360834,"byte_end":8360837,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ The returned listener will be associated with the given event loop","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360842,"byte_end":8360912,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360917,"byte_end":8360971,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360976,"byte_end":8360979,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360984,"byte_end":8360996,"line_start":80,"line_end":80,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361001,"byte_end":8361004,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361009,"byte_end":8361069,"line_start":82,"line_end":82,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361074,"byte_end":8361077,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361082,"byte_end":8361152,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361157,"byte_end":8361230,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361235,"byte_end":8361313,"line_start":86,"line_end":86,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361620,"byte_end":8361630,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361554,"byte_end":8361608,"line_start":93,"line_end":93,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361775,"byte_end":8361785,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361716,"byte_end":8361763,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361951,"byte_end":8361957,"line_start":104,"line_end":104,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"fn (&mut self) -> io::Result<(UnixStream, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8361878,"byte_end":8361933,"line_start":103,"line_end":103,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364426,"byte_end":8364434,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"incoming","qualname":"<UnixListener>::incoming","value":"fn (&mut self) -> Incoming<'_>","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream over the connections being received on this listener.","sig":null,"attributes":[{"value":"/ Returns a stream over the connections being received on this listener.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363062,"byte_end":8363136,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363141,"byte_end":8363144,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note that `UnixListener` also directly implements `Stream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363149,"byte_end":8363212,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363217,"byte_end":8363220,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The returned stream will never return `None` and will also not yield the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363225,"byte_end":8363301,"line_start":142,"line_end":142,"column_start":5,"column_end":81}},{"value":"/ peer's `SocketAddr` structure. Iterating over it is equivalent to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363306,"byte_end":8363375,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ calling accept in a loop.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363380,"byte_end":8363409,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363414,"byte_end":8363417,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363422,"byte_end":8363434,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363439,"byte_end":8363442,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Note that accepting a connection can lead to various errors and not all","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363447,"byte_end":8363522,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ of them are necessarily fatal ‒ for example having too many open file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363527,"byte_end":8363602,"line_start":149,"line_end":149,"column_start":5,"column_end":78}},{"value":"/ descriptors or the other side closing the connection while it waits in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363607,"byte_end":8363681,"line_start":150,"line_end":150,"column_start":5,"column_end":79}},{"value":"/ an accept queue. These would terminate the stream if not handled in any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363686,"byte_end":8363761,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/ way.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363766,"byte_end":8363774,"line_start":152,"line_end":152,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363779,"byte_end":8363782,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363787,"byte_end":8363801,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363806,"byte_end":8363809,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363814,"byte_end":8363827,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363832,"byte_end":8363865,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363870,"byte_end":8363903,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363908,"byte_end":8363911,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363916,"byte_end":8363934,"line_start":160,"line_end":160,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363939,"byte_end":8363960,"line_start":161,"line_end":161,"column_start":5,"column_end":26}},{"value":"/     let mut listener = UnixListener::bind(\"/path/to/the/socket\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8363965,"byte_end":8364043,"line_start":162,"line_end":162,"column_start":5,"column_end":83}},{"value":"/     let mut incoming = listener.incoming();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364048,"byte_end":8364095,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364100,"byte_end":8364103,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     while let Some(stream) = incoming.next().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364108,"byte_end":8364164,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"/         match stream {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364169,"byte_end":8364195,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/             Ok(stream) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364200,"byte_end":8364231,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/                 println!(\"new client!\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364236,"byte_end":8364280,"line_start":168,"line_end":168,"column_start":5,"column_end":49}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364285,"byte_end":8364302,"line_start":169,"line_end":169,"column_start":5,"column_end":22}},{"value":"/             Err(e) => { /* connection failed */ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364307,"byte_end":8364360,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364365,"byte_end":8364378,"line_start":171,"line_end":171,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364383,"byte_end":8364392,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364397,"byte_end":8364402,"line_start":173,"line_end":173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364407,"byte_end":8364414,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366545,"byte_end":8366553,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Read half of a `UnixStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366484,"byte_end":8366516,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366638,"byte_end":8366647,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write half of a `UnixStream`.\n","sig":null,"attributes":[{"value":"/ Write half of a `UnixStream`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366576,"byte_end":8366609,"line_start":24,"line_end":24,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368613,"byte_end":8368623,"line_start":23,"line_end":23,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3013}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all (unix, feature = \"uds\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20816,"byte_end":20850,"line_start":317,"line_end":317,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368945,"byte_end":8368952,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"fn <P> (path: P) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368703,"byte_end":8368746,"line_start":29,"line_end":29,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368751,"byte_end":8368754,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368759,"byte_end":8368830,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368835,"byte_end":8368911,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368916,"byte_end":8368927,"line_start":33,"line_end":33,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369837,"byte_end":8369845,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"fn (stream: net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `UnixStream` in the standard library and returns a\n nonblocking `UnixStream` from this crate.","sig":null,"attributes":[{"value":"/ Consumes a `UnixStream` in the standard library and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369228,"byte_end":8369293,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ nonblocking `UnixStream` from this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369298,"byte_end":8369343,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369348,"byte_end":8369351,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be associated with the given event loop","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369356,"byte_end":8369424,"line_start":48,"line_end":48,"column_start":5,"column_end":73}},{"value":"/ specified by `handle` and is ready to perform I/O.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369429,"byte_end":8369483,"line_start":49,"line_end":49,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369488,"byte_end":8369491,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369496,"byte_end":8369508,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369513,"byte_end":8369516,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369521,"byte_end":8369581,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369586,"byte_end":8369589,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369594,"byte_end":8369664,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369669,"byte_end":8369742,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Handle::enter`](crate::runtime::Handle::enter) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8369747,"byte_end":8369825,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370329,"byte_end":8370333,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"fn () -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370049,"byte_end":8370098,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370103,"byte_end":8370106,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370111,"byte_end":8370182,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370187,"byte_end":8370257,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370262,"byte_end":8370317,"line_start":69,"line_end":69,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370774,"byte_end":8370784,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370694,"byte_end":8370762,"line_start":83,"line_end":83,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2946},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370951,"byte_end":8370960,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8370870,"byte_end":8370939,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371139,"byte_end":8371148,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"fn (&self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371045,"byte_end":8371127,"line_start":93,"line_end":93,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371284,"byte_end":8371294,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371225,"byte_end":8371272,"line_start":98,"line_end":98,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371668,"byte_end":8371676,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixStream>::shutdown","value":"fn (&self, how: Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371387,"byte_end":8371453,"line_start":103,"line_end":103,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371458,"byte_end":8371461,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371466,"byte_end":8371534,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371539,"byte_end":8371609,"line_start":106,"line_end":106,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371614,"byte_end":8371656,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2950},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372013,"byte_end":8372018,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"fn (&mut self) -> (ReadHalf<'_>, WriteHalf<'_>)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371770,"byte_end":8371847,"line_start":112,"line_end":112,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371852,"byte_end":8371898,"line_start":113,"line_end":113,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371903,"byte_end":8371906,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the module level documenation of [`split`](super::split) for more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371911,"byte_end":8371984,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8371989,"byte_end":8372001,"line_start":116,"line_end":116,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375599,"byte_end":8375604,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred { uid, gid }","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375508,"byte_end":8375536,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375652,"byte_end":8375655,"line_start":7,"line_end":7,"column_start":9,"column_end":12},"name":"uid","qualname":"::net::unix::ucred::UCred::uid","value":"u32","parent":{"krate":0,"index":3014},"children":[],"decl_id":null,"docs":" UID (user ID) of the process\n","sig":null,"attributes":[{"value":"/ UID (user ID) of the process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375611,"byte_end":8375643,"line_start":6,"line_end":6,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375710,"byte_end":8375713,"line_start":9,"line_end":9,"column_start":9,"column_end":12},"name":"gid","qualname":"::net::unix::ucred::UCred::gid","value":"u32","parent":{"krate":0,"index":3014},"children":[],"decl_id":null,"docs":" GID (group ID) of the process\n","sig":null,"attributes":[{"value":"/ GID (group ID) of the process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/ucred.rs","byte_start":8375668,"byte_end":8375701,"line_start":8,"line_end":8,"column_start":5,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":535},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":87890,"byte_end":87896,"line_start":55,"line_end":55,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":87827,"byte_end":87880,"line_start":54,"line_end":54,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":536},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":87949,"byte_end":87954,"line_start":58,"line_end":58,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error;","parent":{"krate":0,"index":534},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":87911,"byte_end":87939,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":546},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":3091}],"decl_id":null,"docs":" A \"prelude\" for users of the `tokio` crate.","sig":null,"attributes":[{"value":"cfg(not (loom))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99550,"byte_end":99568,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"! A \"prelude\" for users of the `tokio` crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99570,"byte_end":99617,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99618,"byte_end":99621,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This prelude is similar to the standard library's prelude in that you'll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99622,"byte_end":99698,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"! almost always want to import its entire contents, but unlike the standard","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99699,"byte_end":99776,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! library's prelude you'll have to do so manually:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99777,"byte_end":99829,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99830,"byte_end":99833,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99834,"byte_end":99841,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"! # #![allow(warnings)]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99842,"byte_end":99867,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99868,"byte_end":99894,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99895,"byte_end":99902,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99903,"byte_end":99906,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The prelude may grow over time as additional items see ubiquitous use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/prelude.rs","byte_start":99907,"byte_end":99981,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":552},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":3106},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":656},{"krate":0,"index":659},{"krate":0,"index":671},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":3738},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":3739},{"krate":0,"index":3743},{"krate":0,"index":3745},{"krate":0,"index":3752},{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"! The Tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100193,"byte_end":100215,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100216,"byte_end":100219,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Unlike other Rust programs, asynchronous applications require","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100220,"byte_end":100285,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"! runtime support. In particular, the following runtime services are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100286,"byte_end":100356,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"! necessary:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100357,"byte_end":100371,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100372,"byte_end":100375,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100376,"byte_end":100454,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"!   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100455,"byte_end":100512,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"! * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100513,"byte_end":100583,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"! * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100584,"byte_end":100656,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100657,"byte_end":100660,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100661,"byte_end":100741,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! them to be started, shut down, and configured together. However, most","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100742,"byte_end":100815,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"! applications won't need to use [`Runtime`] directly. Instead, they can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100816,"byte_end":100890,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"! use the [`tokio::main`] attribute macro, which creates a [`Runtime`] under","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100891,"byte_end":100969,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"! the hood.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100970,"byte_end":100983,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100984,"byte_end":100987,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":100988,"byte_end":100999,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101000,"byte_end":101003,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Most applications will use the [`tokio::main`] attribute macro.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101004,"byte_end":101071,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101072,"byte_end":101075,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101076,"byte_end":101089,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101090,"byte_end":101122,"line_start":23,"line_end":23,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101123,"byte_end":101149,"line_start":24,"line_end":24,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101150,"byte_end":101153,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101154,"byte_end":101172,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101173,"byte_end":101236,"line_start":27,"line_end":27,"column_start":1,"column_end":64}},{"value":"!     let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101237,"byte_end":101307,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101308,"byte_end":101311,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"!     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101312,"byte_end":101326,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"!         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101327,"byte_end":101386,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101387,"byte_end":101390,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101391,"byte_end":101428,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"!             let mut buf = [0; 1024];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101429,"byte_end":101469,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101470,"byte_end":101473,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101474,"byte_end":101554,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"!             loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101555,"byte_end":101577,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"!                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101578,"byte_end":101641,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"!                     // socket closed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101642,"byte_end":101682,"line_start":39,"line_end":39,"column_start":1,"column_end":41}},{"value":"!                     Ok(n) if n == 0 => return,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101683,"byte_end":101733,"line_start":40,"line_end":40,"column_start":1,"column_end":51}},{"value":"!                     Ok(n) => n,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101734,"byte_end":101769,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"!                     Err(e) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101770,"byte_end":101805,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101806,"byte_end":101888,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!                         return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101889,"byte_end":101924,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101925,"byte_end":101950,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!                 };","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101951,"byte_end":101973,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101974,"byte_end":101977,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!                 // Write the data back","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":101978,"byte_end":102020,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"!                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102021,"byte_end":102093,"line_start":49,"line_end":49,"column_start":1,"column_end":73}},{"value":"!                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102094,"byte_end":102171,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"!                     return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102172,"byte_end":102203,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102204,"byte_end":102225,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102226,"byte_end":102243,"line_start":53,"line_end":53,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102244,"byte_end":102259,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102260,"byte_end":102269,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102270,"byte_end":102275,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102276,"byte_end":102283,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102284,"byte_end":102287,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102288,"byte_end":102366,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"! the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102367,"byte_end":102445,"line_start":60,"line_end":60,"column_start":1,"column_end":79}},{"value":"! executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102446,"byte_end":102507,"line_start":61,"line_end":61,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102508,"byte_end":102511,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! A [`Runtime`] instance can also be used directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102512,"byte_end":102565,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102566,"byte_end":102569,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102570,"byte_end":102583,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"! use tokio::net::TcpListener;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102584,"byte_end":102616,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! use tokio::prelude::*;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102617,"byte_end":102643,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"! use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102644,"byte_end":102676,"line_start":68,"line_end":68,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102677,"byte_end":102680,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102681,"byte_end":102738,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"!     // Create the runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102739,"byte_end":102768,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"!     let mut rt = Runtime::new()?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102769,"byte_end":102806,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102807,"byte_end":102810,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     // Spawn the root task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102811,"byte_end":102841,"line_start":74,"line_end":74,"column_start":1,"column_end":31}},{"value":"!     rt.block_on(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102842,"byte_end":102869,"line_start":75,"line_end":75,"column_start":1,"column_end":28}},{"value":"!         let mut listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102870,"byte_end":102944,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102945,"byte_end":102948,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"!         loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102949,"byte_end":102967,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"!             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":102968,"byte_end":103031,"line_start":79,"line_end":79,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103032,"byte_end":103035,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"!             tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103036,"byte_end":103077,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"!                 let mut buf = [0; 1024];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103078,"byte_end":103122,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103123,"byte_end":103126,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103127,"byte_end":103211,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"!                 loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103212,"byte_end":103238,"line_start":85,"line_end":85,"column_start":1,"column_end":27}},{"value":"!                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103239,"byte_end":103306,"line_start":86,"line_end":86,"column_start":1,"column_end":68}},{"value":"!                         // socket closed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103307,"byte_end":103351,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"!                         Ok(n) if n == 0 => return,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103352,"byte_end":103406,"line_start":88,"line_end":88,"column_start":1,"column_end":55}},{"value":"!                         Ok(n) => n,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103407,"byte_end":103446,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"!                         Err(e) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103447,"byte_end":103486,"line_start":90,"line_end":90,"column_start":1,"column_end":40}},{"value":"!                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103487,"byte_end":103573,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"!                             return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103574,"byte_end":103613,"line_start":92,"line_end":92,"column_start":1,"column_end":40}},{"value":"!                         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103614,"byte_end":103643,"line_start":93,"line_end":93,"column_start":1,"column_end":30}},{"value":"!                     };","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103644,"byte_end":103670,"line_start":94,"line_end":94,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103671,"byte_end":103674,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"!                     // Write the data back","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103675,"byte_end":103721,"line_start":96,"line_end":96,"column_start":1,"column_end":47}},{"value":"!                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103722,"byte_end":103798,"line_start":97,"line_end":97,"column_start":1,"column_end":77}},{"value":"!                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103799,"byte_end":103880,"line_start":98,"line_end":98,"column_start":1,"column_end":82}},{"value":"!                         return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103881,"byte_end":103916,"line_start":99,"line_end":99,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103917,"byte_end":103942,"line_start":100,"line_end":100,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103943,"byte_end":103964,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103965,"byte_end":103984,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103985,"byte_end":103998,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"!     })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":103999,"byte_end":104009,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104010,"byte_end":104015,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104016,"byte_end":104023,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104024,"byte_end":104027,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ## Runtime Configurations","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104028,"byte_end":104057,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104058,"byte_end":104061,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104062,"byte_end":104140,"line_start":110,"line_end":110,"column_start":1,"column_end":79}},{"value":"! applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104141,"byte_end":104217,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"! used to select which scheduler to use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104218,"byte_end":104260,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104261,"byte_end":104264,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! #### Basic Scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104265,"byte_end":104289,"line_start":114,"line_end":114,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104290,"byte_end":104293,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! The basic scheduler provides a _single-threaded_ future executor. All tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104294,"byte_end":104373,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"! will be created and executed on the current thread. The basic scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104374,"byte_end":104449,"line_start":117,"line_end":117,"column_start":1,"column_end":76}},{"value":"! requires the `rt-core` feature flag, and can be selected using the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104450,"byte_end":104520,"line_start":118,"line_end":118,"column_start":1,"column_end":71}},{"value":"! [`Builder::basic_scheduler`] method:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104521,"byte_end":104561,"line_start":119,"line_end":119,"column_start":1,"column_end":41}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104562,"byte_end":104569,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104570,"byte_end":104593,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104594,"byte_end":104597,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104598,"byte_end":104657,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"! let basic_rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104658,"byte_end":104700,"line_start":124,"line_end":124,"column_start":1,"column_end":43}},{"value":"!     .basic_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104701,"byte_end":104727,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"!     .build()?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104728,"byte_end":104746,"line_start":126,"line_end":126,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104747,"byte_end":104761,"line_start":127,"line_end":127,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104762,"byte_end":104769,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104770,"byte_end":104773,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"! If the `rt-core` feature is enabled and `rt-threaded` is not,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104774,"byte_end":104839,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"! [`Runtime::new`] will return a basic scheduler runtime by default.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104840,"byte_end":104910,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104911,"byte_end":104914,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! #### Threaded Scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104915,"byte_end":104942,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104943,"byte_end":104946,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! The threaded scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":104947,"byte_end":105018,"line_start":135,"line_end":135,"column_start":1,"column_end":72}},{"value":"! work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105019,"byte_end":105097,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"! CPU core available on the system. This tends to be the ideal configurations","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105098,"byte_end":105177,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"! for most applications. The threaded scheduler requires the `rt-threaded` feature","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105178,"byte_end":105262,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"! flag, and can be selected using the  [`Builder::threaded_scheduler`] method:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105263,"byte_end":105343,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105344,"byte_end":105351,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105352,"byte_end":105375,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105376,"byte_end":105379,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105380,"byte_end":105439,"line_start":143,"line_end":143,"column_start":1,"column_end":60}},{"value":"! let threaded_rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105440,"byte_end":105485,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"!     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105486,"byte_end":105515,"line_start":145,"line_end":145,"column_start":1,"column_end":30}},{"value":"!     .build()?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105516,"byte_end":105534,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"! # Ok(()) }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105535,"byte_end":105549,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105550,"byte_end":105557,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105558,"byte_end":105561,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! If the `rt-threaded` feature flag is enabled, [`Runtime::new`] will return a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105562,"byte_end":105642,"line_start":150,"line_end":150,"column_start":1,"column_end":81}},{"value":"! threaded scheduler runtime by default.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105643,"byte_end":105685,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105686,"byte_end":105689,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"! Most applications should use the threaded scheduler, except in some niche","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105690,"byte_end":105767,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"! use-cases, such as when running only a single thread is required.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105768,"byte_end":105837,"line_start":154,"line_end":154,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105838,"byte_end":105841,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"! #### Resource drivers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105842,"byte_end":105867,"line_start":156,"line_end":156,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105868,"byte_end":105871,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"! When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105872,"byte_end":105946,"line_start":158,"line_end":158,"column_start":1,"column_end":75}},{"value":"! default. In this case, attempting to use networking types or time types will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":105947,"byte_end":106027,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"! fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106028,"byte_end":106107,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"! This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106108,"byte_end":106187,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"! shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106188,"byte_end":106257,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106258,"byte_end":106261,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! ## Lifetime of spawned threads","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106262,"byte_end":106296,"line_start":164,"line_end":164,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106297,"byte_end":106300,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"! The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106301,"byte_end":106380,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! threaded scheduler spawns threads to schedule tasks and calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106381,"byte_end":106449,"line_start":167,"line_end":167,"column_start":1,"column_end":69}},{"value":"! `spawn_blocking` spawn threads to run blocking operations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106450,"byte_end":106512,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106513,"byte_end":106516,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106517,"byte_end":106595,"line_start":170,"line_end":170,"column_start":1,"column_end":79}},{"value":"! idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106596,"byte_end":106675,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! Any tasks that have not yet completed will be dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106676,"byte_end":106734,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106735,"byte_end":106738,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106739,"byte_end":106763,"line_start":174,"line_end":174,"column_start":1,"column_end":25}},{"value":"! [`Runtime`]: Runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106764,"byte_end":106788,"line_start":175,"line_end":175,"column_start":1,"column_end":25}},{"value":"! [`tokio::spawn`]: crate::spawn","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106789,"byte_end":106823,"line_start":176,"line_end":176,"column_start":1,"column_end":35}},{"value":"! [`tokio::main`]: ../attr.main.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106824,"byte_end":106862,"line_start":177,"line_end":177,"column_start":1,"column_end":39}},{"value":"! [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106863,"byte_end":106909,"line_start":178,"line_end":178,"column_start":1,"column_end":47}},{"value":"! [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106910,"byte_end":106960,"line_start":179,"line_end":179,"column_start":1,"column_end":51}},{"value":"! [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":106961,"byte_end":107035,"line_start":180,"line_end":180,"column_start":1,"column_end":75}},{"value":"! [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107036,"byte_end":107116,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"! [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107117,"byte_end":107179,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"! [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107180,"byte_end":107246,"line_start":183,"line_end":183,"column_start":1,"column_end":67}},{"value":"! [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":107247,"byte_end":107311,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8460675,"byte_end":8460684,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":3647}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18918,"byte_end":18945,"line_start":223,"line_end":223,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8460860,"byte_end":8460869,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<JoinError>::cancelled","value":"fn () -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8460835,"byte_end":8460848,"line_start":20,"line_end":20,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461087,"byte_end":8461092,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"panic","qualname":"<JoinError>::panic","value":"fn (err: Box<dyn Any + Send + 'static>) -> JoinError","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461062,"byte_end":8461075,"line_start":32,"line_end":32,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461422,"byte_end":8461434,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461342,"byte_end":8461410,"line_start":43,"line_end":43,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461940,"byte_end":8461948,"line_start":67,"line_end":67,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461561,"byte_end":8461623,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461628,"byte_end":8461631,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461636,"byte_end":8461650,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461655,"byte_end":8461658,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461663,"byte_end":8461670,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461675,"byte_end":8461694,"line_start":56,"line_end":56,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461699,"byte_end":8461702,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461707,"byte_end":8461725,"line_start":58,"line_end":58,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461730,"byte_end":8461751,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461756,"byte_end":8461794,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461799,"byte_end":8461826,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461831,"byte_end":8461861,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461866,"byte_end":8461869,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461874,"byte_end":8461906,"line_start":64,"line_end":64,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461911,"byte_end":8461916,"line_start":65,"line_end":65,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8461921,"byte_end":8461928,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462855,"byte_end":8462865,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"fn (self) -> Box<dyn Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462074,"byte_end":8462153,"line_start":74,"line_end":74,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462158,"byte_end":8462161,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462166,"byte_end":8462178,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462183,"byte_end":8462186,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462191,"byte_end":8462265,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462270,"byte_end":8462345,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462350,"byte_end":8462408,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462413,"byte_end":8462416,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462421,"byte_end":8462435,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462440,"byte_end":8462443,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462448,"byte_end":8462467,"line_start":84,"line_end":84,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462472,"byte_end":8462491,"line_start":85,"line_end":85,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462496,"byte_end":8462499,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462504,"byte_end":8462522,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462527,"byte_end":8462548,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462553,"byte_end":8462591,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462596,"byte_end":8462623,"line_start":90,"line_end":90,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462628,"byte_end":8462658,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462663,"byte_end":8462666,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462671,"byte_end":8462698,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462703,"byte_end":8462751,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462756,"byte_end":8462807,"line_start":95,"line_end":95,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462812,"byte_end":8462821,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462826,"byte_end":8462831,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8462836,"byte_end":8462843,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463630,"byte_end":8463644,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"fn (self) -> Result<Box<dyn Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463006,"byte_end":8463075,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463080,"byte_end":8463152,"line_start":105,"line_end":105,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463157,"byte_end":8463170,"line_start":106,"line_end":106,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463175,"byte_end":8463178,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463183,"byte_end":8463197,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463202,"byte_end":8463205,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463210,"byte_end":8463229,"line_start":110,"line_end":110,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463234,"byte_end":8463253,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463258,"byte_end":8463261,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463266,"byte_end":8463284,"line_start":113,"line_end":113,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463289,"byte_end":8463310,"line_start":114,"line_end":114,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463315,"byte_end":8463353,"line_start":115,"line_end":115,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463358,"byte_end":8463385,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463390,"byte_end":8463420,"line_start":117,"line_end":117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463425,"byte_end":8463428,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463433,"byte_end":8463483,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463488,"byte_end":8463536,"line_start":120,"line_end":120,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463541,"byte_end":8463582,"line_start":121,"line_end":121,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463587,"byte_end":8463596,"line_start":122,"line_end":122,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463601,"byte_end":8463606,"line_start":123,"line_end":123,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463611,"byte_end":8463618,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8479946,"byte_end":8479956,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":3650},{"krate":0,"index":3651}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18918,"byte_end":18945,"line_start":223,"line_end":223,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120416,"byte_end":120423,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119598,"byte_end":119656,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119657,"byte_end":119660,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119661,"byte_end":119733,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119734,"byte_end":119782,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119783,"byte_end":119786,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119787,"byte_end":119852,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119853,"byte_end":119856,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119857,"byte_end":119934,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119935,"byte_end":119948,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119949,"byte_end":119952,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: #method.build","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119953,"byte_end":119981,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`Builder::new`]: #method.new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":119982,"byte_end":120015,"line_start":20,"line_end":20,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120016,"byte_end":120019,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120020,"byte_end":120034,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120035,"byte_end":120038,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120039,"byte_end":120046,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120047,"byte_end":120079,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120080,"byte_end":120083,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120084,"byte_end":120099,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120100,"byte_end":120124,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120125,"byte_end":120161,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/         .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120162,"byte_end":120195,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/         .core_threads(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120196,"byte_end":120224,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120225,"byte_end":120267,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120268,"byte_end":120315,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120316,"byte_end":120336,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120337,"byte_end":120359,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120360,"byte_end":120363,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120364,"byte_end":120390,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120391,"byte_end":120396,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":120397,"byte_end":120404,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121578,"byte_end":121581,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime builder initialized with default configuration\n values.","sig":null,"attributes":[{"value":"/ Returns a new runtime builder initialized with default configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121404,"byte_end":121476,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121481,"byte_end":121492,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121497,"byte_end":121500,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121505,"byte_end":121566,"line_start":84,"line_end":84,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122785,"byte_end":122795,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122271,"byte_end":122309,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122314,"byte_end":122317,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122322,"byte_end":122393,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122398,"byte_end":122474,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122479,"byte_end":122533,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122538,"byte_end":122541,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122546,"byte_end":122560,"line_start":119,"line_end":119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122565,"byte_end":122568,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122573,"byte_end":122580,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122585,"byte_end":122608,"line_start":122,"line_end":122,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122613,"byte_end":122616,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122621,"byte_end":122657,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122662,"byte_end":122691,"line_start":125,"line_end":125,"column_start":5,"column_end":34}},{"value":"/     .enable_all()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122696,"byte_end":122717,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122722,"byte_end":122738,"line_start":127,"line_end":127,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122743,"byte_end":122761,"line_start":128,"line_end":128,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122766,"byte_end":122773,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123350,"byte_end":123361,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"num_threads","qualname":"<Builder>::num_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"deprecated(note = \"In future will be replaced by core_threads method\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":122972,"byte_end":123045,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ Sets the maximum number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123050,"byte_end":123128,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123133,"byte_end":123136,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This must be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123141,"byte_end":123216,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123221,"byte_end":123256,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123261,"byte_end":123264,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123269,"byte_end":123338,"line_start":145,"line_end":145,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124070,"byte_end":124082,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"core_threads","qualname":"<Builder>::core_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the core number of worker threads for the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets the core number of worker threads for the `Runtime`'s thread pool.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123463,"byte_end":123538,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123543,"byte_end":123546,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This should be a number between 1 and 32,768 though it is advised to keep","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123551,"byte_end":123628,"line_start":153,"line_end":153,"column_start":5,"column_end":82}},{"value":"/ this value on the smaller side.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123633,"byte_end":123668,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123673,"byte_end":123676,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123681,"byte_end":123750,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123755,"byte_end":123758,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ These threads will be always active and running.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123763,"byte_end":123815,"line_start":158,"line_end":158,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123820,"byte_end":123823,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123828,"byte_end":123842,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123847,"byte_end":123850,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123855,"byte_end":123862,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123867,"byte_end":123890,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123895,"byte_end":123898,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123903,"byte_end":123939,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123944,"byte_end":123973,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/     .core_threads(4)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":123978,"byte_end":124002,"line_start":167,"line_end":167,"column_start":5,"column_end":29}},{"value":"/     .build()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124007,"byte_end":124023,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124028,"byte_end":124046,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124051,"byte_end":124058,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124961,"byte_end":124972,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"max_threads","qualname":"<Builder>::max_threads","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies limit for threads, spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies limit for threads, spawned by the Runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124243,"byte_end":124299,"line_start":177,"line_end":177,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124304,"byte_end":124307,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is number of threads to be used by Runtime, including `core_threads`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124312,"byte_end":124389,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ Having `max_threads` less than `core_threads` results in invalid configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124394,"byte_end":124476,"line_start":180,"line_end":180,"column_start":5,"column_end":87}},{"value":"/ when building multi-threaded `Runtime`, which would cause a panic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124481,"byte_end":124551,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124556,"byte_end":124559,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Similarly to the `core_threads`, this number should be between 1 and 32,768.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124564,"byte_end":124644,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124649,"byte_end":124652,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124657,"byte_end":124686,"line_start":185,"line_end":185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124691,"byte_end":124694,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ When multi-threaded runtime is not used, will act as limit on additional threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124699,"byte_end":124784,"line_start":187,"line_end":187,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124789,"byte_end":124792,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Otherwise as `core_threads` are always active, it limits additional threads (e.g. for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124797,"byte_end":124886,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ blocking annotations) as `max_threads - core_threads`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":124891,"byte_end":124949,"line_start":190,"line_end":190,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125496,"byte_end":125507,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"fn (&mut self, val: impl Into<String>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125126,"byte_end":125190,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125195,"byte_end":125198,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125203,"byte_end":125250,"line_start":199,"line_end":199,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125255,"byte_end":125258,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125263,"byte_end":125277,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125282,"byte_end":125285,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125290,"byte_end":125297,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125302,"byte_end":125327,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125332,"byte_end":125335,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125340,"byte_end":125361,"line_start":206,"line_end":206,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125366,"byte_end":125402,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125407,"byte_end":125438,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125443,"byte_end":125460,"line_start":209,"line_end":209,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125465,"byte_end":125472,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125477,"byte_end":125484,"line_start":211,"line_end":211,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126231,"byte_end":126248,"line_start":237,"line_end":237,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"fn (&mut self, val: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125621,"byte_end":125675,"line_start":217,"line_end":217,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125680,"byte_end":125683,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125688,"byte_end":125760,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125765,"byte_end":125798,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125803,"byte_end":125806,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125811,"byte_end":125879,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125884,"byte_end":125945,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125950,"byte_end":125953,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125958,"byte_end":125972,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125977,"byte_end":125980,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125985,"byte_end":125992,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":125997,"byte_end":126022,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126027,"byte_end":126030,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126035,"byte_end":126056,"line_start":230,"line_end":230,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126061,"byte_end":126097,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126102,"byte_end":126131,"line_start":232,"line_end":232,"column_start":5,"column_end":34}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126136,"byte_end":126173,"line_start":233,"line_end":233,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126178,"byte_end":126195,"line_start":234,"line_end":234,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126200,"byte_end":126207,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126212,"byte_end":126219,"line_start":236,"line_end":236,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126889,"byte_end":126904,"line_start":262,"line_end":262,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126355,"byte_end":126430,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126435,"byte_end":126450,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126455,"byte_end":126458,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126463,"byte_end":126525,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126530,"byte_end":126533,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126538,"byte_end":126552,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126557,"byte_end":126560,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126565,"byte_end":126572,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126577,"byte_end":126602,"line_start":250,"line_end":250,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126607,"byte_end":126610,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126615,"byte_end":126636,"line_start":252,"line_end":252,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126641,"byte_end":126682,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126687,"byte_end":126716,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126721,"byte_end":126750,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126755,"byte_end":126794,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126799,"byte_end":126809,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126814,"byte_end":126831,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126836,"byte_end":126843,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126848,"byte_end":126855,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"cfg(not (loom))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":126860,"byte_end":126877,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127555,"byte_end":127569,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"fn <F> (&mut self, f: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127065,"byte_end":127116,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127121,"byte_end":127124,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127129,"byte_end":127191,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127196,"byte_end":127199,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127204,"byte_end":127218,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127223,"byte_end":127226,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127231,"byte_end":127238,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127243,"byte_end":127268,"line_start":277,"line_end":277,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127273,"byte_end":127276,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127281,"byte_end":127302,"line_start":279,"line_end":279,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127307,"byte_end":127348,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/     .threaded_scheduler()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127353,"byte_end":127382,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127387,"byte_end":127415,"line_start":282,"line_end":282,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127420,"byte_end":127460,"line_start":283,"line_end":283,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127465,"byte_end":127475,"line_start":284,"line_end":284,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127480,"byte_end":127497,"line_start":285,"line_end":285,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127502,"byte_end":127509,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127514,"byte_end":127521,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"cfg(not (loom))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127526,"byte_end":127543,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":128115,"byte_end":128120,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127730,"byte_end":127767,"line_start":297,"line_end":297,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127772,"byte_end":127775,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned `ThreadPool` instance is ready to spawn tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127780,"byte_end":127843,"line_start":299,"line_end":299,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127848,"byte_end":127851,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127856,"byte_end":127870,"line_start":301,"line_end":301,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127875,"byte_end":127878,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127883,"byte_end":127890,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127895,"byte_end":127927,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127932,"byte_end":127935,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Builder::new().build().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127940,"byte_end":127989,"line_start":306,"line_end":306,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":127994,"byte_end":127997,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":128002,"byte_end":128025,"line_start":308,"line_end":308,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":128030,"byte_end":128079,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":128084,"byte_end":128091,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":128096,"byte_end":128103,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":129745,"byte_end":129754,"line_start":367,"line_end":367,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3686},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":130265,"byte_end":130276,"line_start":390,"line_end":390,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":130843,"byte_end":130858,"line_start":408,"line_end":408,"column_start":16,"column_end":31},"name":"basic_scheduler","qualname":"<Builder>::basic_scheduler","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets runtime to use a simpler scheduler that runs all tasks on the current-thread.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3699},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139926,"byte_end":139932,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139657,"byte_end":139683,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139684,"byte_end":139687,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139688,"byte_end":139776,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139777,"byte_end":139827,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139828,"byte_end":139831,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":139832,"byte_end":139890,"line_start":15,"line_end":15,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140338,"byte_end":140343,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.\n","sig":null,"attributes":[{"value":"/ Enter the runtime context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140296,"byte_end":140326,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141232,"byte_end":141239,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140461,"byte_end":140521,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140526,"byte_end":140529,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140534,"byte_end":140545,"line_start":44,"line_end":44,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140550,"byte_end":140553,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140558,"byte_end":140627,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140632,"byte_end":140635,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140640,"byte_end":140654,"line_start":48,"line_end":48,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140659,"byte_end":140662,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140667,"byte_end":140749,"line_start":50,"line_end":50,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140754,"byte_end":140800,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140805,"byte_end":140808,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140813,"byte_end":140820,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140825,"byte_end":140859,"line_start":54,"line_end":54,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140864,"byte_end":140880,"line_start":55,"line_end":55,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140885,"byte_end":140924,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140929,"byte_end":140951,"line_start":57,"line_end":57,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140956,"byte_end":140987,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140992,"byte_end":140995,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141000,"byte_end":141041,"line_start":60,"line_end":60,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141046,"byte_end":141081,"line_start":61,"line_end":61,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141086,"byte_end":141110,"line_start":62,"line_end":62,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141115,"byte_end":141171,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"/ })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141176,"byte_end":141182,"line_start":64,"line_end":64,"column_start":5,"column_end":11}},{"value":"/ # });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141187,"byte_end":141196,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141201,"byte_end":141208,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141213,"byte_end":141220,"line_start":67,"line_end":67,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141537,"byte_end":141548,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"fn () -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141344,"byte_end":141404,"line_start":72,"line_end":72,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141409,"byte_end":141412,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141417,"byte_end":141468,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141473,"byte_end":141476,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141481,"byte_end":141525,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":142741,"byte_end":142746,"line_start":115,"line_end":115,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Handle>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future onto the Tokio runtime.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":648},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143034,"byte_end":143049,"line_start":126,"line_end":126,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":142954,"byte_end":143022,"line_start":125,"line_end":125,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3739},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109255,"byte_end":109262,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3741},{"krate":0,"index":3742}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"/ The Tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108199,"byte_end":108221,"line_start":246,"line_end":246,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108222,"byte_end":108225,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ The runtime provides an I/O [driver], task scheduler, [timer], and blocking","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108226,"byte_end":108305,"line_start":248,"line_end":248,"column_start":1,"column_end":80}},{"value":"/ pool, necessary for running asynchronous tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108306,"byte_end":108357,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108358,"byte_end":108361,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ Instances of `Runtime` can be created using [`new`] or [`Builder`]. However,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108362,"byte_end":108442,"line_start":251,"line_end":251,"column_start":1,"column_end":81}},{"value":"/ most users will use the `#[tokio::main]` annotation on their entry point instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108443,"byte_end":108528,"line_start":252,"line_end":252,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108529,"byte_end":108532,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108533,"byte_end":108592,"line_start":254,"line_end":254,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108593,"byte_end":108596,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Shutdown","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108597,"byte_end":108611,"line_start":256,"line_end":256,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108612,"byte_end":108615,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Shutting down the runtime is done by dropping the value. The current thread","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108616,"byte_end":108695,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ will block until the shut down operation has completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108696,"byte_end":108755,"line_start":259,"line_end":259,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108756,"byte_end":108759,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ * Drain any scheduled work queues.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108760,"byte_end":108798,"line_start":261,"line_end":261,"column_start":1,"column_end":39}},{"value":"/ * Drop any futures that have not yet completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108799,"byte_end":108850,"line_start":262,"line_end":262,"column_start":1,"column_end":52}},{"value":"/ * Drop the reactor.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108851,"byte_end":108874,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108875,"byte_end":108878,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ Once the reactor has dropped, any outstanding I/O resources bound to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108879,"byte_end":108951,"line_start":265,"line_end":265,"column_start":1,"column_end":73}},{"value":"/ that reactor will no longer function. Calling any method on them will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":108952,"byte_end":109025,"line_start":266,"line_end":266,"column_start":1,"column_end":74}},{"value":"/ result in an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109026,"byte_end":109049,"line_start":267,"line_end":267,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109050,"byte_end":109053,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ [driver]: crate::io::driver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109054,"byte_end":109085,"line_start":269,"line_end":269,"column_start":1,"column_end":32}},{"value":"/ [timer]: crate::time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109086,"byte_end":109110,"line_start":270,"line_end":270,"column_start":1,"column_end":25}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109111,"byte_end":109132,"line_start":271,"line_end":271,"column_start":1,"column_end":22}},{"value":"/ [`new`]: #method.new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109133,"byte_end":109157,"line_start":272,"line_end":272,"column_start":1,"column_end":25}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109158,"byte_end":109194,"line_start":273,"line_end":273,"column_start":1,"column_end":37}},{"value":"/ [`tokio::run`]: fn.run.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":109195,"byte_end":109226,"line_start":274,"line_end":274,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111499,"byte_end":111502,"line_start":342,"line_end":342,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"/ Create a new runtime instance with default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110076,"byte_end":110144,"line_start":307,"line_end":307,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110149,"byte_end":110152,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This results in a scheduler, I/O driver, and time driver being","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110157,"byte_end":110223,"line_start":309,"line_end":309,"column_start":5,"column_end":71}},{"value":"/ initialized. The type of scheduler used depends on what feature flags","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110228,"byte_end":110301,"line_start":310,"line_end":310,"column_start":5,"column_end":78}},{"value":"/ are enabled: if the `rt-threaded` feature is enabled, the [threaded","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110306,"byte_end":110377,"line_start":311,"line_end":311,"column_start":5,"column_end":76}},{"value":"/ scheduler] is used, while if only the `rt-core` feature is enabled, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110382,"byte_end":110457,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ [basic scheduler] is used instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110462,"byte_end":110500,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110505,"byte_end":110508,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If the threaded scheduler is selected, it will not spawn","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110513,"byte_end":110573,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/ any worker threads until it needs to, i.e. tasks are scheduled to run.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110578,"byte_end":110652,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110657,"byte_end":110660,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Most applications will not need to call this function directly. Instead,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110665,"byte_end":110741,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/ they will use the  [`#[tokio::main]` attribute][main]. When more complex","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110746,"byte_end":110822,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ configuration is necessary, the [runtime builder] may be used.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110827,"byte_end":110893,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110898,"byte_end":110901,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110906,"byte_end":110965,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110970,"byte_end":110973,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110978,"byte_end":110992,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110997,"byte_end":111000,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Creating a new `Runtime` with default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111005,"byte_end":111068,"line_start":326,"line_end":326,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111073,"byte_end":111076,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111081,"byte_end":111088,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111093,"byte_end":111125,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111130,"byte_end":111133,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111138,"byte_end":111165,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111170,"byte_end":111188,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111193,"byte_end":111196,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ // Use the runtime...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111201,"byte_end":111226,"line_start":334,"line_end":334,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111231,"byte_end":111238,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111243,"byte_end":111246,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111251,"byte_end":111272,"line_start":337,"line_end":337,"column_start":5,"column_end":26}},{"value":"/ [main]: ../../tokio_macros/attr.main.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111277,"byte_end":111322,"line_start":338,"line_end":338,"column_start":5,"column_end":50}},{"value":"/ [threaded scheduler]: index.html#threaded-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111327,"byte_end":111382,"line_start":339,"line_end":339,"column_start":5,"column_end":60}},{"value":"/ [basic scheduler]: index.html#basic-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111387,"byte_end":111436,"line_start":340,"line_end":340,"column_start":5,"column_end":54}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111441,"byte_end":111487,"line_start":341,"line_end":341,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112832,"byte_end":112837,"line_start":386,"line_end":386,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111912,"byte_end":111954,"line_start":355,"line_end":355,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111959,"byte_end":111962,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":111967,"byte_end":112038,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112043,"byte_end":112118,"line_start":358,"line_end":358,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112123,"byte_end":112146,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112151,"byte_end":112154,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112159,"byte_end":112218,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112223,"byte_end":112226,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112231,"byte_end":112252,"line_start":363,"line_end":363,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112257,"byte_end":112260,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112265,"byte_end":112279,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112284,"byte_end":112287,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112292,"byte_end":112299,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112304,"byte_end":112336,"line_start":368,"line_end":368,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112341,"byte_end":112344,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112349,"byte_end":112365,"line_start":370,"line_end":370,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112370,"byte_end":112395,"line_start":371,"line_end":371,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112400,"byte_end":112437,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112442,"byte_end":112445,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112450,"byte_end":112488,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112493,"byte_end":112513,"line_start":375,"line_end":375,"column_start":5,"column_end":25}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112518,"byte_end":112569,"line_start":376,"line_end":376,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112574,"byte_end":112581,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112586,"byte_end":112593,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112598,"byte_end":112605,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112610,"byte_end":112613,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112618,"byte_end":112630,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112635,"byte_end":112638,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112643,"byte_end":112718,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112723,"byte_end":112788,"line_start":384,"line_end":384,"column_start":5,"column_end":70}},{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":112793,"byte_end":112820,"line_start":385,"line_end":385,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113841,"byte_end":113849,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the runtime's\n entry point.","sig":null,"attributes":[{"value":"/ Run a future to completion on the Tokio runtime. This is the runtime's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113239,"byte_end":113313,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/ entry point.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113318,"byte_end":113334,"line_start":400,"line_end":400,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113339,"byte_end":113342,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113347,"byte_end":113414,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113419,"byte_end":113492,"line_start":403,"line_end":403,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113497,"byte_end":113562,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113567,"byte_end":113570,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113575,"byte_end":113641,"line_start":406,"line_end":406,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113646,"byte_end":113649,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113654,"byte_end":113666,"line_start":408,"line_end":408,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113671,"byte_end":113674,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113679,"byte_end":113751,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":113756,"byte_end":113829,"line_start":411,"line_end":411,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114297,"byte_end":114302,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"enter","qualname":"<Runtime>::enter","value":"fn <F, R> (&self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.\n","sig":null,"attributes":[{"value":"/ Enter the runtime context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114255,"byte_end":114285,"line_start":424,"line_end":424,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114889,"byte_end":114895,"line_start":449,"line_end":449,"column_start":12,"column_end":18},"name":"handle","qualname":"<Runtime>::handle","value":"fn (&self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[{"value":"/ Return a handle to the runtime's spawner.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114409,"byte_end":114454,"line_start":432,"line_end":432,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114459,"byte_end":114462,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to spawn tasks that run on this runtime, and can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114467,"byte_end":114551,"line_start":434,"line_end":434,"column_start":5,"column_end":89}},{"value":"/ be cloned to allow moving the `Handle` to other threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114556,"byte_end":114616,"line_start":435,"line_end":435,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114621,"byte_end":114624,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114629,"byte_end":114643,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114648,"byte_end":114651,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114656,"byte_end":114663,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114668,"byte_end":114700,"line_start":440,"line_end":440,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114705,"byte_end":114708,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ let rt = Runtime::new()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114713,"byte_end":114740,"line_start":442,"line_end":442,"column_start":5,"column_end":32}},{"value":"/     .unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114745,"byte_end":114763,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114768,"byte_end":114771,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114776,"byte_end":114805,"line_start":445,"line_end":445,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114810,"byte_end":114813,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ handle.spawn(async { println!(\"hello\"); });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114818,"byte_end":114865,"line_start":447,"line_end":447,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114870,"byte_end":114877,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116302,"byte_end":116318,"line_start":488,"line_end":488,"column_start":12,"column_end":28},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"fn (self, duration: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[{"value":"/ Shutdown the runtime, waiting for at most `duration` for all spawned","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":114948,"byte_end":115020,"line_start":453,"line_end":453,"column_start":5,"column_end":77}},{"value":"/ task to shutdown.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115025,"byte_end":115046,"line_start":454,"line_end":454,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115051,"byte_end":115054,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Usually, dropping a `Runtime` handle is sufficient as tasks are able to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115059,"byte_end":115134,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ shutdown in a timely fashion. However, dropping a `Runtime` will wait","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115139,"byte_end":115212,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/ indefinitely for all tasks to terminate, and there are cases where a long","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115217,"byte_end":115294,"line_start":458,"line_end":458,"column_start":5,"column_end":82}},{"value":"/ blocking task has been spawned which can block dropping `Runtime`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115299,"byte_end":115369,"line_start":459,"line_end":459,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115374,"byte_end":115377,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ In this case, calling `shutdown_timeout` with an explicit wait timeout","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115382,"byte_end":115456,"line_start":461,"line_end":461,"column_start":5,"column_end":79}},{"value":"/ can work. The `shutdown_timeout` will signal all tasks to shutdown and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115461,"byte_end":115535,"line_start":462,"line_end":462,"column_start":5,"column_end":79}},{"value":"/ will wait for at most `duration` for all spawned tasks to terminate. If","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115540,"byte_end":115615,"line_start":463,"line_end":463,"column_start":5,"column_end":80}},{"value":"/ `timeout` elapses before all tasks are dropped, the function returns and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115620,"byte_end":115696,"line_start":464,"line_end":464,"column_start":5,"column_end":81}},{"value":"/ outstanding tasks are potentially leaked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115701,"byte_end":115746,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115751,"byte_end":115754,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115759,"byte_end":115773,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115778,"byte_end":115781,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115786,"byte_end":115793,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115798,"byte_end":115830,"line_start":470,"line_end":470,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115835,"byte_end":115855,"line_start":471,"line_end":471,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115860,"byte_end":115863,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115868,"byte_end":115888,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115893,"byte_end":115921,"line_start":474,"line_end":474,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115926,"byte_end":115929,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115934,"byte_end":115949,"line_start":476,"line_end":476,"column_start":5,"column_end":20}},{"value":"/    let mut runtime = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":115954,"byte_end":116003,"line_start":477,"line_end":477,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116008,"byte_end":116011,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/    runtime.block_on(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116016,"byte_end":116052,"line_start":479,"line_end":479,"column_start":5,"column_end":41}},{"value":"/        task::spawn_blocking(move || {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116057,"byte_end":116098,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/            thread::sleep(Duration::from_secs(10_000));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116103,"byte_end":116161,"line_start":481,"line_end":481,"column_start":5,"column_end":63}},{"value":"/        });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116166,"byte_end":116180,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/    });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116185,"byte_end":116195,"line_start":483,"line_end":483,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116200,"byte_end":116203,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/    runtime.shutdown_timeout(Duration::from_millis(100));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116208,"byte_end":116268,"line_start":485,"line_end":485,"column_start":5,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116273,"byte_end":116278,"line_start":486,"line_end":486,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":116283,"byte_end":116290,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3798},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"signal","qualname":"::signal","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3806},{"krate":0,"index":3807},{"krate":0,"index":3855},{"krate":0,"index":3859}],"decl_id":null,"docs":" Asynchronous signal handling for Tokio","sig":null,"attributes":[{"value":"cfg(feature = \"signal\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18032,"byte_end":18058,"line_start":177,"line_end":177,"column_start":13,"column_end":39}},{"value":"cfg(not (loom))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18133,"byte_end":18150,"line_start":179,"line_end":179,"column_start":13,"column_end":30}},{"value":"! Asynchronous signal handling for Tokio","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8578938,"byte_end":8578980,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8578981,"byte_end":8578984,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Note that signal handling is in general a very tricky topic and should be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8578985,"byte_end":8579062,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"! used with great care. This crate attempts to implement 'best practice' for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579063,"byte_end":8579141,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! signal handling, but it should be evaluated for your own applications' needs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579142,"byte_end":8579222,"line_start":5,"line_end":5,"column_start":1,"column_end":81}},{"value":"! to see if it's suitable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579223,"byte_end":8579251,"line_start":6,"line_end":6,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579252,"byte_end":8579255,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! The are some fundamental limitations of this crate documented on the OS","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579256,"byte_end":8579331,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"! specific structures, as well.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579332,"byte_end":8579365,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579366,"byte_end":8579369,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579370,"byte_end":8579384,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579385,"byte_end":8579388,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Print on \"ctrl-c\" notification.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579389,"byte_end":8579424,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579425,"byte_end":8579428,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579429,"byte_end":8579447,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! use tokio::signal;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579448,"byte_end":8579470,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579471,"byte_end":8579474,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579475,"byte_end":8579493,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579494,"byte_end":8579557,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"!     signal::ctrl_c().await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579558,"byte_end":8579590,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"!     println!(\"ctrl-c received!\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579591,"byte_end":8579628,"line_start":21,"line_end":21,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579629,"byte_end":8579643,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579644,"byte_end":8579649,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579650,"byte_end":8579657,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579658,"byte_end":8579661,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Wait for SIGHUP on Unix","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579662,"byte_end":8579689,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579690,"byte_end":8579693,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579694,"byte_end":8579712,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! # #[cfg(unix)] {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579713,"byte_end":8579733,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"! use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579734,"byte_end":8579784,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579785,"byte_end":8579788,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579789,"byte_end":8579807,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"! async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579808,"byte_end":8579871,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"!     // An infinite stream of hangup signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579872,"byte_end":8579920,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"!     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579921,"byte_end":8579976,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579977,"byte_end":8579980,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"!     // Print whenever a HUP signal is received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8579981,"byte_end":8580031,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"!     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580032,"byte_end":8580046,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"!         stream.recv().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580047,"byte_end":8580079,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"!         println!(\"got signal HUP\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580080,"byte_end":8580119,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580120,"byte_end":8580129,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580130,"byte_end":8580135,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580136,"byte_end":8580143,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580144,"byte_end":8580151,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":3803},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582238,"byte_end":8582244,"line_start":50,"line_end":50,"column_start":14,"column_end":20},"name":"ctrl_c","qualname":"::signal::ctrl_c::ctrl_c","value":"fn () -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Completes when a \"ctrl-c\" notification is sent to the process.","sig":null,"attributes":[{"value":"/ Completes when a \"ctrl-c\" notification is sent to the process.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580525,"byte_end":8580591,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580592,"byte_end":8580595,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ While signals are handled very differently between Unix and Windows, both","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580596,"byte_end":8580673,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ platforms support receiving a signal on \"ctrl-c\". This function provides a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580674,"byte_end":8580752,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ portable API for receiving this notification.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580753,"byte_end":8580802,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580803,"byte_end":8580806,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once the returned future is polled, a listener a listener is registered. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580807,"byte_end":8580887,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ future will complete on the first received `ctrl-c` **after** the initial","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580888,"byte_end":8580965,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ call to either `Future::poll` or `.await`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8580966,"byte_end":8581012,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581013,"byte_end":8581016,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581017,"byte_end":8581030,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581031,"byte_end":8581034,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ On Unix platforms, the first time that a `Signal` instance is registered for a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581035,"byte_end":8581117,"line_start":20,"line_end":20,"column_start":1,"column_end":83}},{"value":"/ particular signal kind, an OS signal-handler is installed which replaces the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581118,"byte_end":8581198,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ default platform behavior when that signal is received, **for the duration of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581199,"byte_end":8581280,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/ the entire process**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581281,"byte_end":8581306,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581307,"byte_end":8581310,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581311,"byte_end":8581384,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ receives a signal generated by \"CTRL+C\" on the terminal. But, when a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581385,"byte_end":8581457,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `ctrl_c` stream is created to listen for this signal, the time it arrives,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581458,"byte_end":8581536,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ it will be translated to a stream event, and the process will continue to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581537,"byte_end":8581614,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ execute.  **Even if this `Signal` instance is dropped, subsequent SIGINT","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581615,"byte_end":8581691,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ deliveries will end up captured by Tokio, and the default platform behavior","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581692,"byte_end":8581771,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ will NOT be reset**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581772,"byte_end":8581796,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581797,"byte_end":8581800,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581801,"byte_end":8581879,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581880,"byte_end":8581940,"line_start":34,"line_end":34,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581941,"byte_end":8581944,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581945,"byte_end":8581959,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581960,"byte_end":8581963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581964,"byte_end":8581982,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8581983,"byte_end":8582005,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582006,"byte_end":8582009,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582010,"byte_end":8582028,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582029,"byte_end":8582050,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/     println!(\"waiting for ctrl-c\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582051,"byte_end":8582090,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582091,"byte_end":8582094,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/     signal::ctrl_c().await.expect(\"failed to listen for event\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582095,"byte_end":8582163,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582164,"byte_end":8582167,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     println!(\"received ctrl-c event\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582168,"byte_end":8582210,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582211,"byte_end":8582216,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/ctrl_c.rs","byte_start":8582217,"byte_end":8582224,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::signal::unix","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","parent":null,"children":[{"krate":0,"index":3860},{"krate":0,"index":3863},{"krate":0,"index":3870},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3893},{"krate":0,"index":3955},{"krate":0,"index":3958},{"krate":0,"index":3900},{"krate":0,"index":3960},{"krate":0,"index":3966},{"krate":0,"index":3964},{"krate":0,"index":3963},{"krate":0,"index":3902},{"krate":0,"index":3916},{"krate":0,"index":3920},{"krate":0,"index":3922},{"krate":0,"index":3923},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3927},{"krate":0,"index":3929},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3977},{"krate":0,"index":3941}],"decl_id":null,"docs":" Unix-specific types for signal handling.","sig":null,"attributes":[{"value":"! Unix-specific types for signal handling.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8591682,"byte_end":8591726,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8591727,"byte_end":8591730,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module is only defined on Unix platforms and contains the primary","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8591731,"byte_end":8591805,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! `Signal` type for receiving notifications of signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8591806,"byte_end":8591863,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"cfg(unix)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8591865,"byte_end":8591878,"line_start":6,"line_end":6,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3960},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593193,"byte_end":8593203,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"SignalKind","qualname":"::signal::unix::SignalKind","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the specific kind of signal to listen for.\n","sig":null,"attributes":[{"value":"/ Represents the specific kind of signal to listen for.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593094,"byte_end":8593151,"line_start":59,"line_end":59,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593602,"byte_end":8593610,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<SignalKind>::from_raw","value":"fn (signum: c_int) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows for listening to any valid OS signal.","sig":null,"attributes":[{"value":"/ Allows for listening to any valid OS signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593235,"byte_end":8593283,"line_start":64,"line_end":64,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593288,"byte_end":8593291,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ For example, this can be used for listening for platform-specific","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593296,"byte_end":8593365,"line_start":66,"line_end":66,"column_start":5,"column_end":74}},{"value":"/ signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593370,"byte_end":8593382,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593387,"byte_end":8593405,"line_start":68,"line_end":68,"column_start":5,"column_end":23}},{"value":"/ # use tokio::signal::unix::SignalKind;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593410,"byte_end":8593452,"line_start":69,"line_end":69,"column_start":5,"column_end":47}},{"value":"/ # let signum = -1;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593457,"byte_end":8593479,"line_start":70,"line_end":70,"column_start":5,"column_end":27}},{"value":"/ // let signum = libc::OS_SPECIFIC_SIGNAL;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593484,"byte_end":8593529,"line_start":71,"line_end":71,"column_start":5,"column_end":50}},{"value":"/ let kind = SignalKind::from_raw(signum);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593534,"byte_end":8593578,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593583,"byte_end":8593590,"line_start":73,"line_end":73,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593864,"byte_end":8593869,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"alarm","qualname":"<SignalKind>::alarm","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGALRM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGALRM signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593668,"byte_end":8593702,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593707,"byte_end":8593710,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when a real-time timer has expired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593715,"byte_end":8593790,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593795,"byte_end":8593852,"line_start":81,"line_end":81,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594111,"byte_end":8594116,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"child","qualname":"<SignalKind>::child","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGCHLD signal.","sig":null,"attributes":[{"value":"/ Represents the SIGCHLD signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593921,"byte_end":8593955,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593960,"byte_end":8593963,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the status of a child process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593968,"byte_end":8594042,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ has changed. By default, this signal is ignored.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594047,"byte_end":8594099,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594362,"byte_end":8594368,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"hangup","qualname":"<SignalKind>::hangup","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGHUP signal.","sig":null,"attributes":[{"value":"/ Represents the SIGHUP signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594168,"byte_end":8594201,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594206,"byte_end":8594209,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal is disconnected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594214,"byte_end":8594288,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594293,"byte_end":8594350,"line_start":97,"line_end":97,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594782,"byte_end":8594786,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"info","qualname":"<SignalKind>::info","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINFO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINFO signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594419,"byte_end":8594453,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594458,"byte_end":8594461,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to request a status update from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594466,"byte_end":8594541,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ process. By default, this signal is ignored.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594546,"byte_end":8594594,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"cfg(any\n      (target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"macos\",\n       target_os = \"netbsd\", target_os = \"openbsd\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594599,"byte_end":8594770,"line_start":106,"line_end":112,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595021,"byte_end":8595030,"line_start":121,"line_end":121,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<SignalKind>::interrupt","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGINT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGINT signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594838,"byte_end":8594871,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594876,"byte_end":8594879,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to interrupt a program.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594884,"byte_end":8594947,"line_start":119,"line_end":119,"column_start":5,"column_end":68}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8594952,"byte_end":8595009,"line_start":120,"line_end":120,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595279,"byte_end":8595281,"line_start":129,"line_end":129,"column_start":12,"column_end":14},"name":"io","qualname":"<SignalKind>::io","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGIO signal.","sig":null,"attributes":[{"value":"/ Represents the SIGIO signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595081,"byte_end":8595113,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595118,"byte_end":8595121,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when I/O operations are possible","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595126,"byte_end":8595198,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ on some file descriptor. By default, this signal is ignored.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595203,"byte_end":8595267,"line_start":128,"line_end":128,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595565,"byte_end":8595569,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"pipe","qualname":"<SignalKind>::pipe","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGPIPE signal.","sig":null,"attributes":[{"value":"/ Represents the SIGPIPE signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595331,"byte_end":8595365,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595370,"byte_end":8595373,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the process attempts to write","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595378,"byte_end":8595452,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ to a pipe which has no reader. By default, the process is terminated by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595457,"byte_end":8595532,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595537,"byte_end":8595553,"line_start":137,"line_end":137,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3911},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595872,"byte_end":8595876,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"quit","qualname":"<SignalKind>::quit","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGQUIT signal.","sig":null,"attributes":[{"value":"/ Represents the SIGQUIT signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595621,"byte_end":8595655,"line_start":142,"line_end":142,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595660,"byte_end":8595663,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595668,"byte_end":8595734,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/ process, after which the OS will dump the process core.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595739,"byte_end":8595798,"line_start":145,"line_end":145,"column_start":5,"column_end":64}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595803,"byte_end":8595860,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596124,"byte_end":8596133,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"terminate","qualname":"<SignalKind>::terminate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGTERM signal.","sig":null,"attributes":[{"value":"/ Represents the SIGTERM signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595928,"byte_end":8595962,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595967,"byte_end":8595970,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent to issue a shutdown of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8595975,"byte_end":8596041,"line_start":153,"line_end":153,"column_start":5,"column_end":71}},{"value":"/ process. By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596046,"byte_end":8596112,"line_start":154,"line_end":154,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596356,"byte_end":8596369,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"user_defined1","qualname":"<SignalKind>::user_defined1","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR1 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR1 signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596185,"byte_end":8596219,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596224,"byte_end":8596227,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596232,"byte_end":8596282,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596287,"byte_end":8596344,"line_start":162,"line_end":162,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596592,"byte_end":8596605,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"user_defined2","qualname":"<SignalKind>::user_defined2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGUSR2 signal.","sig":null,"attributes":[{"value":"/ Represents the SIGUSR2 signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596421,"byte_end":8596455,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596460,"byte_end":8596463,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this is a user defined signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596468,"byte_end":8596518,"line_start":169,"line_end":169,"column_start":5,"column_end":55}},{"value":"/ By default, the process is terminated by this signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596523,"byte_end":8596580,"line_start":170,"line_end":170,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596837,"byte_end":8596850,"line_start":179,"line_end":179,"column_start":12,"column_end":25},"name":"window_change","qualname":"<SignalKind>::window_change","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Represents the SIGWINCH signal.","sig":null,"attributes":[{"value":"/ Represents the SIGWINCH signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596657,"byte_end":8596692,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596697,"byte_end":8596700,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ On Unix systems this signal is sent when the terminal window is resized.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596705,"byte_end":8596781,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ By default, this signal is ignored.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8596786,"byte_end":8596825,"line_start":178,"line_end":178,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604273,"byte_end":8604279,"line_start":378,"line_end":378,"column_start":12,"column_end":18},"name":"Signal","qualname":"::signal::unix::Signal","value":"Signal {  }","parent":null,"children":[{"krate":0,"index":3973},{"krate":0,"index":3974}],"decl_id":null,"docs":" A stream of events for receiving a particular type of OS signal.","sig":null,"attributes":[{"value":"/ A stream of events for receiving a particular type of OS signal.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601508,"byte_end":8601576,"line_start":314,"line_end":314,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601577,"byte_end":8601580,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ In general signal handling on Unix is a pretty tricky topic, and this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601581,"byte_end":8601654,"line_start":316,"line_end":316,"column_start":1,"column_end":74}},{"value":"/ structure is no exception! There are some important limitations to keep in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601655,"byte_end":8601733,"line_start":317,"line_end":317,"column_start":1,"column_end":79}},{"value":"/ mind when using `Signal` streams:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601734,"byte_end":8601771,"line_start":318,"line_end":318,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601772,"byte_end":8601775,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ * Signals handling in Unix already necessitates coalescing signals","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601776,"byte_end":8601846,"line_start":320,"line_end":320,"column_start":1,"column_end":71}},{"value":"/   together sometimes. This `Signal` stream is also no exception here in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601847,"byte_end":8601922,"line_start":321,"line_end":321,"column_start":1,"column_end":76}},{"value":"/   that it will also coalesce signals. That is, even if the signal handler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8601923,"byte_end":8602000,"line_start":322,"line_end":322,"column_start":1,"column_end":78}},{"value":"/   for this process runs multiple times, the `Signal` stream may only return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602001,"byte_end":8602080,"line_start":323,"line_end":323,"column_start":1,"column_end":80}},{"value":"/   one signal notification. Specifically, before `poll` is called, all","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602081,"byte_end":8602154,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/   signal notifications are coalesced into one item returned from `poll`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602155,"byte_end":8602231,"line_start":325,"line_end":325,"column_start":1,"column_end":77}},{"value":"/   Once `poll` has been called, however, a further signal is guaranteed to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602232,"byte_end":8602309,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/   be yielded as an item.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602310,"byte_end":8602338,"line_start":327,"line_end":327,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602339,"byte_end":8602342,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/   Put another way, any element pulled off the returned stream corresponds to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602343,"byte_end":8602423,"line_start":329,"line_end":329,"column_start":1,"column_end":81}},{"value":"/   *at least one* signal, but possibly more.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602424,"byte_end":8602471,"line_start":330,"line_end":330,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602472,"byte_end":8602475,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ * Signal handling in general is relatively inefficient. Although some","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602476,"byte_end":8602549,"line_start":332,"line_end":332,"column_start":1,"column_end":74}},{"value":"/   improvements are possible in this crate, it's recommended to not plan on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602550,"byte_end":8602628,"line_start":333,"line_end":333,"column_start":1,"column_end":79}},{"value":"/   having millions of signal channels open.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602629,"byte_end":8602675,"line_start":334,"line_end":334,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602676,"byte_end":8602679,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ If you've got any questions about this feel free to open an issue on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602680,"byte_end":8602756,"line_start":336,"line_end":336,"column_start":1,"column_end":77}},{"value":"/ repo! New approaches to alleviate some of these limitations are always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602757,"byte_end":8602831,"line_start":337,"line_end":337,"column_start":1,"column_end":75}},{"value":"/ appreciated!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602832,"byte_end":8602848,"line_start":338,"line_end":338,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602849,"byte_end":8602852,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ # Caveats","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602853,"byte_end":8602866,"line_start":340,"line_end":340,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602867,"byte_end":8602870,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ The first time that a `Signal` instance is registered for a particular","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602871,"byte_end":8602945,"line_start":342,"line_end":342,"column_start":1,"column_end":75}},{"value":"/ signal kind, an OS signal-handler is installed which replaces the default","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8602946,"byte_end":8603023,"line_start":343,"line_end":343,"column_start":1,"column_end":78}},{"value":"/ platform behavior when that signal is received, **for the duration of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603024,"byte_end":8603101,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/ entire process**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603102,"byte_end":8603123,"line_start":345,"line_end":345,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603124,"byte_end":8603127,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ For example, Unix systems will terminate a process by default when it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603128,"byte_end":8603201,"line_start":347,"line_end":347,"column_start":1,"column_end":74}},{"value":"/ receives SIGINT. But, when a `Signal` instance is created to listen for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603202,"byte_end":8603277,"line_start":348,"line_end":348,"column_start":1,"column_end":76}},{"value":"/ this signal, the next SIGINT that arrives will be translated to a stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603278,"byte_end":8603354,"line_start":349,"line_end":349,"column_start":1,"column_end":77}},{"value":"/ event, and the process will continue to execute. **Even if this `Signal`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603355,"byte_end":8603431,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ instance is dropped, subsequent SIGINT deliveries will end up captured by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603432,"byte_end":8603509,"line_start":351,"line_end":351,"column_start":1,"column_end":78}},{"value":"/ Tokio, and the default platform behavior will NOT be reset**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603510,"byte_end":8603575,"line_start":352,"line_end":352,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603576,"byte_end":8603579,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Thus, applications should take care to ensure the expected signal behavior","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603580,"byte_end":8603658,"line_start":354,"line_end":354,"column_start":1,"column_end":79}},{"value":"/ occurs as expected after listening for specific signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603659,"byte_end":8603719,"line_start":355,"line_end":355,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603720,"byte_end":8603723,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603724,"byte_end":8603738,"line_start":357,"line_end":357,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603739,"byte_end":8603742,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603743,"byte_end":8603762,"line_start":359,"line_end":359,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603763,"byte_end":8603766,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603767,"byte_end":8603785,"line_start":361,"line_end":361,"column_start":1,"column_end":19}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603786,"byte_end":8603836,"line_start":362,"line_end":362,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603837,"byte_end":8603840,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603841,"byte_end":8603859,"line_start":364,"line_end":364,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603860,"byte_end":8603923,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603924,"byte_end":8603972,"line_start":366,"line_end":366,"column_start":1,"column_end":49}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8603973,"byte_end":8604028,"line_start":367,"line_end":367,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604029,"byte_end":8604032,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604033,"byte_end":8604083,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"/     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604084,"byte_end":8604098,"line_start":370,"line_end":370,"column_start":1,"column_end":15}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604099,"byte_end":8604131,"line_start":371,"line_end":371,"column_start":1,"column_end":33}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604132,"byte_end":8604171,"line_start":372,"line_end":372,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604172,"byte_end":8604181,"line_start":373,"line_end":373,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604182,"byte_end":8604187,"line_start":374,"line_end":374,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604188,"byte_end":8604195,"line_start":375,"line_end":375,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604196,"byte_end":8604244,"line_start":376,"line_end":376,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3933},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605397,"byte_end":8605403,"line_start":405,"line_end":405,"column_start":8,"column_end":14},"name":"signal","qualname":"::signal::unix::signal","value":"fn (kind: SignalKind) -> io::Result<Signal>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream which will receive notifications when the current\n process receives the specified signal `kind`.","sig":null,"attributes":[{"value":"/ Creates a new stream which will receive notifications when the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604327,"byte_end":8604401,"line_start":383,"line_end":383,"column_start":1,"column_end":75}},{"value":"/ process receives the specified signal `kind`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604402,"byte_end":8604451,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604452,"byte_end":8604455,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ This function will create a new stream which binds to the default reactor.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604456,"byte_end":8604534,"line_start":386,"line_end":386,"column_start":1,"column_end":79}},{"value":"/ The `Signal` stream is an infinite stream which will receive","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604535,"byte_end":8604599,"line_start":387,"line_end":387,"column_start":1,"column_end":65}},{"value":"/ notifications whenever a signal is received. More documentation can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604600,"byte_end":8604674,"line_start":388,"line_end":388,"column_start":1,"column_end":75}},{"value":"/ found on `Signal` itself, but to reiterate:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604675,"byte_end":8604722,"line_start":389,"line_end":389,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604723,"byte_end":8604726,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ * Signals may be coalesced beyond what the kernel already does.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604727,"byte_end":8604794,"line_start":391,"line_end":391,"column_start":1,"column_end":68}},{"value":"/ * Once a signal handler is registered with the process the underlying","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604795,"byte_end":8604868,"line_start":392,"line_end":392,"column_start":1,"column_end":74}},{"value":"/   libc signal handler is never unregistered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604869,"byte_end":8604917,"line_start":393,"line_end":393,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604918,"byte_end":8604921,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/ A `Signal` stream can be created for a particular signal number","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604922,"byte_end":8604989,"line_start":395,"line_end":395,"column_start":1,"column_end":68}},{"value":"/ multiple times. When a signal is received then all the associated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8604990,"byte_end":8605059,"line_start":396,"line_end":396,"column_start":1,"column_end":70}},{"value":"/ channels will receive the signal notification.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605060,"byte_end":8605110,"line_start":397,"line_end":397,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605111,"byte_end":8605114,"line_start":398,"line_end":398,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605115,"byte_end":8605127,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605128,"byte_end":8605131,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * If the lower-level C functions fail for some reason.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605132,"byte_end":8605190,"line_start":401,"line_end":401,"column_start":1,"column_end":59}},{"value":"/ * If the previous initialization of this specific signal failed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605191,"byte_end":8605259,"line_start":402,"line_end":402,"column_start":1,"column_end":69}},{"value":"/ * If the signal is one of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605260,"byte_end":8605289,"line_start":403,"line_end":403,"column_start":1,"column_end":30}},{"value":"/   [`signal_hook::FORBIDDEN`](https://docs.rs/signal-hook/*/signal_hook/fn.register.html#panics)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605290,"byte_end":8605389,"line_start":404,"line_end":404,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606614,"byte_end":8606618,"line_start":447,"line_end":447,"column_start":18,"column_end":22},"name":"recv","qualname":"<Signal>::recv","value":"fn (&mut self) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next signal notification event.","sig":null,"attributes":[{"value":"/ Receives the next signal notification event.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605907,"byte_end":8605955,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605960,"byte_end":8605963,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605968,"byte_end":8606040,"line_start":426,"line_end":426,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606045,"byte_end":8606048,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606053,"byte_end":8606067,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606072,"byte_end":8606075,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Wait for SIGHUP","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606080,"byte_end":8606099,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606104,"byte_end":8606107,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606112,"byte_end":8606130,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ use tokio::signal::unix::{signal, SignalKind};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606135,"byte_end":8606185,"line_start":433,"line_end":433,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606190,"byte_end":8606193,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606198,"byte_end":8606216,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606221,"byte_end":8606284,"line_start":436,"line_end":436,"column_start":5,"column_end":68}},{"value":"/     // An infinite stream of hangup signals.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606289,"byte_end":8606337,"line_start":437,"line_end":437,"column_start":5,"column_end":53}},{"value":"/     let mut stream = signal(SignalKind::hangup())?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606342,"byte_end":8606397,"line_start":438,"line_end":438,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606402,"byte_end":8606405,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/     // Print whenever a HUP signal is received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606410,"byte_end":8606460,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606465,"byte_end":8606479,"line_start":441,"line_end":441,"column_start":5,"column_end":19}},{"value":"/         stream.recv().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606484,"byte_end":8606516,"line_start":442,"line_end":442,"column_start":5,"column_end":37}},{"value":"/         println!(\"got signal HUP\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606521,"byte_end":8606560,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606565,"byte_end":8606574,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606579,"byte_end":8606584,"line_start":445,"line_end":445,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606589,"byte_end":8606596,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607567,"byte_end":8607576,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Signal>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next signal notification event, outside of an\n `async` context.","sig":null,"attributes":[{"value":"/ Polls to receive the next signal notification event, outside of an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606740,"byte_end":8606810,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ `async` context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606815,"byte_end":8606835,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606840,"byte_end":8606843,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if no more events can be received by this stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606848,"byte_end":8606920,"line_start":455,"line_end":455,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606925,"byte_end":8606928,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606933,"byte_end":8606947,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606952,"byte_end":8606955,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Polling from a manually implemented future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8606960,"byte_end":8607006,"line_start":459,"line_end":459,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607011,"byte_end":8607014,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607019,"byte_end":8607037,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607042,"byte_end":8607064,"line_start":462,"line_end":462,"column_start":5,"column_end":27}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607069,"byte_end":8607097,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607102,"byte_end":8607137,"line_start":464,"line_end":464,"column_start":5,"column_end":40}},{"value":"/ use tokio::signal::unix::Signal;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607142,"byte_end":8607178,"line_start":465,"line_end":465,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607183,"byte_end":8607186,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ struct MyFuture {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607191,"byte_end":8607212,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/     signal: Signal,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607217,"byte_end":8607240,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607245,"byte_end":8607250,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607255,"byte_end":8607258,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ impl Future for MyFuture {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607263,"byte_end":8607293,"line_start":471,"line_end":471,"column_start":5,"column_end":35}},{"value":"/     type Output = Option<()>;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607298,"byte_end":8607331,"line_start":472,"line_end":472,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607336,"byte_end":8607339,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607344,"byte_end":8607431,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/         println!(\"polling MyFuture\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607436,"byte_end":8607477,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/         self.signal.poll_recv(cx)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607482,"byte_end":8607519,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607524,"byte_end":8607533,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607538,"byte_end":8607543,"line_start":478,"line_end":478,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607548,"byte_end":8607555,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3980},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":3981},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4258},{"krate":0,"index":4261},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4348},{"krate":0,"index":4351},{"krate":0,"index":4371},{"krate":0,"index":4374},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4504},{"krate":0,"index":4505},{"krate":0,"index":4529},{"krate":0,"index":4643},{"krate":0,"index":4666},{"krate":0,"index":4667},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4565}],"decl_id":null,"docs":" Stream utilities for Tokio.","sig":null,"attributes":[{"value":"cfg(feature = \"stream\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18264,"byte_end":18290,"line_start":188,"line_end":188,"column_start":13,"column_end":39}},{"value":"! Stream utilities for Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8616917,"byte_end":8616948,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8616949,"byte_end":8616952,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! A `Stream` is an asynchronous sequence of values. It can be thought of as an asynchronous version of the standard library's `Iterator` trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8616953,"byte_end":8617098,"line_start":3,"line_end":3,"column_start":1,"column_end":146}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617099,"byte_end":8617102,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! This module provides helpers to work with them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8617103,"byte_end":8617154,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642213,"byte_end":8642222,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllFuture","qualname":"::stream::all::AllFuture","value":"AllFuture {  }","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4572}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`all`](super::StreamExt::all) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642059,"byte_end":8642116,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642134,"byte_end":8642201,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4578},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643376,"byte_end":8643385,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AnyFuture","qualname":"::stream::any::AnyFuture","value":"AnyFuture {  }","parent":null,"children":[{"krate":0,"index":4582},{"krate":0,"index":4583}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`any`](super::StreamExt::any) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643222,"byte_end":8643279,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643297,"byte_end":8643364,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/chain.rs","byte_start":8644505,"byte_end":8644510,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":8133},{"krate":0,"index":8134}],"decl_id":null,"docs":" Stream returned by the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8121},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8645966,"byte_end":8645973,"line_start":15,"line_end":15,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":8124},{"krate":0,"index":8125}],"decl_id":null,"docs":" Future returned by the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":4058},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646538,"byte_end":8646548,"line_start":36,"line_end":36,"column_start":11,"column_end":21},"name":"FromStream","qualname":"::stream::collect::FromStream","value":"FromStream<T>: sealed::FromStreamPriv<T>","parent":null,"children":[],"decl_id":null,"docs":" Convert from a [`Stream`](crate::stream::Stream).","sig":null,"attributes":[{"value":"/ Convert from a [`Stream`](crate::stream::Stream).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646125,"byte_end":8646178,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646179,"byte_end":8646182,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait is not intended to be used directly. Instead, call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646183,"byte_end":8646248,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/ [`StreamExt::collect()`](super::StreamExt::collect).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646249,"byte_end":8646305,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646306,"byte_end":8646309,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Implementing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646310,"byte_end":8646328,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646329,"byte_end":8646332,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait may not be implemented by third parties. The trait is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646333,"byte_end":8646412,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ sealed in order to make changes in the future. Stabilization is pending","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646413,"byte_end":8646488,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646489,"byte_end":8646527,"line_start":35,"line_end":35,"column_start":1,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":4129},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651449,"byte_end":8651463,"line_start":231,"line_end":231,"column_start":15,"column_end":29},"name":"FromStreamPriv","qualname":"::stream::collect::sealed::FromStreamPriv","value":"FromStreamPriv<T>","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651543,"byte_end":8651553,"line_start":233,"line_end":233,"column_start":14,"column_end":24},"name":"Collection","qualname":"::stream::collect::sealed::FromStreamPriv::Collection","value":"type Collection;","parent":{"krate":0,"index":4129},"children":[],"decl_id":null,"docs":" Intermediate type used during collection process\n","sig":null,"attributes":[{"value":"/ Intermediate type used during collection process","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651477,"byte_end":8651529,"line_start":232,"line_end":232,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651605,"byte_end":8651615,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"initialize","qualname":"::stream::collect::sealed::FromStreamPriv::initialize","value":"fn (lower: usize, upper: Option<usize>) -> Self::Collection","parent":{"krate":0,"index":4129},"children":[],"decl_id":null,"docs":" Initialize the collection\n","sig":null,"attributes":[{"value":"/ Initialize the collection","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651564,"byte_end":8651593,"line_start":235,"line_end":235,"column_start":9,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651832,"byte_end":8651838,"line_start":241,"line_end":241,"column_start":12,"column_end":18},"name":"extend","qualname":"::stream::collect::sealed::FromStreamPriv::extend","value":"fn (collection: &mut Self::Collection, item: T) -> bool","parent":{"krate":0,"index":4129},"children":[],"decl_id":null,"docs":" Extend the collection with the received item","sig":null,"attributes":[{"value":"/ Extend the collection with the received item","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651682,"byte_end":8651730,"line_start":238,"line_end":238,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651739,"byte_end":8651742,"line_start":239,"line_end":239,"column_start":9,"column_end":12}},{"value":"/ Return `true` to continue streaming, `false` complete collection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651751,"byte_end":8651820,"line_start":240,"line_end":240,"column_start":9,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651954,"byte_end":8651962,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"finalize","qualname":"::stream::collect::sealed::FromStreamPriv::finalize","value":"fn (collection: &mut Self::Collection) -> Self","parent":{"krate":0,"index":4129},"children":[],"decl_id":null,"docs":" Finalize collection into target type.\n","sig":null,"attributes":[{"value":"/ Finalize collection into target type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651901,"byte_end":8651942,"line_start":243,"line_end":243,"column_start":9,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652245,"byte_end":8652250,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652129,"byte_end":8652167,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652185,"byte_end":8652233,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4150},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652840,"byte_end":8652845,"line_start":36,"line_end":36,"column_start":14,"column_end":19},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that yields nothing.","sig":null,"attributes":[{"value":"/ Creates a stream that yields nothing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652375,"byte_end":8652416,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652417,"byte_end":8652420,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and returns `None`. Use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652421,"byte_end":8652489,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ [`stream::pending()`](super::pending()) to obtain a stream that is never","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652490,"byte_end":8652566,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652567,"byte_end":8652577,"line_start":20,"line_end":20,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652578,"byte_end":8652581,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652582,"byte_end":8652596,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652597,"byte_end":8652600,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652601,"byte_end":8652617,"line_start":24,"line_end":24,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652618,"byte_end":8652621,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652622,"byte_end":8652629,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652630,"byte_end":8652671,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652672,"byte_end":8652675,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652676,"byte_end":8652694,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652695,"byte_end":8652716,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let mut none = stream::empty::<i32>();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652717,"byte_end":8652763,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652764,"byte_end":8652767,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(None, none.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652768,"byte_end":8652812,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652813,"byte_end":8652818,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652819,"byte_end":8652826,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8036},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653428,"byte_end":8653434,"line_start":11,"line_end":11,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":8039},{"krate":0,"index":8040}],"decl_id":null,"docs":" Stream returned by the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7991},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8654866,"byte_end":8654875,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":7994},{"krate":0,"index":7995}],"decl_id":null,"docs":" Stream returned by the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7979},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fold.rs","byte_start":8656292,"byte_end":8656302,"line_start":11,"line_end":11,"column_start":16,"column_end":26},"name":"FoldFuture","qualname":"::stream::fold::FoldFuture","value":"FoldFuture {  }","parent":null,"children":[{"krate":0,"index":7983},{"krate":0,"index":7984},{"krate":0,"index":7985}],"decl_id":null,"docs":" Future returned by the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7923},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fuse.rs","byte_start":8657458,"byte_end":8657462,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":7925}],"decl_id":null,"docs":" Stream returned by [`fuse()`][super::StreamExt::fuse].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658585,"byte_end":8658589,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":4598}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658470,"byte_end":8658507,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658525,"byte_end":8658573,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4251},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659163,"byte_end":8659167,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658641,"byte_end":8658705,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658706,"byte_end":8658734,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658735,"byte_end":8658738,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658739,"byte_end":8658812,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658813,"byte_end":8658868,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658869,"byte_end":8658872,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658873,"byte_end":8658880,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658881,"byte_end":8658903,"line_start":22,"line_end":22,"column_start":1,"column_end":23}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658904,"byte_end":8658945,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658946,"byte_end":8658949,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658950,"byte_end":8658998,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658999,"byte_end":8659002,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(stream.next().await, Some(17));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659003,"byte_end":8659049,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, Some(19));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659050,"byte_end":8659096,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659097,"byte_end":8659139,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659140,"byte_end":8659147,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659148,"byte_end":8659155,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7848},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8659906,"byte_end":8659909,"line_start":11,"line_end":11,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":7851},{"krate":0,"index":7852}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7799},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/merge.rs","byte_start":8660979,"byte_end":8660984,"line_start":9,"line_end":9,"column_start":16,"column_end":21},"name":"Merge","qualname":"::stream::merge::Merge","value":"Merge {  }","parent":null,"children":[{"krate":0,"index":7802},{"krate":0,"index":7803},{"krate":0,"index":7804}],"decl_id":null,"docs":" Stream returned by the [`merge`](super::StreamExt::merge) method.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663082,"byte_end":8663086,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":4605}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8662926,"byte_end":8662985,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663003,"byte_end":8663070,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4610},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663773,"byte_end":8663777,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":4612}],"decl_id":null,"docs":" Stream for the [`once`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`once`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663658,"byte_end":8663695,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663713,"byte_end":8663761,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664349,"byte_end":8664353,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <T> (value: T) -> Once<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that emits an element exactly once.","sig":null,"attributes":[{"value":"/ Creates a stream that emits an element exactly once.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663853,"byte_end":8663909,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663910,"byte_end":8663913,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is immediately ready and emits the provided value once.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663914,"byte_end":8663993,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663994,"byte_end":8663997,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663998,"byte_end":8664012,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664013,"byte_end":8664016,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664017,"byte_end":8664024,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664025,"byte_end":8664066,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664067,"byte_end":8664070,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664071,"byte_end":8664089,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664090,"byte_end":8664111,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     // one is the loneliest number","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664112,"byte_end":8664150,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/     let mut one = stream::once(1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664151,"byte_end":8664189,"line_start":28,"line_end":28,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664190,"byte_end":8664193,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(Some(1), one.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664194,"byte_end":8664240,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664241,"byte_end":8664244,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     // just one, that's all we get","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664245,"byte_end":8664283,"line_start":32,"line_end":32,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(None, one.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664284,"byte_end":8664327,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664328,"byte_end":8664333,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664334,"byte_end":8664341,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4616},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8664964,"byte_end":8664971,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream for the [`pending`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8664846,"byte_end":8664886,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8664904,"byte_end":8664952,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665711,"byte_end":8665718,"line_start":40,"line_end":40,"column_start":14,"column_end":21},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream that is never ready","sig":null,"attributes":[{"value":"/ Creates a stream that is never ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665102,"byte_end":8665142,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665143,"byte_end":8665146,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The returned stream is never ready. Attempting to call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665147,"byte_end":8665205,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/ [`next()`](crate::stream::StreamExt::next) will never complete. Use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665206,"byte_end":8665277,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ [`stream::empty()`](super::empty()) to obtain a stream that is is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665278,"byte_end":8665347,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ immediately empty but returns no values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665348,"byte_end":8665392,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665393,"byte_end":8665396,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665397,"byte_end":8665411,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665412,"byte_end":8665415,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665416,"byte_end":8665432,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665433,"byte_end":8665436,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665437,"byte_end":8665450,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665451,"byte_end":8665492,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665493,"byte_end":8665496,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665497,"byte_end":8665515,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665516,"byte_end":8665537,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     let mut never = stream::pending::<i32>();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665538,"byte_end":8665587,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665588,"byte_end":8665591,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/     // This will never complete","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665592,"byte_end":8665627,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/     never.next().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665628,"byte_end":8665655,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665656,"byte_end":8665659,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     unreachable!();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665660,"byte_end":8665683,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665684,"byte_end":8665689,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665690,"byte_end":8665697,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4623},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671367,"byte_end":8671376,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"StreamMap","qualname":"::stream::stream_map::StreamMap","value":"StreamMap {  }","parent":null,"children":[{"krate":0,"index":4626}],"decl_id":null,"docs":" Combine many streams into one, indexing each source stream with a unique\n key.","sig":null,"attributes":[{"value":"/ Combine many streams into one, indexing each source stream with a unique","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666135,"byte_end":8666211,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ key.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666212,"byte_end":8666220,"line_start":9,"line_end":9,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666221,"byte_end":8666224,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is similar to [`StreamExt::merge`] in that it combines source","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666225,"byte_end":8666302,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ streams into a single merged stream that yields values in the order that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666303,"byte_end":8666379,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ they arrive from the source streams. However, `StreamMap` has a lot more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666380,"byte_end":8666456,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ flexibility in usage patterns.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666457,"byte_end":8666491,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666492,"byte_end":8666495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` can:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666496,"byte_end":8666516,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666517,"byte_end":8666520,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * Merge an arbitrary number of streams.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666521,"byte_end":8666564,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ * Track which source stream the value was received from.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666565,"byte_end":8666625,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ * Handle inserting and removing streams from the set of managed streams at","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666626,"byte_end":8666704,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/   any point during iteration.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666705,"byte_end":8666738,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666739,"byte_end":8666742,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All source streams held by `StreamMap` are indexed using a key. This key is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666743,"byte_end":8666822,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ included with the value when a source stream yields a value. The key is also","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666823,"byte_end":8666903,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ used to remove the stream from the `StreamMap` before the stream has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666904,"byte_end":8666976,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ completed streaming.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8666977,"byte_end":8667001,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667002,"byte_end":8667005,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # `Unpin`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667006,"byte_end":8667019,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667020,"byte_end":8667023,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because the `StreamMap` API moves streams during runtime, both streams and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667024,"byte_end":8667102,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ keys must be `Unpin`. In order to insert a `!Unpin` stream into a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667103,"byte_end":8667172,"line_start":31,"line_end":31,"column_start":1,"column_end":70}},{"value":"/ `StreamMap`, use [`pin!`] to pin the stream to the stack or [`Box::pin`] to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667173,"byte_end":8667252,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ pin the stream in the heap.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667253,"byte_end":8667284,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667285,"byte_end":8667288,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667289,"byte_end":8667309,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667310,"byte_end":8667313,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ `StreamMap` is backed by a `Vec<(K, V)>`. There is no guarantee that this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667314,"byte_end":8667391,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ internal implementation detail will persist in future versions, but it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667392,"byte_end":8667469,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ important to know the runtime implications. In general, `StreamMap` works","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667470,"byte_end":8667547,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/ best with a \"smallish\" number of streams as all entries are scanned on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667548,"byte_end":8667622,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ insert, remove, and polling. In cases where a large number of streams need","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667623,"byte_end":8667701,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ to be merged, it may be advisable to use tasks sending values on a shared","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667702,"byte_end":8667779,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ [`mpsc`] channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667780,"byte_end":8667801,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667802,"byte_end":8667805,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`StreamExt::merge`]: crate::stream::StreamExt::merge","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667806,"byte_end":8667863,"line_start":45,"line_end":45,"column_start":1,"column_end":58}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667864,"byte_end":8667895,"line_start":46,"line_end":46,"column_start":1,"column_end":32}},{"value":"/ [`pin!`]: macro@pin","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667896,"byte_end":8667919,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"/ [`Box::pin`]: std::boxed::Box::pin","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667920,"byte_end":8667958,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667959,"byte_end":8667962,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667963,"byte_end":8667977,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667978,"byte_end":8667981,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Merging two streams, then remove them after receiving the first value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8667982,"byte_end":8668055,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668056,"byte_end":8668059,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668060,"byte_end":8668067,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::stream::{StreamExt, StreamMap};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668068,"byte_end":8668114,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668115,"byte_end":8668141,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668142,"byte_end":8668145,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668146,"byte_end":8668164,"line_start":58,"line_end":58,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668165,"byte_end":8668186,"line_start":59,"line_end":59,"column_start":1,"column_end":22}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668187,"byte_end":8668234,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668235,"byte_end":8668282,"line_start":61,"line_end":61,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668283,"byte_end":8668286,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668287,"byte_end":8668320,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668321,"byte_end":8668360,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668361,"byte_end":8668364,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/         // This value will never be received. The send may or may not return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668365,"byte_end":8668445,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/         // `Err` depending on if the remote end closed first or not.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668446,"byte_end":8668518,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/         let _ = tx1.send(2).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668519,"byte_end":8668557,"line_start":68,"line_end":68,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668558,"byte_end":8668569,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668570,"byte_end":8668573,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668574,"byte_end":8668607,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668608,"byte_end":8668647,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/         let _ = tx2.send(4).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668648,"byte_end":8668686,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668687,"byte_end":8668698,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668699,"byte_end":8668702,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668703,"byte_end":8668742,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668743,"byte_end":8668746,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/     // Insert both streams","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668747,"byte_end":8668777,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/     map.insert(\"one\", rx1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668778,"byte_end":8668809,"line_start":79,"line_end":79,"column_start":1,"column_end":32}},{"value":"/     map.insert(\"two\", rx2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668810,"byte_end":8668841,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668842,"byte_end":8668845,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     // Read twice","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668846,"byte_end":8668867,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/     for _ in 0..2 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668868,"byte_end":8668891,"line_start":83,"line_end":83,"column_start":1,"column_end":24}},{"value":"/         let (key, val) = map.next().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668892,"byte_end":8668947,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668948,"byte_end":8668951,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/         if key == \"one\" {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668952,"byte_end":8668981,"line_start":86,"line_end":86,"column_start":1,"column_end":30}},{"value":"/             assert_eq!(val, 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8668982,"byte_end":8669017,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669018,"byte_end":8669038,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/             assert_eq!(val, 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669039,"byte_end":8669074,"line_start":89,"line_end":89,"column_start":1,"column_end":36}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669075,"byte_end":8669088,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669089,"byte_end":8669092,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         // Remove the stream to prevent reading the next value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669093,"byte_end":8669159,"line_start":92,"line_end":92,"column_start":1,"column_end":67}},{"value":"/         map.remove(key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669160,"byte_end":8669188,"line_start":93,"line_end":93,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669189,"byte_end":8669198,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669199,"byte_end":8669204,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669205,"byte_end":8669212,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669213,"byte_end":8669216,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This example models a read-only client to a chat system with channels. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669217,"byte_end":8669295,"line_start":98,"line_end":98,"column_start":1,"column_end":79}},{"value":"/ client sends commands to join and leave channels. `StreamMap` is used to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669296,"byte_end":8669372,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ manage active channel subscriptions.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669373,"byte_end":8669413,"line_start":100,"line_end":100,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669414,"byte_end":8669417,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ For simplicity, messages are displayed with `println!`, but they could be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669418,"byte_end":8669495,"line_start":102,"line_end":102,"column_start":1,"column_end":78}},{"value":"/ sent to the client over a socket.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669496,"byte_end":8669533,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669534,"byte_end":8669537,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669538,"byte_end":8669551,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/ use tokio::stream::{Stream, StreamExt, StreamMap};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669552,"byte_end":8669606,"line_start":106,"line_end":106,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669607,"byte_end":8669610,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669611,"byte_end":8669629,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/     Join(String),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669630,"byte_end":8669651,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/     Leave(String),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669652,"byte_end":8669674,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669675,"byte_end":8669680,"line_start":111,"line_end":111,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669681,"byte_end":8669684,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ fn commands() -> impl Stream<Item = Command> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669685,"byte_end":8669735,"line_start":113,"line_end":113,"column_start":1,"column_end":51}},{"value":"/     // Streams in user commands by parsing `stdin`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669736,"byte_end":8669791,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669792,"byte_end":8669822,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669823,"byte_end":8669828,"line_start":116,"line_end":116,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669829,"byte_end":8669832,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Join a channel, returns a stream of messages received on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669833,"byte_end":8669909,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ fn join(channel: &str) -> impl Stream<Item = String> + Unpin {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669910,"byte_end":8669976,"line_start":119,"line_end":119,"column_start":1,"column_end":67}},{"value":"/     // left as an exercise to the reader","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8669977,"byte_end":8670021,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ # tokio::stream::pending()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670022,"byte_end":8670052,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670053,"byte_end":8670058,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670059,"byte_end":8670062,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670063,"byte_end":8670081,"line_start":124,"line_end":124,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670082,"byte_end":8670103,"line_start":125,"line_end":125,"column_start":1,"column_end":22}},{"value":"/     let mut channels = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670104,"byte_end":8670148,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670149,"byte_end":8670152,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/     // Input commands (join / leave channels).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670153,"byte_end":8670203,"line_start":128,"line_end":128,"column_start":1,"column_end":51}},{"value":"/     let cmds = commands();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670204,"byte_end":8670234,"line_start":129,"line_end":129,"column_start":1,"column_end":31}},{"value":"/     tokio::pin!(cmds);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670235,"byte_end":8670261,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670262,"byte_end":8670265,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670266,"byte_end":8670280,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/         tokio::select! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670281,"byte_end":8670309,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/             Some(cmd) = cmds.next() => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670310,"byte_end":8670354,"line_start":134,"line_end":134,"column_start":1,"column_end":45}},{"value":"/                 match cmd {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670355,"byte_end":8670386,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/                     Command::Join(chan) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670387,"byte_end":8670435,"line_start":136,"line_end":136,"column_start":1,"column_end":49}},{"value":"/                         // Join the channel and add it to the `channels`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670436,"byte_end":8670512,"line_start":137,"line_end":137,"column_start":1,"column_end":77}},{"value":"/                         // stream map","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670513,"byte_end":8670554,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/                         let msgs = join(&chan);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670555,"byte_end":8670606,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/                         channels.insert(chan, msgs);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670607,"byte_end":8670663,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"/                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670664,"byte_end":8670689,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"/                     Command::Leave(chan) => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670690,"byte_end":8670739,"line_start":142,"line_end":142,"column_start":1,"column_end":50}},{"value":"/                         channels.remove(&chan);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670740,"byte_end":8670791,"line_start":143,"line_end":143,"column_start":1,"column_end":52}},{"value":"/                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670792,"byte_end":8670817,"line_start":144,"line_end":144,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670818,"byte_end":8670839,"line_start":145,"line_end":145,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670840,"byte_end":8670857,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/             Some((chan, msg)) = channels.next() => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670858,"byte_end":8670914,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/                 // Received a message, display it on stdout with the channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670915,"byte_end":8670995,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/                 // it originated from.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8670996,"byte_end":8671038,"line_start":149,"line_end":149,"column_start":1,"column_end":43}},{"value":"/                 println!(\"{}: {}\", chan, msg);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671039,"byte_end":8671089,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671090,"byte_end":8671107,"line_start":151,"line_end":151,"column_start":1,"column_end":18}},{"value":"/             // Both the `commands` stream and the `channels` stream are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671108,"byte_end":8671183,"line_start":152,"line_end":152,"column_start":1,"column_end":76}},{"value":"/             // complete. There is no more work to do, so leave the loop.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671184,"byte_end":8671260,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/             else => break,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671261,"byte_end":8671291,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671292,"byte_end":8671305,"line_start":155,"line_end":155,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671306,"byte_end":8671315,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671316,"byte_end":8671321,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671322,"byte_end":8671329,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671849,"byte_end":8671852,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamMap<K, V>>::new","value":"fn () -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671481,"byte_end":8671514,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671519,"byte_end":8671522,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The stream map is initially created with a capacity of `0`, so it will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671527,"byte_end":8671601,"line_start":168,"line_end":168,"column_start":5,"column_end":79}},{"value":"/ not allocate until it is first inserted into.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671606,"byte_end":8671655,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671660,"byte_end":8671663,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671668,"byte_end":8671682,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671687,"byte_end":8671690,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671695,"byte_end":8671702,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671707,"byte_end":8671751,"line_start":174,"line_end":174,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671756,"byte_end":8671759,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671764,"byte_end":8671825,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671830,"byte_end":8671837,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672357,"byte_end":8672370,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<StreamMap<K, V>>::with_capacity","value":"fn (capacity: usize) -> StreamMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `StreamMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `StreamMap` with the specified capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671925,"byte_end":8671986,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671991,"byte_end":8671994,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The stream map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671999,"byte_end":8672075,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ reallocating. If `capacity` is 0, the stream map will not allocate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672080,"byte_end":8672151,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672156,"byte_end":8672159,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672164,"byte_end":8672178,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672183,"byte_end":8672186,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672191,"byte_end":8672198,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672203,"byte_end":8672247,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672252,"byte_end":8672255,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<&str, Pending<()>> = StreamMap::with_capacity(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672260,"byte_end":8672333,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672338,"byte_end":8672345,"line_start":193,"line_end":193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672988,"byte_end":8672992,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"keys","qualname":"<StreamMap<K, V>>::keys","value":"fn (&self) -> impl Iterator<Item = &K>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in arbitrary order.","sig":null,"attributes":[{"value":"/ Returns an iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672501,"byte_end":8672562,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672567,"byte_end":8672570,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a K.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672575,"byte_end":8672614,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672619,"byte_end":8672622,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672627,"byte_end":8672641,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672646,"byte_end":8672649,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672654,"byte_end":8672661,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672666,"byte_end":8672710,"line_start":207,"line_end":207,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672715,"byte_end":8672718,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672723,"byte_end":8672758,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672763,"byte_end":8672766,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672771,"byte_end":8672809,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672814,"byte_end":8672845,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672850,"byte_end":8672881,"line_start":213,"line_end":213,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672886,"byte_end":8672889,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672894,"byte_end":8672921,"line_start":215,"line_end":215,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672926,"byte_end":8672954,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672959,"byte_end":8672964,"line_start":217,"line_end":217,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8672969,"byte_end":8672976,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673576,"byte_end":8673582,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"values","qualname":"<StreamMap<K, V>>::values","value":"fn (&self) -> impl Iterator<Item = &V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673085,"byte_end":8673140,"line_start":223,"line_end":223,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673145,"byte_end":8673148,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a V.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673153,"byte_end":8673192,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673197,"byte_end":8673200,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673205,"byte_end":8673219,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673224,"byte_end":8673227,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673232,"byte_end":8673239,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673244,"byte_end":8673288,"line_start":230,"line_end":230,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673293,"byte_end":8673296,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673301,"byte_end":8673336,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673341,"byte_end":8673344,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673349,"byte_end":8673387,"line_start":234,"line_end":234,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673392,"byte_end":8673423,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673428,"byte_end":8673459,"line_start":236,"line_end":236,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673464,"byte_end":8673467,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673472,"byte_end":8673504,"line_start":238,"line_end":238,"column_start":5,"column_end":37}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673509,"byte_end":8673542,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673547,"byte_end":8673552,"line_start":240,"line_end":240,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673557,"byte_end":8673564,"line_start":241,"line_end":241,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674182,"byte_end":8674192,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<StreamMap<K, V>>::values_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673675,"byte_end":8673738,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673743,"byte_end":8673746,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is &'a mut V.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673751,"byte_end":8673794,"line_start":248,"line_end":248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673799,"byte_end":8673802,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673807,"byte_end":8673821,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673826,"byte_end":8673829,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673834,"byte_end":8673841,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673846,"byte_end":8673890,"line_start":253,"line_end":253,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673895,"byte_end":8673898,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673903,"byte_end":8673938,"line_start":255,"line_end":255,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673943,"byte_end":8673946,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673951,"byte_end":8673989,"line_start":257,"line_end":257,"column_start":5,"column_end":43}},{"value":"/ map.insert(\"b\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8673994,"byte_end":8674025,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ map.insert(\"c\", pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674030,"byte_end":8674061,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674066,"byte_end":8674069,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ for stream in map.values_mut() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674074,"byte_end":8674110,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/     println!(\"{:?}\", stream);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674115,"byte_end":8674148,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674153,"byte_end":8674158,"line_start":263,"line_end":263,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674163,"byte_end":8674170,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674770,"byte_end":8674778,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"capacity","qualname":"<StreamMap<K, V>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of streams the map can hold without reallocating.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674297,"byte_end":8674369,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674374,"byte_end":8674377,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `StreamMap` might be able to hold","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674382,"byte_end":8674453,"line_start":271,"line_end":271,"column_start":5,"column_end":76}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674458,"byte_end":8674524,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674529,"byte_end":8674532,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674537,"byte_end":8674551,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674556,"byte_end":8674559,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674564,"byte_end":8674571,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, Pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674576,"byte_end":8674620,"line_start":277,"line_end":277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674625,"byte_end":8674628,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let map: StreamMap<i32, Pending<()>> = StreamMap::with_capacity(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674633,"byte_end":8674706,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674711,"byte_end":8674746,"line_start":280,"line_end":280,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674751,"byte_end":8674758,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675154,"byte_end":8675157,"line_start":298,"line_end":298,"column_start":12,"column_end":15},"name":"len","qualname":"<StreamMap<K, V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams in the map.","sig":null,"attributes":[{"value":"/ Returns the number of streams in the map.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674840,"byte_end":8674885,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674890,"byte_end":8674893,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674898,"byte_end":8674912,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674917,"byte_end":8674920,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674925,"byte_end":8674932,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674937,"byte_end":8674981,"line_start":291,"line_end":291,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674986,"byte_end":8674989,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8674994,"byte_end":8675027,"line_start":293,"line_end":293,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675032,"byte_end":8675059,"line_start":294,"line_end":294,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675064,"byte_end":8675098,"line_start":295,"line_end":295,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675103,"byte_end":8675130,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675135,"byte_end":8675142,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675508,"byte_end":8675516,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<StreamMap<K, V>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675214,"byte_end":8675265,"line_start":302,"line_end":302,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675270,"byte_end":8675273,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675278,"byte_end":8675292,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675297,"byte_end":8675300,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675305,"byte_end":8675312,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675317,"byte_end":8675351,"line_start":307,"line_end":307,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675356,"byte_end":8675359,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675364,"byte_end":8675395,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675400,"byte_end":8675426,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675431,"byte_end":8675452,"line_start":311,"line_end":311,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675457,"byte_end":8675484,"line_start":312,"line_end":312,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675489,"byte_end":8675496,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675928,"byte_end":8675933,"line_start":331,"line_end":331,"column_start":12,"column_end":17},"name":"clear","qualname":"<StreamMap<K, V>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-stream pairs. Keeps the allocated\n memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-stream pairs. Keeps the allocated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675577,"byte_end":8675647,"line_start":318,"line_end":318,"column_start":5,"column_end":75}},{"value":"/ memory for reuse.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675652,"byte_end":8675673,"line_start":319,"line_end":319,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675678,"byte_end":8675681,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675686,"byte_end":8675700,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675705,"byte_end":8675708,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675713,"byte_end":8675720,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675725,"byte_end":8675769,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675774,"byte_end":8675777,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let mut a = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675782,"byte_end":8675815,"line_start":326,"line_end":326,"column_start":5,"column_end":38}},{"value":"/ a.insert(1, pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675820,"byte_end":8675854,"line_start":327,"line_end":327,"column_start":5,"column_end":39}},{"value":"/ a.clear();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675859,"byte_end":8675873,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675878,"byte_end":8675904,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675909,"byte_end":8675916,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676608,"byte_end":8676614,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"insert","qualname":"<StreamMap<K, V>>::insert","value":"fn (&mut self, k: K, stream: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-stream pair into the map.","sig":null,"attributes":[{"value":"/ Insert a key-stream pair into the map.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8675988,"byte_end":8676030,"line_start":335,"line_end":335,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676035,"byte_end":8676038,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, `None` is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676043,"byte_end":8676108,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676113,"byte_end":8676116,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the new `stream` replaces the old","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676121,"byte_end":8676196,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ one and the old stream is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676201,"byte_end":8676240,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676245,"byte_end":8676248,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676253,"byte_end":8676267,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676272,"byte_end":8676275,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676280,"byte_end":8676287,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676292,"byte_end":8676336,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676341,"byte_end":8676344,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676349,"byte_end":8676384,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676389,"byte_end":8676392,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ assert!(map.insert(37, pending::<i32>()).is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676397,"byte_end":8676453,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ assert!(!map.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676458,"byte_end":8676487,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676492,"byte_end":8676495,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, pending());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676500,"byte_end":8676530,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/ assert!(map.insert(37, pending()).is_some());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676535,"byte_end":8676584,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676589,"byte_end":8676596,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677345,"byte_end":8677351,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"remove","qualname":"<StreamMap<K, V>>::remove","value":"fn <Q> (&mut self, k: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stream at the key if the key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stream at the key if the key was previously in the map.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676793,"byte_end":8676894,"line_start":365,"line_end":365,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676899,"byte_end":8676902,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676907,"byte_end":8676981,"line_start":367,"line_end":367,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8676986,"byte_end":8677050,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677055,"byte_end":8677058,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677063,"byte_end":8677077,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677082,"byte_end":8677085,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677090,"byte_end":8677097,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677102,"byte_end":8677146,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677151,"byte_end":8677154,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677159,"byte_end":8677194,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677199,"byte_end":8677235,"line_start":376,"line_end":376,"column_start":5,"column_end":41}},{"value":"/ assert!(map.remove(&1).is_some());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677240,"byte_end":8677278,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ assert!(map.remove(&1).is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677283,"byte_end":8677321,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677326,"byte_end":8677333,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678185,"byte_end":8678197,"line_start":409,"line_end":409,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<StreamMap<K, V>>::contains_key","value":"fn <Q> (&self, k: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a stream for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a stream for the specified key.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677653,"byte_end":8677723,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677728,"byte_end":8677731,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but `Hash` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677736,"byte_end":8677810,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/ `Eq` on the borrowed form must match those for the key type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677815,"byte_end":8677879,"line_start":397,"line_end":397,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677884,"byte_end":8677887,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677892,"byte_end":8677906,"line_start":399,"line_end":399,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677911,"byte_end":8677914,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677919,"byte_end":8677926,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{StreamMap, pending};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677931,"byte_end":8677975,"line_start":402,"line_end":402,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677980,"byte_end":8677983,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let mut map = StreamMap::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8677988,"byte_end":8678023,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/ map.insert(1, pending::<i32>());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678028,"byte_end":8678064,"line_start":405,"line_end":405,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678069,"byte_end":8678112,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678117,"byte_end":8678161,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678166,"byte_end":8678173,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7762},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681137,"byte_end":8681141,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":7764},{"krate":0,"index":7765}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7717},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8682703,"byte_end":8682712,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":7720},{"krate":0,"index":7721}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684516,"byte_end":8684523,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":4638}],"decl_id":null,"docs":" Future for the [`try_next`](super::StreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::StreamExt::try_next) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684352,"byte_end":8684419,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684437,"byte_end":8684504,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7680},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685372,"byte_end":8685376,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":7682},{"krate":0,"index":7683}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7631},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687219,"byte_end":8687228,"line_start":11,"line_end":11,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":7634},{"krate":0,"index":7635},{"krate":0,"index":7636}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7622},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/timeout.rs","byte_start":8721092,"byte_end":8721099,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::stream::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7624},{"krate":0,"index":7625},{"krate":0,"index":7626},{"krate":0,"index":7627}],"decl_id":null,"docs":" Stream returned by the [`timeout`](super::StreamExt::timeout) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618158,"byte_end":8618167,"line_start":81,"line_end":81,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4536},{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4547},{"krate":0,"index":4548},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4559},{"krate":0,"index":4562},{"krate":0,"index":4564}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618047,"byte_end":8618121,"line_start":79,"line_end":79,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618122,"byte_end":8618147,"line_start":80,"line_end":80,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4532},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619237,"byte_end":8619241,"line_start":113,"line_end":113,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Consumes and returns the next value in the stream or `None` if the\n stream is finished.","sig":null,"attributes":[{"value":"/ Consumes and returns the next value in the stream or `None` if the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618182,"byte_end":8618252,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ stream is finished.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618257,"byte_end":8618280,"line_start":83,"line_end":83,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618285,"byte_end":8618288,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618293,"byte_end":8618311,"line_start":85,"line_end":85,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618316,"byte_end":8618319,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618324,"byte_end":8618337,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ async fn next(&mut self) -> Option<Self::Item>;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618342,"byte_end":8618393,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618398,"byte_end":8618405,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618410,"byte_end":8618413,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618418,"byte_end":8618486,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618491,"byte_end":8618566,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618571,"byte_end":8618646,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618651,"byte_end":8618705,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618710,"byte_end":8618785,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618790,"byte_end":8618800,"line_start":96,"line_end":96,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618805,"byte_end":8618808,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618813,"byte_end":8618827,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618832,"byte_end":8618835,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618840,"byte_end":8618847,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618852,"byte_end":8618872,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618877,"byte_end":8618900,"line_start":102,"line_end":102,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618905,"byte_end":8618946,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618951,"byte_end":8618954,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618959,"byte_end":8619000,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619005,"byte_end":8619008,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619013,"byte_end":8619058,"line_start":107,"line_end":107,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619063,"byte_end":8619108,"line_start":108,"line_end":108,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619113,"byte_end":8619158,"line_start":109,"line_end":109,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619163,"byte_end":8619205,"line_start":110,"line_end":110,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619210,"byte_end":8619217,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619222,"byte_end":8619229,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4533},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620312,"byte_end":8620320,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::StreamExt::try_next","value":"fn <T, E> (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Consumes and returns the next item in the stream. If an error is\n encountered before the next item, the error is returned instead.","sig":null,"attributes":[{"value":"/ Consumes and returns the next item in the stream. If an error is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619343,"byte_end":8619411,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ encountered before the next item, the error is returned instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619416,"byte_end":8619484,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619489,"byte_end":8619492,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619497,"byte_end":8619515,"line_start":123,"line_end":123,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619520,"byte_end":8619523,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619528,"byte_end":8619541,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ async fn try_next(&mut self) -> Result<Option<T>, E>;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619546,"byte_end":8619603,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619608,"byte_end":8619615,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619620,"byte_end":8619623,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`](StreamExt::next) combinator,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619628,"byte_end":8619692,"line_start":129,"line_end":129,"column_start":5,"column_end":69}},{"value":"/ but returns a [`Result<Option<T>, E>`](Result) rather than","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619697,"byte_end":8619759,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ an [`Option<Result<T, E>>`](Option), making for easy use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619764,"byte_end":8619824,"line_start":131,"line_end":131,"column_start":5,"column_end":65}},{"value":"/ with the [`?`](std::ops::Try) operator.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619829,"byte_end":8619872,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619877,"byte_end":8619880,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619885,"byte_end":8619899,"line_start":134,"line_end":134,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619904,"byte_end":8619907,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619912,"byte_end":8619919,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619924,"byte_end":8619944,"line_start":137,"line_end":137,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619949,"byte_end":8619972,"line_start":138,"line_end":138,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8619977,"byte_end":8620018,"line_start":139,"line_end":139,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620023,"byte_end":8620026,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(1), Ok(2), Err(\"nope\")]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620031,"byte_end":8620098,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620103,"byte_end":8620106,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620111,"byte_end":8620164,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620169,"byte_end":8620222,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(\"nope\"));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620227,"byte_end":8620280,"line_start":145,"line_end":145,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620285,"byte_end":8620292,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620297,"byte_end":8620304,"line_start":147,"line_end":147,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621388,"byte_end":8621391,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620464,"byte_end":8620539,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620544,"byte_end":8620567,"line_start":156,"line_end":156,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620572,"byte_end":8620575,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620580,"byte_end":8620652,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620657,"byte_end":8620721,"line_start":159,"line_end":159,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620726,"byte_end":8620763,"line_start":160,"line_end":160,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620768,"byte_end":8620771,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620776,"byte_end":8620852,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620857,"byte_end":8620928,"line_start":163,"line_end":163,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620933,"byte_end":8620954,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620959,"byte_end":8620962,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620967,"byte_end":8620981,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620986,"byte_end":8620989,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8620994,"byte_end":8621001,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621006,"byte_end":8621026,"line_start":169,"line_end":169,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621031,"byte_end":8621054,"line_start":170,"line_end":170,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621059,"byte_end":8621100,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621105,"byte_end":8621108,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621113,"byte_end":8621150,"line_start":173,"line_end":173,"column_start":5,"column_end":42}},{"value":"/ let mut stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621155,"byte_end":8621198,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621203,"byte_end":8621206,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621211,"byte_end":8621256,"line_start":176,"line_end":176,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621261,"byte_end":8621306,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621311,"byte_end":8621356,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621361,"byte_end":8621368,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621373,"byte_end":8621380,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623766,"byte_end":8623771,"line_start":254,"line_end":254,"column_start":8,"column_end":13},"name":"merge","qualname":"::stream::StreamExt::merge","value":"fn <U> (self, other: U) -> Merge<Self, U>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Combine two streams into one by interleaving the output of both as it\n is produced.","sig":null,"attributes":[{"value":"/ Combine two streams into one by interleaving the output of both as it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621535,"byte_end":8621608,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ is produced.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621613,"byte_end":8621629,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621634,"byte_end":8621637,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Values are produced from the merged stream in the order they arrive from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621642,"byte_end":8621718,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ the two source streams. If both source streams provide values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621723,"byte_end":8621788,"line_start":193,"line_end":193,"column_start":5,"column_end":70}},{"value":"/ simultaneously, the merge stream alternates between them. This provides","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621793,"byte_end":8621868,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/ some level of fairness.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621873,"byte_end":8621900,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621905,"byte_end":8621908,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The merged stream completes once **both** source streams complete. When","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621913,"byte_end":8621988,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ one source stream completes before the other, the merge stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8621993,"byte_end":8622059,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ exclusively polls the remaining stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622064,"byte_end":8622107,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622112,"byte_end":8622115,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622120,"byte_end":8622134,"line_start":201,"line_end":201,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622139,"byte_end":8622142,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622147,"byte_end":8622154,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622159,"byte_end":8622192,"line_start":204,"line_end":204,"column_start":5,"column_end":38}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622197,"byte_end":8622223,"line_start":205,"line_end":205,"column_start":5,"column_end":31}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622228,"byte_end":8622248,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622253,"byte_end":8622256,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622261,"byte_end":8622289,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622294,"byte_end":8622297,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # /*","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622302,"byte_end":8622310,"line_start":210,"line_end":210,"column_start":5,"column_end":13}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622315,"byte_end":8622333,"line_start":211,"line_end":211,"column_start":5,"column_end":23}},{"value":"/ # */","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622338,"byte_end":8622346,"line_start":212,"line_end":212,"column_start":5,"column_end":13}},{"value":"/ # #[tokio::main(basic_scheduler)]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622351,"byte_end":8622388,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622393,"byte_end":8622414,"line_start":214,"line_end":214,"column_start":5,"column_end":26}},{"value":"/ # time::pause();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622419,"byte_end":8622439,"line_start":215,"line_end":215,"column_start":5,"column_end":25}},{"value":"/     let (mut tx1, rx1) = mpsc::channel(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622444,"byte_end":8622491,"line_start":216,"line_end":216,"column_start":5,"column_end":52}},{"value":"/     let (mut tx2, rx2) = mpsc::channel(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622496,"byte_end":8622543,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622548,"byte_end":8622551,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/     let mut rx = rx1.merge(rx2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622556,"byte_end":8622592,"line_start":219,"line_end":219,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622597,"byte_end":8622600,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622605,"byte_end":8622638,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/         // Send some values immediately","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622643,"byte_end":8622686,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622691,"byte_end":8622730,"line_start":223,"line_end":223,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622735,"byte_end":8622774,"line_start":224,"line_end":224,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622779,"byte_end":8622782,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/         // Let the other task send values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622787,"byte_end":8622832,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/         time::delay_for(Duration::from_millis(20)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622837,"byte_end":8622898,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622903,"byte_end":8622906,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/         tx1.send(4).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622911,"byte_end":8622950,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622955,"byte_end":8622966,"line_start":230,"line_end":230,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622971,"byte_end":8622974,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8622979,"byte_end":8623012,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/         // Wait for the first task to send values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623017,"byte_end":8623070,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/         time::delay_for(Duration::from_millis(5)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623075,"byte_end":8623135,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623140,"byte_end":8623143,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/         tx2.send(3).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623148,"byte_end":8623187,"line_start":236,"line_end":236,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623192,"byte_end":8623195,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/         time::delay_for(Duration::from_millis(25)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623200,"byte_end":8623261,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623266,"byte_end":8623269,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/         // Send the final value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623274,"byte_end":8623309,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/         tx2.send(5).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623314,"byte_end":8623353,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623358,"byte_end":8623369,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623374,"byte_end":8623377,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/    assert_eq!(1, rx.next().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623382,"byte_end":8623429,"line_start":244,"line_end":244,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(2, rx.next().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623434,"byte_end":8623481,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(3, rx.next().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623486,"byte_end":8623533,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(4, rx.next().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623538,"byte_end":8623585,"line_start":247,"line_end":247,"column_start":5,"column_end":52}},{"value":"/    assert_eq!(5, rx.next().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623590,"byte_end":8623637,"line_start":248,"line_end":248,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623642,"byte_end":8623645,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/    // The merged stream is consumed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623650,"byte_end":8623689,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/    assert!(rx.next().await.is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623694,"byte_end":8623736,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623741,"byte_end":8623746,"line_start":252,"line_end":252,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623751,"byte_end":8623758,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625076,"byte_end":8625082,"line_start":292,"line_end":292,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::StreamExt::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8623927,"byte_end":8623999,"line_start":262,"line_end":262,"column_start":5,"column_end":77}},{"value":"/ predicate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624004,"byte_end":8624018,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624023,"byte_end":8624026,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624031,"byte_end":8624106,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624111,"byte_end":8624157,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624162,"byte_end":8624234,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ predicate resolves to `false`, then the value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624239,"byte_end":8624288,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624293,"byte_end":8624351,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624356,"byte_end":8624359,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624364,"byte_end":8624440,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter`] method in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624445,"byte_end":8624517,"line_start":272,"line_end":272,"column_start":5,"column_end":77}},{"value":"/ standard library.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624522,"byte_end":8624543,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624548,"byte_end":8624551,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624556,"byte_end":8624570,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624575,"byte_end":8624578,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624583,"byte_end":8624590,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624595,"byte_end":8624615,"line_start":278,"line_end":278,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624620,"byte_end":8624643,"line_start":279,"line_end":279,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624648,"byte_end":8624689,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624694,"byte_end":8624697,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624702,"byte_end":8624739,"line_start":282,"line_end":282,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter(|x| x % 2 == 0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624744,"byte_end":8624794,"line_start":283,"line_end":283,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624799,"byte_end":8624802,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(2), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624807,"byte_end":8624851,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(4), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624856,"byte_end":8624900,"line_start":286,"line_end":286,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(6), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624905,"byte_end":8624949,"line_start":287,"line_end":287,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(8), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8624954,"byte_end":8624998,"line_start":288,"line_end":288,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625003,"byte_end":8625044,"line_start":289,"line_end":289,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625049,"byte_end":8625056,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625061,"byte_end":8625068,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626454,"byte_end":8626464,"line_start":330,"line_end":330,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::StreamExt::filter_map","value":"fn <T, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625233,"byte_end":8625308,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided closure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625313,"byte_end":8625376,"line_start":301,"line_end":301,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625381,"byte_end":8625384,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625389,"byte_end":8625464,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the predicate `f` resolves to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625469,"byte_end":8625521,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625526,"byte_end":8625602,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625607,"byte_end":8625672,"line_start":306,"line_end":306,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625677,"byte_end":8625680,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625685,"byte_end":8625761,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to [`Iterator::filter_map`] method in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625766,"byte_end":8625842,"line_start":309,"line_end":309,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625847,"byte_end":8625868,"line_start":310,"line_end":310,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625873,"byte_end":8625876,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625881,"byte_end":8625895,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625900,"byte_end":8625907,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625912,"byte_end":8625932,"line_start":314,"line_end":314,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625937,"byte_end":8625960,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8625965,"byte_end":8626006,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626011,"byte_end":8626014,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=8);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626019,"byte_end":8626056,"line_start":318,"line_end":318,"column_start":5,"column_end":42}},{"value":"/ let mut evens = stream.filter_map(|x| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626061,"byte_end":8626104,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626109,"byte_end":8626160,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626165,"byte_end":8626172,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626177,"byte_end":8626180,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626185,"byte_end":8626229,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(5), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626234,"byte_end":8626278,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(7), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626283,"byte_end":8626327,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(Some(9), evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626332,"byte_end":8626376,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, evens.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626381,"byte_end":8626422,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626427,"byte_end":8626434,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626439,"byte_end":8626446,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628596,"byte_end":8628600,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Creates a stream which ends after the first `None`.","sig":null,"attributes":[{"value":"/ Creates a stream which ends after the first `None`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626628,"byte_end":8626683,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626688,"byte_end":8626691,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ After a stream returns `None`, behavior is undefined. Future calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626696,"byte_end":8626769,"line_start":340,"line_end":340,"column_start":5,"column_end":78}},{"value":"/ `poll_next` may or may not return `Some(T)` again or they may panic.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626774,"byte_end":8626846,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ `fuse()` adapts a stream, ensuring that after `None` is given, it will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626851,"byte_end":8626925,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ return `None` forever.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626930,"byte_end":8626956,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626961,"byte_end":8626964,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626969,"byte_end":8626983,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626988,"byte_end":8626991,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8626996,"byte_end":8627003,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{Stream, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627008,"byte_end":8627051,"line_start":348,"line_end":348,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627056,"byte_end":8627059,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627064,"byte_end":8627086,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627091,"byte_end":8627126,"line_start":351,"line_end":351,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627131,"byte_end":8627134,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ // a stream which alternates between Some and None","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627139,"byte_end":8627193,"line_start":353,"line_end":353,"column_start":5,"column_end":59}},{"value":"/ struct Alternate {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627198,"byte_end":8627220,"line_start":354,"line_end":354,"column_start":5,"column_end":27}},{"value":"/     state: i32,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627225,"byte_end":8627244,"line_start":355,"line_end":355,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627249,"byte_end":8627254,"line_start":356,"line_end":356,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627259,"byte_end":8627262,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ impl Stream for Alternate {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627267,"byte_end":8627298,"line_start":358,"line_end":358,"column_start":5,"column_end":36}},{"value":"/     type Item = i32;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627303,"byte_end":8627327,"line_start":359,"line_end":359,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627332,"byte_end":8627335,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     fn poll_next(mut self: Pin<&mut Self>, _cx: &mut Context<'_>) -> Poll<Option<i32>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627340,"byte_end":8627432,"line_start":361,"line_end":361,"column_start":5,"column_end":97}},{"value":"/         let val = self.state;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627437,"byte_end":8627470,"line_start":362,"line_end":362,"column_start":5,"column_end":38}},{"value":"/         self.state = self.state + 1;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627475,"byte_end":8627515,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627520,"byte_end":8627523,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/         // if it's even, Some(i32), else None","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627528,"byte_end":8627577,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/         if val % 2 == 0 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627582,"byte_end":8627611,"line_start":366,"line_end":366,"column_start":5,"column_end":34}},{"value":"/             Poll::Ready(Some(val))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627616,"byte_end":8627654,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/         } else {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627659,"byte_end":8627679,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"/             Poll::Ready(None)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627684,"byte_end":8627717,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627722,"byte_end":8627735,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627740,"byte_end":8627749,"line_start":371,"line_end":371,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627754,"byte_end":8627759,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627764,"byte_end":8627767,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627772,"byte_end":8627790,"line_start":374,"line_end":374,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627795,"byte_end":8627816,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/     let mut stream = Alternate { state: 0 };","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627821,"byte_end":8627869,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627874,"byte_end":8627877,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/     // the stream goes back and forth","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627882,"byte_end":8627923,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(stream.next().await, Some(0));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627928,"byte_end":8627977,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8627982,"byte_end":8628028,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628033,"byte_end":8628082,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628087,"byte_end":8628133,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628138,"byte_end":8628141,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     // however, once it is fused","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628146,"byte_end":8628182,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/     let mut stream = stream.fuse();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628187,"byte_end":8628226,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628231,"byte_end":8628234,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628239,"byte_end":8628288,"line_start":387,"line_end":387,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628293,"byte_end":8628339,"line_start":388,"line_end":388,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628344,"byte_end":8628347,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/     // it will always return `None` after the first time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628352,"byte_end":8628413,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628418,"byte_end":8628464,"line_start":391,"line_end":391,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628469,"byte_end":8628515,"line_start":392,"line_end":392,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628520,"byte_end":8628566,"line_start":393,"line_end":393,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628571,"byte_end":8628576,"line_start":394,"line_end":394,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628581,"byte_end":8628588,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4547},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629336,"byte_end":8629340,"line_start":423,"line_end":423,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628693,"byte_end":8628764,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628769,"byte_end":8628772,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628777,"byte_end":8628850,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628855,"byte_end":8628890,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628895,"byte_end":8628898,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628903,"byte_end":8628917,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628922,"byte_end":8628925,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628930,"byte_end":8628937,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628942,"byte_end":8628962,"line_start":411,"line_end":411,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628967,"byte_end":8628990,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8628995,"byte_end":8629036,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629041,"byte_end":8629044,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629049,"byte_end":8629099,"line_start":415,"line_end":415,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629104,"byte_end":8629107,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629112,"byte_end":8629157,"line_start":417,"line_end":417,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629162,"byte_end":8629207,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629212,"byte_end":8629257,"line_start":419,"line_end":419,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629262,"byte_end":8629304,"line_start":420,"line_end":420,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629309,"byte_end":8629316,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629321,"byte_end":8629328,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4548},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630233,"byte_end":8630243,"line_start":452,"line_end":452,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::StreamExt::take_while","value":"fn <F> (self, f: F) -> TakeWhile<Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided predicate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629446,"byte_end":8629509,"line_start":430,"line_end":430,"column_start":5,"column_end":68}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629514,"byte_end":8629537,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629542,"byte_end":8629545,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629550,"byte_end":8629625,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629630,"byte_end":8629702,"line_start":434,"line_end":434,"column_start":5,"column_end":77}},{"value":"/ returns false it will always return that the stream is done.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629707,"byte_end":8629771,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629776,"byte_end":8629779,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629784,"byte_end":8629798,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629803,"byte_end":8629806,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629811,"byte_end":8629818,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629823,"byte_end":8629843,"line_start":440,"line_end":440,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629848,"byte_end":8629871,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629876,"byte_end":8629917,"line_start":442,"line_end":442,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629922,"byte_end":8629925,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).take_while(|x| *x <= 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8629930,"byte_end":8629996,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630001,"byte_end":8630004,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630009,"byte_end":8630054,"line_start":446,"line_end":446,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(2), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630059,"byte_end":8630104,"line_start":447,"line_end":447,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630109,"byte_end":8630154,"line_start":448,"line_end":448,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630159,"byte_end":8630201,"line_start":449,"line_end":449,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630206,"byte_end":8630213,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630218,"byte_end":8630225,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630940,"byte_end":8630944,"line_start":478,"line_end":478,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Creates a new stream that will skip the `n` first items of the\n underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream that will skip the `n` first items of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630400,"byte_end":8630466,"line_start":460,"line_end":460,"column_start":5,"column_end":71}},{"value":"/ underlying stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630471,"byte_end":8630493,"line_start":461,"line_end":461,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630498,"byte_end":8630501,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630506,"byte_end":8630520,"line_start":463,"line_end":463,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630525,"byte_end":8630528,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630533,"byte_end":8630540,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630545,"byte_end":8630565,"line_start":466,"line_end":466,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630570,"byte_end":8630593,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630598,"byte_end":8630639,"line_start":468,"line_end":468,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630644,"byte_end":8630647,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=10).skip(7);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630652,"byte_end":8630702,"line_start":470,"line_end":470,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630707,"byte_end":8630710,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(8), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630715,"byte_end":8630760,"line_start":472,"line_end":472,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(9), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630765,"byte_end":8630810,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(10), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630815,"byte_end":8630861,"line_start":474,"line_end":474,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630866,"byte_end":8630908,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630913,"byte_end":8630920,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8630925,"byte_end":8630932,"line_start":477,"line_end":477,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631922,"byte_end":8631932,"line_start":508,"line_end":508,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::StreamExt::skip_while","value":"fn <F> (self, f: F) -> SkipWhile<Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Skip elements from the underlying stream while the provided predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements from the underlying stream while the provided predicate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631050,"byte_end":8631123,"line_start":485,"line_end":485,"column_start":5,"column_end":78}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631128,"byte_end":8631151,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631156,"byte_end":8631159,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function, like [`Iterator::skip_while`], will ignore elemets from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631164,"byte_end":8631242,"line_start":488,"line_end":488,"column_start":5,"column_end":83}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631247,"byte_end":8631319,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ returns false, the rest of the elements will be yielded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631324,"byte_end":8631384,"line_start":490,"line_end":490,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631389,"byte_end":8631392,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`Iterator::skip_while`]: std::iter::Iterator::skip_while()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631397,"byte_end":8631460,"line_start":492,"line_end":492,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631465,"byte_end":8631468,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631473,"byte_end":8631487,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631492,"byte_end":8631495,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631500,"byte_end":8631507,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631512,"byte_end":8631532,"line_start":497,"line_end":497,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631537,"byte_end":8631560,"line_start":498,"line_end":498,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631565,"byte_end":8631606,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ let mut stream = stream::iter(vec![1,2,3,4,1]).skip_while(|x| *x < 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631611,"byte_end":8631685,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631690,"byte_end":8631693,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some(3), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631698,"byte_end":8631743,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(4), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631748,"byte_end":8631793,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some(1), stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631798,"byte_end":8631843,"line_start":504,"line_end":504,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631848,"byte_end":8631890,"line_start":505,"line_end":505,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631895,"byte_end":8631902,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8631907,"byte_end":8631914,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633511,"byte_end":8633514,"line_start":563,"line_end":563,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::StreamExt::all","value":"fn <F> (&mut self, f: F) -> AllFuture<'_, Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Tests if every element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if every element of the stream matches a predicate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632089,"byte_end":8632150,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632155,"byte_end":8632158,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ `all()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632163,"byte_end":8632233,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if they all return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632238,"byte_end":8632308,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ `true`, then so does `all`. If any of them return `false`, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632313,"byte_end":8632378,"line_start":520,"line_end":520,"column_start":5,"column_end":70}},{"value":"/ returns `false`. An empty stream returns `true`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632383,"byte_end":8632435,"line_start":521,"line_end":521,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632440,"byte_end":8632443,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ `all()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632448,"byte_end":8632520,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `false`, given that no matter what else happens,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632525,"byte_end":8632599,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ the result will also be `false`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632604,"byte_end":8632640,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632645,"byte_end":8632648,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `true`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632653,"byte_end":8632688,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632693,"byte_end":8632696,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632701,"byte_end":8632715,"line_start":529,"line_end":529,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632720,"byte_end":8632723,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632728,"byte_end":8632744,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632749,"byte_end":8632752,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632757,"byte_end":8632764,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632769,"byte_end":8632789,"line_start":534,"line_end":534,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632794,"byte_end":8632817,"line_start":535,"line_end":535,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632822,"byte_end":8632863,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632868,"byte_end":8632871,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632876,"byte_end":8632898,"line_start":538,"line_end":538,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632903,"byte_end":8632906,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).all(|&x| x > 0).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632911,"byte_end":8632963,"line_start":540,"line_end":540,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632968,"byte_end":8632971,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).all(|&x| x > 2).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8632976,"byte_end":8633029,"line_start":542,"line_end":542,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633034,"byte_end":8633041,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633046,"byte_end":8633053,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633058,"byte_end":8633061,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `false`:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633066,"byte_end":8633100,"line_start":546,"line_end":546,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633105,"byte_end":8633108,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633113,"byte_end":8633120,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633125,"byte_end":8633145,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633150,"byte_end":8633173,"line_start":550,"line_end":550,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633178,"byte_end":8633219,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633224,"byte_end":8633227,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633232,"byte_end":8633254,"line_start":553,"line_end":553,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633259,"byte_end":8633262,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633267,"byte_end":8633303,"line_start":555,"line_end":555,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633308,"byte_end":8633311,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ assert!(!iter.all(|&x| x != 2).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633316,"byte_end":8633358,"line_start":557,"line_end":557,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633363,"byte_end":8633366,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633371,"byte_end":8633430,"line_start":559,"line_end":559,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&3));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633435,"byte_end":8633479,"line_start":560,"line_end":560,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633484,"byte_end":8633491,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633496,"byte_end":8633503,"line_start":562,"line_end":562,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635039,"byte_end":8635042,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::StreamExt::any","value":"fn <F> (&mut self, f: F) -> AnyFuture<'_, Self, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Tests if any element of the stream matches a predicate.","sig":null,"attributes":[{"value":"/ Tests if any element of the stream matches a predicate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633679,"byte_end":8633738,"line_start":571,"line_end":571,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633743,"byte_end":8633746,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ `any()` takes a closure that returns `true` or `false`. It applies","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633751,"byte_end":8633821,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ this closure to each element of the stream, and if any of them return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633826,"byte_end":8633899,"line_start":574,"line_end":574,"column_start":5,"column_end":78}},{"value":"/ `true`, then so does `any()`. If they all return `false`, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633904,"byte_end":8633968,"line_start":575,"line_end":575,"column_start":5,"column_end":69}},{"value":"/ returns `false`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633973,"byte_end":8633993,"line_start":576,"line_end":576,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8633998,"byte_end":8634001,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ `any()` is short-circuiting; in other words, it will stop processing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634006,"byte_end":8634078,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/ as soon as it finds a `true`, given that no matter what else happens,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634083,"byte_end":8634156,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ the result will also be `true`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634161,"byte_end":8634196,"line_start":580,"line_end":580,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634201,"byte_end":8634204,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ An empty stream returns `false`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634209,"byte_end":8634245,"line_start":582,"line_end":582,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634250,"byte_end":8634253,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634258,"byte_end":8634274,"line_start":584,"line_end":584,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634279,"byte_end":8634282,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634287,"byte_end":8634294,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634299,"byte_end":8634319,"line_start":587,"line_end":587,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634324,"byte_end":8634347,"line_start":588,"line_end":588,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634352,"byte_end":8634393,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634398,"byte_end":8634401,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634406,"byte_end":8634428,"line_start":591,"line_end":591,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634433,"byte_end":8634436,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert!(stream::iter(&a).any(|&x| x > 0).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634441,"byte_end":8634493,"line_start":593,"line_end":593,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634498,"byte_end":8634501,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ assert!(!stream::iter(&a).any(|&x| x > 5).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634506,"byte_end":8634559,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634564,"byte_end":8634571,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634576,"byte_end":8634583,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634588,"byte_end":8634591,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Stopping at the first `true`:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634596,"byte_end":8634629,"line_start":599,"line_end":599,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634634,"byte_end":8634637,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634642,"byte_end":8634649,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634654,"byte_end":8634674,"line_start":602,"line_end":602,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634679,"byte_end":8634702,"line_start":603,"line_end":603,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634707,"byte_end":8634748,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634753,"byte_end":8634756,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634761,"byte_end":8634783,"line_start":606,"line_end":606,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634788,"byte_end":8634791,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ let mut iter = stream::iter(&a);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634796,"byte_end":8634832,"line_start":608,"line_end":608,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634837,"byte_end":8634840,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert!(iter.any(|&x| x != 2).await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634845,"byte_end":8634886,"line_start":610,"line_end":610,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634891,"byte_end":8634894,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ // we can still use `iter`, as there are more elements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634899,"byte_end":8634958,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next().await, Some(&2));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8634963,"byte_end":8635007,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635012,"byte_end":8635019,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635024,"byte_end":8635031,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636185,"byte_end":8636190,"line_start":651,"line_end":651,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::StreamExt::chain","value":"fn <U> (self, other: U) -> Chain<Self, U>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Combine two streams into one by first returning all values from the\n first stream then all values from the second stream.","sig":null,"attributes":[{"value":"/ Combine two streams into one by first returning all values from the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635207,"byte_end":8635278,"line_start":624,"line_end":624,"column_start":5,"column_end":76}},{"value":"/ first stream then all values from the second stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635283,"byte_end":8635339,"line_start":625,"line_end":625,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635344,"byte_end":8635347,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ As long as `self` still has values to emit, no values from `other` are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635352,"byte_end":8635426,"line_start":627,"line_end":627,"column_start":5,"column_end":79}},{"value":"/ emitted, even if some are ready.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635431,"byte_end":8635467,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635472,"byte_end":8635475,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635480,"byte_end":8635494,"line_start":630,"line_end":630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635499,"byte_end":8635502,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635507,"byte_end":8635514,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635519,"byte_end":8635560,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635565,"byte_end":8635568,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635573,"byte_end":8635591,"line_start":635,"line_end":635,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635596,"byte_end":8635617,"line_start":636,"line_end":636,"column_start":5,"column_end":26}},{"value":"/     let one = stream::iter(vec![1, 2, 3]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635622,"byte_end":8635668,"line_start":637,"line_end":637,"column_start":5,"column_end":51}},{"value":"/     let two = stream::iter(vec![4, 5, 6]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635673,"byte_end":8635719,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635724,"byte_end":8635727,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/     let mut stream = one.chain(two);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635732,"byte_end":8635772,"line_start":640,"line_end":640,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635777,"byte_end":8635780,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635785,"byte_end":8635834,"line_start":642,"line_end":642,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635839,"byte_end":8635888,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635893,"byte_end":8635942,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(4));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8635947,"byte_end":8635996,"line_start":645,"line_end":645,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636001,"byte_end":8636050,"line_start":646,"line_end":646,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, Some(6));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636055,"byte_end":8636104,"line_start":647,"line_end":647,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636109,"byte_end":8636155,"line_start":648,"line_end":648,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636160,"byte_end":8636165,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636170,"byte_end":8636177,"line_start":650,"line_end":650,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4559},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636783,"byte_end":8636787,"line_start":675,"line_end":675,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::StreamExt::fold","value":"fn <B, F> (self, init: B, f: F) -> FoldFuture<Self, B, F>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" A combinator that applies a function to every element in a stream\n producing a single, final value.","sig":null,"attributes":[{"value":"/ A combinator that applies a function to every element in a stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636346,"byte_end":8636415,"line_start":659,"line_end":659,"column_start":5,"column_end":74}},{"value":"/ producing a single, final value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636420,"byte_end":8636456,"line_start":660,"line_end":660,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636461,"byte_end":8636464,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636469,"byte_end":8636483,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636488,"byte_end":8636504,"line_start":663,"line_end":663,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636509,"byte_end":8636516,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636521,"byte_end":8636541,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636546,"byte_end":8636569,"line_start":666,"line_end":666,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, *};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636574,"byte_end":8636607,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636612,"byte_end":8636615,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ let s = stream::iter(vec![1u8, 2, 3]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636620,"byte_end":8636662,"line_start":669,"line_end":669,"column_start":5,"column_end":47}},{"value":"/ let sum = s.fold(0, |acc, x| acc + x).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636667,"byte_end":8636715,"line_start":670,"line_end":670,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636720,"byte_end":8636723,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(sum, 6);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636728,"byte_end":8636751,"line_start":672,"line_end":672,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636756,"byte_end":8636763,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636768,"byte_end":8636775,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4562},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639100,"byte_end":8639107,"line_start":747,"line_end":747,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::StreamExt::collect","value":"fn <T> (self) -> Collect<Self, T>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Drain stream pushing all emitted values into a collection.","sig":null,"attributes":[{"value":"/ Drain stream pushing all emitted values into a collection.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8636966,"byte_end":8637028,"line_start":683,"line_end":683,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637033,"byte_end":8637036,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ `collect` streams all values, awaiting as needed. Values are pushed into","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637041,"byte_end":8637117,"line_start":685,"line_end":685,"column_start":5,"column_end":81}},{"value":"/ a collection. A number of different target collection types are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637122,"byte_end":8637189,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/ supported, including [`Vec`](std::vec::Vec),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637194,"byte_end":8637242,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ [`String`](std::string::String), and [`Bytes`](bytes::Bytes).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637247,"byte_end":8637312,"line_start":688,"line_end":688,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637317,"byte_end":8637320,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # `Result`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637325,"byte_end":8637339,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637344,"byte_end":8637347,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ `collect()` can also be used with streams of type `Result<T, E>` where","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637352,"byte_end":8637426,"line_start":692,"line_end":692,"column_start":5,"column_end":79}},{"value":"/ `T: FromStream<_>`. In this case, `collect()` will stream as long as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637431,"byte_end":8637503,"line_start":693,"line_end":693,"column_start":5,"column_end":77}},{"value":"/ values yielded from the stream are `Ok(_)`. If `Err(_)` is encountered,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637508,"byte_end":8637583,"line_start":694,"line_end":694,"column_start":5,"column_end":80}},{"value":"/ streaming is terminated and `collect()` returns the `Err`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637588,"byte_end":8637650,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637655,"byte_end":8637658,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637663,"byte_end":8637674,"line_start":697,"line_end":697,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637679,"byte_end":8637682,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ `FromStream` is currently a sealed trait. Stabilization is pending","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637687,"byte_end":8637757,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ enhancements to the Rust langague.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637762,"byte_end":8637800,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637805,"byte_end":8637808,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637813,"byte_end":8637827,"line_start":702,"line_end":702,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637832,"byte_end":8637835,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637840,"byte_end":8637856,"line_start":704,"line_end":704,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637861,"byte_end":8637864,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637869,"byte_end":8637876,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637881,"byte_end":8637922,"line_start":707,"line_end":707,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637927,"byte_end":8637930,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637935,"byte_end":8637953,"line_start":709,"line_end":709,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637958,"byte_end":8637979,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/     let doubled: Vec<i32> =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8637984,"byte_end":8638015,"line_start":711,"line_end":711,"column_start":5,"column_end":36}},{"value":"/         stream::iter(vec![1, 2, 3])","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638020,"byte_end":8638059,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/             .map(|x| x * 2)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638064,"byte_end":8638095,"line_start":713,"line_end":713,"column_start":5,"column_end":36}},{"value":"/             .collect()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638100,"byte_end":8638126,"line_start":714,"line_end":714,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638131,"byte_end":8638154,"line_start":715,"line_end":715,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638159,"byte_end":8638162,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(vec![2, 4, 6], doubled);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638167,"byte_end":8638210,"line_start":717,"line_end":717,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638215,"byte_end":8638220,"line_start":718,"line_end":718,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638225,"byte_end":8638232,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638237,"byte_end":8638240,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ Collecting a stream of `Result` values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638245,"byte_end":8638287,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638292,"byte_end":8638295,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638300,"byte_end":8638307,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638312,"byte_end":8638353,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638358,"byte_end":8638361,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638366,"byte_end":8638384,"line_start":726,"line_end":726,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638389,"byte_end":8638410,"line_start":727,"line_end":727,"column_start":5,"column_end":26}},{"value":"/     // A stream containing only `Ok` values will be collected","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638415,"byte_end":8638480,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638485,"byte_end":8638529,"line_start":729,"line_end":729,"column_start":5,"column_end":49}},{"value":"/         stream::iter(vec![Ok(1), Ok(2), Ok(3)])","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638534,"byte_end":8638585,"line_start":730,"line_end":730,"column_start":5,"column_end":56}},{"value":"/             .collect()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638590,"byte_end":8638616,"line_start":731,"line_end":731,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638621,"byte_end":8638644,"line_start":732,"line_end":732,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638649,"byte_end":8638652,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Ok(vec![1, 2, 3]), values);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638657,"byte_end":8638703,"line_start":734,"line_end":734,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638708,"byte_end":8638711,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/     // A stream containing `Err` values will return the first error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638716,"byte_end":8638788,"line_start":736,"line_end":736,"column_start":5,"column_end":77}},{"value":"/     let results = vec![Ok(1), Err(\"no\"), Ok(2), Ok(3), Err(\"nein\")];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638793,"byte_end":8638865,"line_start":737,"line_end":737,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638870,"byte_end":8638873,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/     let values: Result<Vec<i32>, &str> =","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638878,"byte_end":8638922,"line_start":739,"line_end":739,"column_start":5,"column_end":49}},{"value":"/         stream::iter(results)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638927,"byte_end":8638960,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/             .collect()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638965,"byte_end":8638991,"line_start":741,"line_end":741,"column_start":5,"column_end":31}},{"value":"/             .await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8638996,"byte_end":8639019,"line_start":742,"line_end":742,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639024,"byte_end":8639027,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Err(\"no\"), values);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639032,"byte_end":8639070,"line_start":744,"line_end":744,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639075,"byte_end":8639080,"line_start":745,"line_end":745,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639085,"byte_end":8639092,"line_start":746,"line_end":746,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641762,"byte_end":8641769,"line_start":811,"line_end":811,"column_start":8,"column_end":15},"name":"timeout","qualname":"::stream::StreamExt::timeout","value":"fn (self, duration: Duration) -> Timeout<Self>","parent":{"krate":0,"index":4531},"children":[],"decl_id":null,"docs":" Applies a per-item timeout to the passed stream.","sig":null,"attributes":[{"value":"/ Applies a per-item timeout to the passed stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639247,"byte_end":8639299,"line_start":755,"line_end":755,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639304,"byte_end":8639307,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ `timeout()` takes a `Duration` that represents the maximum amount of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639312,"byte_end":8639384,"line_start":757,"line_end":757,"column_start":5,"column_end":77}},{"value":"/ time each element of the stream has to complete before timing out.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639389,"byte_end":8639459,"line_start":758,"line_end":758,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639464,"byte_end":8639467,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ If the wrapped stream yields a value before the deadline is reached, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639472,"byte_end":8639548,"line_start":760,"line_end":760,"column_start":5,"column_end":81}},{"value":"/ value is returned. Otherwise, an error is returned. The caller may decide","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639553,"byte_end":8639630,"line_start":761,"line_end":761,"column_start":5,"column_end":82}},{"value":"/ to continue consuming the stream and will eventually get the next source","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639635,"byte_end":8639711,"line_start":762,"line_end":762,"column_start":5,"column_end":81}},{"value":"/ stream value once it becomes available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639716,"byte_end":8639759,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639764,"byte_end":8639767,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639772,"byte_end":8639783,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639788,"byte_end":8639791,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ This function consumes the stream passed into it and returns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639796,"byte_end":8639862,"line_start":767,"line_end":767,"column_start":5,"column_end":71}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639867,"byte_end":8639893,"line_start":768,"line_end":768,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639898,"byte_end":8639901,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ Polling the returned stream will continue to poll the inner stream even","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639906,"byte_end":8639981,"line_start":770,"line_end":770,"column_start":5,"column_end":80}},{"value":"/ if one or more items time out.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8639986,"byte_end":8640020,"line_start":771,"line_end":771,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640025,"byte_end":8640028,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640033,"byte_end":8640047,"line_start":773,"line_end":773,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640052,"byte_end":8640055,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ Suppose we have a stream `int_stream` that yields 3 numbers (1, 2, 3):","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640060,"byte_end":8640134,"line_start":775,"line_end":775,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640139,"byte_end":8640142,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640147,"byte_end":8640154,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640159,"byte_end":8640179,"line_start":778,"line_end":778,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640184,"byte_end":8640207,"line_start":779,"line_end":779,"column_start":5,"column_end":28}},{"value":"/ use tokio::stream::{self, StreamExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640212,"byte_end":8640253,"line_start":780,"line_end":780,"column_start":5,"column_end":46}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640258,"byte_end":8640286,"line_start":781,"line_end":781,"column_start":5,"column_end":33}},{"value":"/ # let int_stream = stream::iter(1..=3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640291,"byte_end":8640334,"line_start":782,"line_end":782,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640339,"byte_end":8640342,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ let mut int_stream = int_stream.timeout(Duration::from_secs(1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640347,"byte_end":8640415,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640420,"byte_end":8640423,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ // When no items time out, we get the 3 elements in succession:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640428,"byte_end":8640495,"line_start":786,"line_end":786,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640500,"byte_end":8640557,"line_start":787,"line_end":787,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640562,"byte_end":8640619,"line_start":788,"line_end":788,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640624,"byte_end":8640681,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640686,"byte_end":8640740,"line_start":790,"line_end":790,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640745,"byte_end":8640748,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ // If the second item times out, we get an error and continue polling the stream:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640753,"byte_end":8640838,"line_start":792,"line_end":792,"column_start":5,"column_end":90}},{"value":"/ # let mut int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640843,"byte_end":8640919,"line_start":793,"line_end":793,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640924,"byte_end":8640981,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/ assert!(int_stream.try_next().await.is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8640986,"byte_end":8641036,"line_start":795,"line_end":795,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(2)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641041,"byte_end":8641098,"line_start":796,"line_end":796,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(3)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641103,"byte_end":8641160,"line_start":797,"line_end":797,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641165,"byte_end":8641219,"line_start":798,"line_end":798,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641224,"byte_end":8641227,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ // If we want to stop consuming the source stream the first time an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641232,"byte_end":8641303,"line_start":800,"line_end":800,"column_start":5,"column_end":76}},{"value":"/ // element times out, we can use the `take_while` operator:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641308,"byte_end":8641371,"line_start":801,"line_end":801,"column_start":5,"column_end":68}},{"value":"/ # let int_stream = stream::iter(vec![Ok(1), Err(()), Ok(2), Ok(3)]);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641376,"byte_end":8641448,"line_start":802,"line_end":802,"column_start":5,"column_end":77}},{"value":"/ let mut int_stream = int_stream.take_while(Result::is_ok);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641453,"byte_end":8641515,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641520,"byte_end":8641523,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(Some(1)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641528,"byte_end":8641585,"line_start":805,"line_end":805,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(int_stream.try_next().await, Ok(None));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641590,"byte_end":8641644,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641649,"byte_end":8641656,"line_start":807,"line_end":807,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641661,"byte_end":8641668,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"cfg(all (feature = \"time\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641673,"byte_end":8641702,"line_start":809,"line_end":809,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":4668},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":4669},{"krate":0,"index":4679},{"krate":0,"index":4682},{"krate":0,"index":4823},{"krate":0,"index":5249},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5480},{"krate":0,"index":5571},{"krate":0,"index":5709},{"krate":0,"index":5726},{"krate":0,"index":5729},{"krate":0,"index":5786},{"krate":0,"index":5790},{"krate":0,"index":5835},{"krate":0,"index":5836}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18464,"byte_end":18488,"line_start":198,"line_end":198,"column_start":13,"column_end":37}},{"value":"! Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722638,"byte_end":8722702,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722703,"byte_end":8722706,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722707,"byte_end":8722782,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! operates independently and may be executed on separate physical threads. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722783,"byte_end":8722863,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! synchronization primitives provided in this module permit these independent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722864,"byte_end":8722943,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tasks to communicate together.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722944,"byte_end":8722978,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722979,"byte_end":8722982,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! [tasks]: crate::task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8722983,"byte_end":8723007,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723008,"byte_end":8723011,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! # Message passing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723012,"byte_end":8723033,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723034,"byte_end":8723037,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! The most common form of synchronization in a Tokio program is message","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723038,"byte_end":8723111,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723112,"byte_end":8723191,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"! synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723192,"byte_end":8723261,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723262,"byte_end":8723265,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723266,"byte_end":8723345,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"! message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723346,"byte_end":8723423,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"! few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723424,"byte_end":8723499,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"! different message passing patterns. When a channel supports multiple","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723500,"byte_end":8723572,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"! producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723573,"byte_end":8723645,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"! supports muliple consumers, many different separate tasks may **receive**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723646,"byte_end":8723723,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! messages.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723724,"byte_end":8723737,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723738,"byte_end":8723741,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Tokio provides many different channel flavors as different message passing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723742,"byte_end":8723820,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! patterns are best handled with different implementations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723821,"byte_end":8723882,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723883,"byte_end":8723886,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ## `oneshot` channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723887,"byte_end":8723911,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723912,"byte_end":8723915,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723916,"byte_end":8723995,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"! single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8723996,"byte_end":8724074,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"! the result of a computation to a waiter.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724075,"byte_end":8724119,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724120,"byte_end":8724123,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! **Example:** using a `oneshot` channel to receive the result of a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724124,"byte_end":8724193,"line_start":35,"line_end":35,"column_start":1,"column_end":70}},{"value":"! computation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724194,"byte_end":8724210,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724211,"byte_end":8724214,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724215,"byte_end":8724222,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724223,"byte_end":8724252,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724253,"byte_end":8724256,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724257,"byte_end":8724300,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"!     \"represents the result of the computation\".to_string()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724301,"byte_end":8724363,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724364,"byte_end":8724369,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724370,"byte_end":8724373,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724374,"byte_end":8724392,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724393,"byte_end":8724414,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724415,"byte_end":8724457,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724458,"byte_end":8724461,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724462,"byte_end":8724495,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"!         let res = some_computation().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724496,"byte_end":8724543,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"!         tx.send(res).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724544,"byte_end":8724578,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724579,"byte_end":8724590,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724591,"byte_end":8724594,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724595,"byte_end":8724672,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724673,"byte_end":8724676,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724677,"byte_end":8724719,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"!     let res = rx.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724720,"byte_end":8724756,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724757,"byte_end":8724762,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724763,"byte_end":8724770,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724771,"byte_end":8724774,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Note, if the task produces the the computation result as its final action","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724775,"byte_end":8724852,"line_start":61,"line_end":61,"column_start":1,"column_end":78}},{"value":"! before terminating, the [`JoinHandle`] can be used to receive the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724853,"byte_end":8724922,"line_start":62,"line_end":62,"column_start":1,"column_end":70}},{"value":"! computation result instead of allocating resources for the `oneshot`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724923,"byte_end":8724995,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"! channel. Awaiting on [`JoinHandle`] returns `Result`. If the task panics,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8724996,"byte_end":8725073,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"! the `Joinhandle` yields `Err` with the panic cause.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725074,"byte_end":8725129,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725130,"byte_end":8725133,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! **Example:**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725134,"byte_end":8725150,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725151,"byte_end":8725154,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725155,"byte_end":8725162,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"! async fn some_computation() -> String {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725163,"byte_end":8725206,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"!     \"the result of the computation\".to_string()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725207,"byte_end":8725258,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725259,"byte_end":8725264,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725265,"byte_end":8725268,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725269,"byte_end":8725287,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725288,"byte_end":8725309,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"!     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725310,"byte_end":8725361,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"!         some_computation().await","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725362,"byte_end":8725398,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725399,"byte_end":8725410,"line_start":78,"line_end":78,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725411,"byte_end":8725414,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"!     // Do other work while the computation is happening in the background","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725415,"byte_end":8725492,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725493,"byte_end":8725496,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"!     // Wait for the computation result","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725497,"byte_end":8725539,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"!     let res = join_handle.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725540,"byte_end":8725585,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725586,"byte_end":8725591,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725592,"byte_end":8725599,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725600,"byte_end":8725603,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725604,"byte_end":8725647,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725648,"byte_end":8725651,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! ## `mpsc` channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725652,"byte_end":8725673,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725674,"byte_end":8725677,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725678,"byte_end":8725755,"line_start":91,"line_end":91,"column_start":1,"column_end":78}},{"value":"! producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725756,"byte_end":8725836,"line_start":92,"line_end":92,"column_start":1,"column_end":81}},{"value":"! task or to receive the result of many computations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725837,"byte_end":8725892,"line_start":93,"line_end":93,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725893,"byte_end":8725896,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725897,"byte_end":8725975,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! of computations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725976,"byte_end":8725996,"line_start":96,"line_end":96,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8725997,"byte_end":8726000,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726001,"byte_end":8726008,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726009,"byte_end":8726035,"line_start":99,"line_end":99,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726036,"byte_end":8726039,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! async fn some_computation(input: u32) -> String {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726040,"byte_end":8726093,"line_start":101,"line_end":101,"column_start":1,"column_end":54}},{"value":"!     format!(\"the result of computation {}\", input)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726094,"byte_end":8726148,"line_start":102,"line_end":102,"column_start":1,"column_end":55}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726149,"byte_end":8726154,"line_start":103,"line_end":103,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726155,"byte_end":8726158,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726159,"byte_end":8726177,"line_start":105,"line_end":105,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726178,"byte_end":8726199,"line_start":106,"line_end":106,"column_start":1,"column_end":22}},{"value":"!     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726200,"byte_end":8726250,"line_start":107,"line_end":107,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726251,"byte_end":8726254,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726255,"byte_end":8726288,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!         for i in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726289,"byte_end":8726317,"line_start":110,"line_end":110,"column_start":1,"column_end":29}},{"value":"!             let res = some_computation(i).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726318,"byte_end":8726370,"line_start":111,"line_end":111,"column_start":1,"column_end":53}},{"value":"!             tx.send(res).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726371,"byte_end":8726415,"line_start":112,"line_end":112,"column_start":1,"column_end":45}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726416,"byte_end":8726429,"line_start":113,"line_end":113,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726430,"byte_end":8726441,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726442,"byte_end":8726445,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726446,"byte_end":8726493,"line_start":116,"line_end":116,"column_start":1,"column_end":48}},{"value":"!         println!(\"got = {}\", res);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726494,"byte_end":8726532,"line_start":117,"line_end":117,"column_start":1,"column_end":39}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726533,"byte_end":8726542,"line_start":118,"line_end":118,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726543,"byte_end":8726548,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726549,"byte_end":8726556,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726557,"byte_end":8726560,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726561,"byte_end":8726641,"line_start":122,"line_end":122,"column_start":1,"column_end":81}},{"value":"! number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726642,"byte_end":8726719,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"! given time. Properly setting this value is key in implementing robust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726720,"byte_end":8726793,"line_start":124,"line_end":124,"column_start":1,"column_end":74}},{"value":"! programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726794,"byte_end":8726869,"line_start":125,"line_end":125,"column_start":1,"column_end":76}},{"value":"! pressure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726870,"byte_end":8726883,"line_start":126,"line_end":126,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726884,"byte_end":8726887,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"! A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726888,"byte_end":8726963,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"! dedicated to managing that resource and using message passing betwen other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8726964,"byte_end":8727042,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"! tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727043,"byte_end":8727121,"line_start":130,"line_end":130,"column_start":1,"column_end":79}},{"value":"! not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727122,"byte_end":8727201,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"! For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727202,"byte_end":8727282,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"! a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727283,"byte_end":8727348,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727349,"byte_end":8727352,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727353,"byte_end":8727433,"line_start":135,"line_end":135,"column_start":1,"column_end":81}},{"value":"! passing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727434,"byte_end":8727446,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727447,"byte_end":8727450,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! ```no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727451,"byte_end":8727464,"line_start":138,"line_end":138,"column_start":1,"column_end":14}},{"value":"! use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727465,"byte_end":8727506,"line_start":139,"line_end":139,"column_start":1,"column_end":42}},{"value":"! use tokio::net::TcpStream;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727507,"byte_end":8727537,"line_start":140,"line_end":140,"column_start":1,"column_end":31}},{"value":"! use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727538,"byte_end":8727564,"line_start":141,"line_end":141,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727565,"byte_end":8727568,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727569,"byte_end":8727587,"line_start":143,"line_end":143,"column_start":1,"column_end":19}},{"value":"! async fn main() -> io::Result<()> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727588,"byte_end":8727627,"line_start":144,"line_end":144,"column_start":1,"column_end":40}},{"value":"!     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727628,"byte_end":8727703,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"!     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727704,"byte_end":8727750,"line_start":146,"line_end":146,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727751,"byte_end":8727754,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727755,"byte_end":8727779,"line_start":148,"line_end":148,"column_start":1,"column_end":25}},{"value":"!         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727780,"byte_end":8727859,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"!         // original handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727860,"byte_end":8727891,"line_start":150,"line_end":150,"column_start":1,"column_end":32}},{"value":"!         let mut tx = tx.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727892,"byte_end":8727928,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727929,"byte_end":8727932,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"!         tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727933,"byte_end":8727970,"line_start":153,"line_end":153,"column_start":1,"column_end":38}},{"value":"!             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8727971,"byte_end":8728033,"line_start":154,"line_end":154,"column_start":1,"column_end":63}},{"value":"!         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728034,"byte_end":8728049,"line_start":155,"line_end":155,"column_start":1,"column_end":16}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728050,"byte_end":8728059,"line_start":156,"line_end":156,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728060,"byte_end":8728063,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"!     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728064,"byte_end":8728143,"line_start":158,"line_end":158,"column_start":1,"column_end":80}},{"value":"!     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728144,"byte_end":8728219,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"!     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728220,"byte_end":8728298,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"!     // be a single outstanding `tx` handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728299,"byte_end":8728346,"line_start":161,"line_end":161,"column_start":1,"column_end":48}},{"value":"!     drop(tx);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728347,"byte_end":8728364,"line_start":162,"line_end":162,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728365,"byte_end":8728368,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"!     while let Some(res) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728369,"byte_end":8728416,"line_start":164,"line_end":164,"column_start":1,"column_end":48}},{"value":"!         socket.write_all(res).await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728417,"byte_end":8728458,"line_start":165,"line_end":165,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728459,"byte_end":8728468,"line_start":166,"line_end":166,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728469,"byte_end":8728472,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"!     Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728473,"byte_end":8728487,"line_start":168,"line_end":168,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728488,"byte_end":8728493,"line_start":169,"line_end":169,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728494,"byte_end":8728501,"line_start":170,"line_end":170,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728502,"byte_end":8728505,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728506,"byte_end":8728581,"line_start":172,"line_end":172,"column_start":1,"column_end":76}},{"value":"! provide a request / response type synchronization pattern with a shared","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728582,"byte_end":8728657,"line_start":173,"line_end":173,"column_start":1,"column_end":76}},{"value":"! resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728658,"byte_end":8728737,"line_start":174,"line_end":174,"column_start":1,"column_end":80}},{"value":"! received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728738,"byte_end":8728803,"line_start":175,"line_end":175,"column_start":1,"column_end":66}},{"value":"! [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728804,"byte_end":8728881,"line_start":176,"line_end":176,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728882,"byte_end":8728885,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728886,"byte_end":8728964,"line_start":178,"line_end":178,"column_start":1,"column_end":79}},{"value":"! \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8728965,"byte_end":8729045,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"! sent over the provided `oneshot` channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729046,"byte_end":8729091,"line_start":180,"line_end":180,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729092,"byte_end":8729095,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729096,"byte_end":8729103,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729104,"byte_end":8729141,"line_start":183,"line_end":183,"column_start":1,"column_end":38}},{"value":"! use Command::Increment;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729142,"byte_end":8729169,"line_start":184,"line_end":184,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729170,"byte_end":8729173,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"! enum Command {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729174,"byte_end":8729192,"line_start":186,"line_end":186,"column_start":1,"column_end":19}},{"value":"!     Increment,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729193,"byte_end":8729211,"line_start":187,"line_end":187,"column_start":1,"column_end":19}},{"value":"!     // Other commands can be added here","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729212,"byte_end":8729255,"line_start":188,"line_end":188,"column_start":1,"column_end":44}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729256,"byte_end":8729261,"line_start":189,"line_end":189,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729262,"byte_end":8729265,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729266,"byte_end":8729284,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729285,"byte_end":8729306,"line_start":192,"line_end":192,"column_start":1,"column_end":22}},{"value":"!     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729307,"byte_end":8729396,"line_start":193,"line_end":193,"column_start":1,"column_end":90}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729397,"byte_end":8729400,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to manage the counter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729401,"byte_end":8729446,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729447,"byte_end":8729480,"line_start":196,"line_end":196,"column_start":1,"column_end":34}},{"value":"!         let mut counter: u64 = 0;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729481,"byte_end":8729518,"line_start":197,"line_end":197,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729519,"byte_end":8729522,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"!         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729523,"byte_end":8729590,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"!             match cmd {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729591,"byte_end":8729618,"line_start":200,"line_end":200,"column_start":1,"column_end":28}},{"value":"!                 Increment => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729619,"byte_end":8729653,"line_start":201,"line_end":201,"column_start":1,"column_end":35}},{"value":"!                     let prev = counter;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729654,"byte_end":8729697,"line_start":202,"line_end":202,"column_start":1,"column_end":44}},{"value":"!                     counter += 1;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729698,"byte_end":8729735,"line_start":203,"line_end":203,"column_start":1,"column_end":38}},{"value":"!                     response.send(prev).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729736,"byte_end":8729789,"line_start":204,"line_end":204,"column_start":1,"column_end":54}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729790,"byte_end":8729811,"line_start":205,"line_end":205,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729812,"byte_end":8729829,"line_start":206,"line_end":206,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729830,"byte_end":8729843,"line_start":207,"line_end":207,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729844,"byte_end":8729855,"line_start":208,"line_end":208,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729856,"byte_end":8729859,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"!     let mut join_handles = vec![];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729860,"byte_end":8729898,"line_start":210,"line_end":210,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729899,"byte_end":8729902,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that will send the increment command.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729903,"byte_end":8729963,"line_start":212,"line_end":212,"column_start":1,"column_end":61}},{"value":"!     for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729964,"byte_end":8729988,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"!         let mut cmd_tx = cmd_tx.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8729989,"byte_end":8730033,"line_start":214,"line_end":214,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730034,"byte_end":8730037,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"!         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730038,"byte_end":8730093,"line_start":216,"line_end":216,"column_start":1,"column_end":56}},{"value":"!             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730094,"byte_end":8730154,"line_start":217,"line_end":217,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730155,"byte_end":8730158,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"!             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730159,"byte_end":8730229,"line_start":219,"line_end":219,"column_start":1,"column_end":71}},{"value":"!             let res = resp_rx.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730230,"byte_end":8730279,"line_start":220,"line_end":220,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730280,"byte_end":8730283,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"!             println!(\"previous value = {}\", res);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730284,"byte_end":8730337,"line_start":222,"line_end":222,"column_start":1,"column_end":54}},{"value":"!         }));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730338,"byte_end":8730354,"line_start":223,"line_end":223,"column_start":1,"column_end":17}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730355,"byte_end":8730364,"line_start":224,"line_end":224,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730365,"byte_end":8730368,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"!     // Wait for all tasks to complete","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730369,"byte_end":8730410,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"!     for join_handle in join_handles.drain(..) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730411,"byte_end":8730462,"line_start":227,"line_end":227,"column_start":1,"column_end":52}},{"value":"!         join_handle.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730463,"byte_end":8730502,"line_start":228,"line_end":228,"column_start":1,"column_end":40}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730503,"byte_end":8730512,"line_start":229,"line_end":229,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730513,"byte_end":8730518,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730519,"byte_end":8730526,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730527,"byte_end":8730530,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! ## `broadcast` channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730531,"byte_end":8730557,"line_start":233,"line_end":233,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730558,"byte_end":8730561,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! The [`broadcast` channel][broadcast] supports sending **many** values from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730562,"byte_end":8730640,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"! **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730641,"byte_end":8730713,"line_start":236,"line_end":236,"column_start":1,"column_end":73}},{"value":"! **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730714,"byte_end":8730787,"line_start":237,"line_end":237,"column_start":1,"column_end":74}},{"value":"! patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730788,"byte_end":8730841,"line_start":238,"line_end":238,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730842,"byte_end":8730845,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"! This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730846,"byte_end":8730926,"line_start":240,"line_end":240,"column_start":1,"column_end":81}},{"value":"! has its use cases.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730927,"byte_end":8730949,"line_start":241,"line_end":241,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730950,"byte_end":8730953,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730954,"byte_end":8730969,"line_start":243,"line_end":243,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730970,"byte_end":8730973,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730974,"byte_end":8730981,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8730982,"byte_end":8731013,"line_start":246,"line_end":246,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731014,"byte_end":8731017,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731018,"byte_end":8731036,"line_start":248,"line_end":248,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731037,"byte_end":8731058,"line_start":249,"line_end":249,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731059,"byte_end":8731110,"line_start":250,"line_end":250,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731111,"byte_end":8731148,"line_start":251,"line_end":251,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731149,"byte_end":8731152,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731153,"byte_end":8731186,"line_start":253,"line_end":253,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731187,"byte_end":8731241,"line_start":254,"line_end":254,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731242,"byte_end":8731296,"line_start":255,"line_end":255,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731297,"byte_end":8731308,"line_start":256,"line_end":256,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731309,"byte_end":8731312,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731313,"byte_end":8731346,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731347,"byte_end":8731401,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731402,"byte_end":8731456,"line_start":260,"line_end":260,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731457,"byte_end":8731468,"line_start":261,"line_end":261,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731469,"byte_end":8731472,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731473,"byte_end":8731502,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731503,"byte_end":8731532,"line_start":264,"line_end":264,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731533,"byte_end":8731538,"line_start":265,"line_end":265,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731539,"byte_end":8731546,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731547,"byte_end":8731550,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"! ## `watch` channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731551,"byte_end":8731573,"line_start":268,"line_end":268,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731574,"byte_end":8731577,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel][watch] supports sending **many** values from a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731578,"byte_end":8731650,"line_start":270,"line_end":270,"column_start":1,"column_end":73}},{"value":"! **single** producer to **many** consumers. However, only the **most recent**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731651,"byte_end":8731731,"line_start":271,"line_end":271,"column_start":1,"column_end":81}},{"value":"! value is stored in the channel. Consumers are notified when a new value is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731732,"byte_end":8731810,"line_start":272,"line_end":272,"column_start":1,"column_end":79}},{"value":"! sent, but there is no guarantee that consumers will see **all** values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731811,"byte_end":8731886,"line_start":273,"line_end":273,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731887,"byte_end":8731890,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"! The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731891,"byte_end":8731971,"line_start":275,"line_end":275,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731972,"byte_end":8731975,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"! Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8731976,"byte_end":8732050,"line_start":277,"line_end":277,"column_start":1,"column_end":75}},{"value":"! changes or signalling program state changes, such as transitioning to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732051,"byte_end":8732124,"line_start":278,"line_end":278,"column_start":1,"column_end":74}},{"value":"! shutdown.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732125,"byte_end":8732138,"line_start":279,"line_end":279,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732139,"byte_end":8732142,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! **Example:** use a `watch` channel to notify tasks of configuration changes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732143,"byte_end":8732223,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"! In this example, a configuration file is checked periodically. When the file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732224,"byte_end":8732304,"line_start":282,"line_end":282,"column_start":1,"column_end":81}},{"value":"! changes, the configuration changes are signalled to consumers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732305,"byte_end":8732371,"line_start":283,"line_end":283,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732372,"byte_end":8732375,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732376,"byte_end":8732383,"line_start":285,"line_end":285,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732384,"byte_end":8732411,"line_start":286,"line_end":286,"column_start":1,"column_end":28}},{"value":"! use tokio::time::{self, Duration, Instant};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732412,"byte_end":8732459,"line_start":287,"line_end":287,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732460,"byte_end":8732463,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"! use std::io;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732464,"byte_end":8732480,"line_start":289,"line_end":289,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732481,"byte_end":8732484,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732485,"byte_end":8732527,"line_start":291,"line_end":291,"column_start":1,"column_end":43}},{"value":"! struct Config {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732528,"byte_end":8732547,"line_start":292,"line_end":292,"column_start":1,"column_end":20}},{"value":"!     timeout: Duration,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732548,"byte_end":8732574,"line_start":293,"line_end":293,"column_start":1,"column_end":27}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732575,"byte_end":8732580,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732581,"byte_end":8732584,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"! impl Config {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732585,"byte_end":8732602,"line_start":296,"line_end":296,"column_start":1,"column_end":18}},{"value":"!     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732603,"byte_end":8732660,"line_start":297,"line_end":297,"column_start":1,"column_end":58}},{"value":"!         // file loading and deserialization logic here","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732661,"byte_end":8732719,"line_start":298,"line_end":298,"column_start":1,"column_end":59}},{"value":"! # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732720,"byte_end":8732772,"line_start":299,"line_end":299,"column_start":1,"column_end":53}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732773,"byte_end":8732782,"line_start":300,"line_end":300,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732783,"byte_end":8732788,"line_start":301,"line_end":301,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732789,"byte_end":8732792,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"! async fn my_async_operation() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732793,"byte_end":8732828,"line_start":303,"line_end":303,"column_start":1,"column_end":36}},{"value":"!     // Do something here","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732829,"byte_end":8732857,"line_start":304,"line_end":304,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732858,"byte_end":8732863,"line_start":305,"line_end":305,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732864,"byte_end":8732867,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732868,"byte_end":8732886,"line_start":307,"line_end":307,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732887,"byte_end":8732908,"line_start":308,"line_end":308,"column_start":1,"column_end":22}},{"value":"!     // Load initial configuration value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732909,"byte_end":8732952,"line_start":309,"line_end":309,"column_start":1,"column_end":44}},{"value":"!     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8732953,"byte_end":8733018,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733019,"byte_end":8733022,"line_start":311,"line_end":311,"column_start":1,"column_end":4}},{"value":"!     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733023,"byte_end":8733101,"line_start":312,"line_end":312,"column_start":1,"column_end":79}},{"value":"!     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733102,"byte_end":8733156,"line_start":313,"line_end":313,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733157,"byte_end":8733160,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"!     // Spawn a task to monitor the file.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733161,"byte_end":8733205,"line_start":315,"line_end":315,"column_start":1,"column_end":45}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733206,"byte_end":8733239,"line_start":316,"line_end":316,"column_start":1,"column_end":34}},{"value":"!         loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733240,"byte_end":8733258,"line_start":317,"line_end":317,"column_start":1,"column_end":19}},{"value":"!             // Wait 10 seconds between checks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733259,"byte_end":8733308,"line_start":318,"line_end":318,"column_start":1,"column_end":50}},{"value":"!             time::delay_for(Duration::from_secs(10)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733309,"byte_end":8733372,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733373,"byte_end":8733376,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"!             // Load the configuration file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733377,"byte_end":8733423,"line_start":321,"line_end":321,"column_start":1,"column_end":47}},{"value":"!             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733424,"byte_end":8733497,"line_start":322,"line_end":322,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733498,"byte_end":8733501,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"!             // If the configuration changed, send the new config value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733502,"byte_end":8733576,"line_start":324,"line_end":324,"column_start":1,"column_end":75}},{"value":"!             // on the watch channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733577,"byte_end":8733617,"line_start":325,"line_end":325,"column_start":1,"column_end":41}},{"value":"!             if new_config != config {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733618,"byte_end":8733659,"line_start":326,"line_end":326,"column_start":1,"column_end":42}},{"value":"!                 tx.broadcast(new_config.clone()).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733660,"byte_end":8733722,"line_start":327,"line_end":327,"column_start":1,"column_end":63}},{"value":"!                 config = new_config;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733723,"byte_end":8733763,"line_start":328,"line_end":328,"column_start":1,"column_end":41}},{"value":"!             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733764,"byte_end":8733781,"line_start":329,"line_end":329,"column_start":1,"column_end":18}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733782,"byte_end":8733795,"line_start":330,"line_end":330,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733796,"byte_end":8733807,"line_start":331,"line_end":331,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733808,"byte_end":8733811,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"!     let mut handles = vec![];","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733812,"byte_end":8733845,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733846,"byte_end":8733849,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"!     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733850,"byte_end":8733928,"line_start":335,"line_end":335,"column_start":1,"column_end":79}},{"value":"!     // the timeout elapses, restart the operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733929,"byte_end":8733983,"line_start":336,"line_end":336,"column_start":1,"column_end":55}},{"value":"!     //","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733984,"byte_end":8733994,"line_start":337,"line_end":337,"column_start":1,"column_end":11}},{"value":"!     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8733995,"byte_end":8734072,"line_start":338,"line_end":338,"column_start":1,"column_end":78}},{"value":"!     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734073,"byte_end":8734151,"line_start":339,"line_end":339,"column_start":1,"column_end":79}},{"value":"!     // the in-flight operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734152,"byte_end":8734187,"line_start":340,"line_end":340,"column_start":1,"column_end":36}},{"value":"!     for _ in 0..5 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734188,"byte_end":8734211,"line_start":341,"line_end":341,"column_start":1,"column_end":24}},{"value":"!         // Clone a config watch handle for use in this task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734212,"byte_end":8734275,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"!         let mut rx = rx.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734276,"byte_end":8734312,"line_start":343,"line_end":343,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734313,"byte_end":8734316,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"!         let handle = tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734317,"byte_end":8734367,"line_start":345,"line_end":345,"column_start":1,"column_end":51}},{"value":"!             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734368,"byte_end":8734447,"line_start":346,"line_end":346,"column_start":1,"column_end":80}},{"value":"!             // Pinning to the stack is required to resume the operation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734448,"byte_end":8734523,"line_start":347,"line_end":347,"column_start":1,"column_end":76}},{"value":"!             // across multiple calls to `select!`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734524,"byte_end":8734577,"line_start":348,"line_end":348,"column_start":1,"column_end":54}},{"value":"!             let op = my_async_operation();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734578,"byte_end":8734624,"line_start":349,"line_end":349,"column_start":1,"column_end":47}},{"value":"!             tokio::pin!(op);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734625,"byte_end":8734657,"line_start":350,"line_end":350,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734658,"byte_end":8734661,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"!             // Receive the **initial** configuration value. As this is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734662,"byte_end":8734740,"line_start":352,"line_end":352,"column_start":1,"column_end":79}},{"value":"!             // first time the config is received from the watch, it will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734741,"byte_end":8734817,"line_start":353,"line_end":353,"column_start":1,"column_end":77}},{"value":"!             // always complete immediatedly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734818,"byte_end":8734866,"line_start":354,"line_end":354,"column_start":1,"column_end":49}},{"value":"!             let mut conf = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734867,"byte_end":8734923,"line_start":355,"line_end":355,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734924,"byte_end":8734927,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"!             let mut op_start = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734928,"byte_end":8734978,"line_start":357,"line_end":357,"column_start":1,"column_end":51}},{"value":"!             let mut delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8734979,"byte_end":8735054,"line_start":358,"line_end":358,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735055,"byte_end":8735058,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"!             loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735059,"byte_end":8735081,"line_start":360,"line_end":360,"column_start":1,"column_end":23}},{"value":"!                 tokio::select! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735082,"byte_end":8735118,"line_start":361,"line_end":361,"column_start":1,"column_end":37}},{"value":"!                     _ = &mut delay => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735119,"byte_end":8735162,"line_start":362,"line_end":362,"column_start":1,"column_end":44}},{"value":"!                         // The operation elapsed. Restart it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735163,"byte_end":8735227,"line_start":363,"line_end":363,"column_start":1,"column_end":65}},{"value":"!                         op.set(my_async_operation());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735228,"byte_end":8735285,"line_start":364,"line_end":364,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735286,"byte_end":8735289,"line_start":365,"line_end":365,"column_start":1,"column_end":4}},{"value":"!                         // Track the new start time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735290,"byte_end":8735345,"line_start":366,"line_end":366,"column_start":1,"column_end":56}},{"value":"!                         op_start = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735346,"byte_end":8735400,"line_start":367,"line_end":367,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735401,"byte_end":8735404,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"!                         // Restart the timeout","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735405,"byte_end":8735455,"line_start":369,"line_end":369,"column_start":1,"column_end":51}},{"value":"!                         delay = time::delay_until(op_start + conf.timeout);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735456,"byte_end":8735535,"line_start":370,"line_end":370,"column_start":1,"column_end":80}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735536,"byte_end":8735561,"line_start":371,"line_end":371,"column_start":1,"column_end":26}},{"value":"!                     new_conf = rx.recv() => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735562,"byte_end":8735611,"line_start":372,"line_end":372,"column_start":1,"column_end":50}},{"value":"!                         conf = new_conf.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735612,"byte_end":8735665,"line_start":373,"line_end":373,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735666,"byte_end":8735669,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"!                         // The configuration has been updated. Update the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735670,"byte_end":8735747,"line_start":375,"line_end":375,"column_start":1,"column_end":78}},{"value":"!                         // `delay` using the new `timeout` value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735748,"byte_end":8735817,"line_start":376,"line_end":376,"column_start":1,"column_end":70}},{"value":"!                         delay.reset(op_start + conf.timeout);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735818,"byte_end":8735883,"line_start":377,"line_end":377,"column_start":1,"column_end":66}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735884,"byte_end":8735909,"line_start":378,"line_end":378,"column_start":1,"column_end":26}},{"value":"!                     _ = &mut op => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735910,"byte_end":8735950,"line_start":379,"line_end":379,"column_start":1,"column_end":41}},{"value":"!                         // The operation completed!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8735951,"byte_end":8736006,"line_start":380,"line_end":380,"column_start":1,"column_end":56}},{"value":"!                         return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736007,"byte_end":8736041,"line_start":381,"line_end":381,"column_start":1,"column_end":35}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736042,"byte_end":8736067,"line_start":382,"line_end":382,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736068,"byte_end":8736089,"line_start":383,"line_end":383,"column_start":1,"column_end":22}},{"value":"!             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736090,"byte_end":8736107,"line_start":384,"line_end":384,"column_start":1,"column_end":18}},{"value":"!         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736108,"byte_end":8736123,"line_start":385,"line_end":385,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736124,"byte_end":8736127,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"!         handles.push(handle);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736128,"byte_end":8736161,"line_start":387,"line_end":387,"column_start":1,"column_end":34}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736162,"byte_end":8736171,"line_start":388,"line_end":388,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736172,"byte_end":8736175,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"!     for handle in handles.drain(..) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736176,"byte_end":8736217,"line_start":390,"line_end":390,"column_start":1,"column_end":42}},{"value":"!         handle.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736218,"byte_end":8736252,"line_start":391,"line_end":391,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736253,"byte_end":8736262,"line_start":392,"line_end":392,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736263,"byte_end":8736268,"line_start":393,"line_end":393,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736269,"byte_end":8736276,"line_start":394,"line_end":394,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736277,"byte_end":8736280,"line_start":395,"line_end":395,"column_start":1,"column_end":4}},{"value":"! # State synchronization","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736281,"byte_end":8736308,"line_start":396,"line_end":396,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736309,"byte_end":8736312,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"! The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736313,"byte_end":8736387,"line_start":398,"line_end":398,"column_start":1,"column_end":75}},{"value":"! These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736388,"byte_end":8736462,"line_start":399,"line_end":399,"column_start":1,"column_end":75}},{"value":"! operate in a similar way as their `std` counterparts parts but will wait","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736463,"byte_end":8736539,"line_start":400,"line_end":400,"column_start":1,"column_end":77}},{"value":"! asynchronously instead of blocking the thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736540,"byte_end":8736590,"line_start":401,"line_end":401,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736591,"byte_end":8736594,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"! * [`Barrier`][Barrier] Ensures multiple tasks will wait for each other to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736595,"byte_end":8736672,"line_start":403,"line_end":403,"column_start":1,"column_end":78}},{"value":"!   reach a point in the program, before continuing execution all together.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736673,"byte_end":8736750,"line_start":404,"line_end":404,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736751,"byte_end":8736754,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"! * [`Mutex`][Mutex] Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736755,"byte_end":8736832,"line_start":406,"line_end":406,"column_start":1,"column_end":78}},{"value":"!   one thread at a time is able to access some data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736833,"byte_end":8736888,"line_start":407,"line_end":407,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736889,"byte_end":8736892,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"! * [`Notify`][Notify] Basic task notification. `Notify` supports notifying a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736893,"byte_end":8736972,"line_start":409,"line_end":409,"column_start":1,"column_end":80}},{"value":"!   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8736973,"byte_end":8737051,"line_start":410,"line_end":410,"column_start":1,"column_end":79}},{"value":"!   resumes processing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737052,"byte_end":8737077,"line_start":411,"line_end":411,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737078,"byte_end":8737081,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"! * [`RwLock`][RwLock] Provides a mutual exclusion mechanism which allows","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737082,"byte_end":8737157,"line_start":413,"line_end":413,"column_start":1,"column_end":76}},{"value":"!   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737158,"byte_end":8737234,"line_start":414,"line_end":414,"column_start":1,"column_end":77}},{"value":"!   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737235,"byte_end":8737302,"line_start":415,"line_end":415,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737303,"byte_end":8737306,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"! * [`Semaphore`][Semaphore] Limits the amount of concurrency. A semaphore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737307,"byte_end":8737383,"line_start":417,"line_end":417,"column_start":1,"column_end":77}},{"value":"!   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737384,"byte_end":8737460,"line_start":418,"line_end":418,"column_start":1,"column_end":77}},{"value":"!   critical section. Semaphores are useful for implementing limiting of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737461,"byte_end":8737535,"line_start":419,"line_end":419,"column_start":1,"column_end":75}},{"value":"!   bounding of any kind.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737536,"byte_end":8737563,"line_start":420,"line_end":420,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739501,"byte_end":8739508,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927}],"decl_id":null,"docs":" A barrier enables multiple threads to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple threads to synchronize the beginning of some computation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738548,"byte_end":8738636,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738637,"byte_end":8738640,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738641,"byte_end":8738648,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738649,"byte_end":8738669,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738670,"byte_end":8738693,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738694,"byte_end":8738723,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738724,"byte_end":8738727,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738728,"byte_end":8738762,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738763,"byte_end":8738786,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738787,"byte_end":8738790,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738791,"byte_end":8738836,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738837,"byte_end":8738882,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738883,"byte_end":8738903,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738904,"byte_end":8738936,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738937,"byte_end":8738991,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8738992,"byte_end":8739037,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/     handles.push(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739038,"byte_end":8739071,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739072,"byte_end":8739108,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/         let wr = c.wait().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739109,"byte_end":8739145,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739146,"byte_end":8739181,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/         wr","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739182,"byte_end":8739196,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739197,"byte_end":8739208,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739209,"byte_end":8739214,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ // Will not resolve until all \"before wait\" messages have been printed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739215,"byte_end":8739289,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ let wrs = join_all(handles).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739290,"byte_end":8739328,"line_start":29,"line_end":29,"column_start":1,"column_end":39}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739329,"byte_end":8739384,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(wrs.into_iter().filter(|wr| wr.is_leader()).count(), 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739385,"byte_end":8739456,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739457,"byte_end":8739464,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739465,"byte_end":8739472,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739971,"byte_end":8739974,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"fn (mut n: usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of threads.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739731,"byte_end":8739798,"line_start":49,"line_end":49,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739803,"byte_end":8739806,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 threads which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739811,"byte_end":8739899,"line_start":51,"line_end":51,"column_start":5,"column_end":93}},{"value":"/ threads at once when the `n`th thread calls `wait`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739904,"byte_end":8739959,"line_start":52,"line_end":52,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8741047,"byte_end":8741051,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"fn (&self) -> BarrierWaitResult","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740573,"byte_end":8740633,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740638,"byte_end":8740641,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all threads have rendezvoused once, and can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740646,"byte_end":8740722,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ be used continuously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740727,"byte_end":8740752,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740757,"byte_end":8740760,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740765,"byte_end":8740858,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other threads","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740863,"byte_end":8740956,"line_start":80,"line_end":80,"column_start":5,"column_end":98}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8740961,"byte_end":8741029,"line_start":81,"line_end":81,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5936},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8742973,"byte_end":8742990,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all threads in the `Barrier` have rendezvoused.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8742837,"byte_end":8742937,"line_start":124,"line_end":124,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743238,"byte_end":8743247,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this thread from wait is the \"leader thread\".","sig":null,"attributes":[{"value":"/ Returns `true` if this thread from wait is the \"leader thread\".","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743028,"byte_end":8743095,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743100,"byte_end":8743103,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Only one thread will have `true` returned from their result, all other threads will have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743108,"byte_end":8743200,"line_start":131,"line_end":131,"column_start":5,"column_end":97}},{"value":"/ `false` returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743205,"byte_end":8743226,"line_start":132,"line_end":132,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":4683},{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4690},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4706},{"krate":0,"index":5943},{"krate":0,"index":5947},{"krate":0,"index":5950},{"krate":0,"index":5960},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5962},{"krate":0,"index":5974},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":4711},{"krate":0,"index":4719},{"krate":0,"index":4722},{"krate":0,"index":4727},{"krate":0,"index":5976},{"krate":0,"index":5980},{"krate":0,"index":4731},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4740},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4759},{"krate":0,"index":4762},{"krate":0,"index":4765},{"krate":0,"index":4768},{"krate":0,"index":4779},{"krate":0,"index":4784},{"krate":0,"index":4787},{"krate":0,"index":4792},{"krate":0,"index":4795},{"krate":0,"index":4798},{"krate":0,"index":4803},{"krate":0,"index":4811},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4822}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18464,"byte_end":18488,"line_start":198,"line_end":198,"column_start":13,"column_end":37}},{"value":"! A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743289,"byte_end":8743369,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"! all consumers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743370,"byte_end":8743388,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743389,"byte_end":8743392,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743393,"byte_end":8743471,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743472,"byte_end":8743547,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743548,"byte_end":8743626,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"! long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743627,"byte_end":8743681,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743682,"byte_end":8743685,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743686,"byte_end":8743762,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"! receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743763,"byte_end":8743843,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743844,"byte_end":8743921,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"! value, the value is released from the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743922,"byte_end":8743972,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743973,"byte_end":8743976,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8743977,"byte_end":8744055,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! of messages the channel can retain at any given time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744056,"byte_end":8744113,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744114,"byte_end":8744117,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744118,"byte_end":8744196,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"! returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744197,"byte_end":8744269,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! `subscribe`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744270,"byte_end":8744286,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744287,"byte_end":8744290,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Lagging","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744291,"byte_end":8744305,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744306,"byte_end":8744309,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744310,"byte_end":8744390,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"! a clone, broadcast channels are suspectible to the \"slow receiver\" problem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744391,"byte_end":8744470,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744471,"byte_end":8744548,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744549,"byte_end":8744627,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! up.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744628,"byte_end":8744635,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744636,"byte_end":8744639,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744640,"byte_end":8744717,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"! upper bound on the number of values the channel may retain at any given","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744718,"byte_end":8744793,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"! time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744794,"byte_end":8744874,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744875,"byte_end":8744878,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744879,"byte_end":8744951,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"! currently held by the channel is released. This frees up space for the new","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8744952,"byte_end":8745030,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"! value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745031,"byte_end":8745107,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"! [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745108,"byte_end":8745167,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745168,"byte_end":8745171,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745172,"byte_end":8745250,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"! updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745251,"byte_end":8745325,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! [`recv`] will return this value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745326,"byte_end":8745362,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745363,"byte_end":8745366,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745367,"byte_end":8745446,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745447,"byte_end":8745524,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"! either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745525,"byte_end":8745600,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"! consumption of the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745601,"byte_end":8745632,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745633,"byte_end":8745636,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! ## Closing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745637,"byte_end":8745651,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745652,"byte_end":8745655,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745656,"byte_end":8745731,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745732,"byte_end":8745810,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"! all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745811,"byte_end":8745888,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"! with [`RecvError::Closed`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745889,"byte_end":8745920,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745921,"byte_end":8745924,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745925,"byte_end":8745971,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"! [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8745972,"byte_end":8746040,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746041,"byte_end":8746091,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"! [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746092,"byte_end":8746140,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"! [`RecvError::Lagged`]: crate::sync::broadcast::RecvError::Lagged","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746141,"byte_end":8746209,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"! [`RecvError::Closed`]: crate::sync::broadcast::RecvError::Closed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746210,"byte_end":8746278,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"! [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746279,"byte_end":8746331,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746332,"byte_end":8746335,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746336,"byte_end":8746350,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746351,"byte_end":8746354,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746355,"byte_end":8746370,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746371,"byte_end":8746374,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746375,"byte_end":8746382,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746383,"byte_end":8746414,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746415,"byte_end":8746418,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746419,"byte_end":8746437,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746438,"byte_end":8746459,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746460,"byte_end":8746511,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"!     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746512,"byte_end":8746549,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746550,"byte_end":8746553,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746554,"byte_end":8746587,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746588,"byte_end":8746642,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746643,"byte_end":8746697,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746698,"byte_end":8746709,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746710,"byte_end":8746713,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746714,"byte_end":8746747,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746748,"byte_end":8746802,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"!         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746803,"byte_end":8746857,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746858,"byte_end":8746869,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746870,"byte_end":8746873,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746874,"byte_end":8746903,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746904,"byte_end":8746933,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746934,"byte_end":8746939,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746940,"byte_end":8746947,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746948,"byte_end":8746951,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! Handling lag","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746952,"byte_end":8746968,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746969,"byte_end":8746972,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746973,"byte_end":8746980,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8746981,"byte_end":8747012,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747013,"byte_end":8747016,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747017,"byte_end":8747035,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747036,"byte_end":8747057,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"!     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747058,"byte_end":8747107,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747108,"byte_end":8747111,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"!     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747112,"byte_end":8747141,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"!     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747142,"byte_end":8747171,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"!     tx.send(30).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747172,"byte_end":8747201,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747202,"byte_end":8747205,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"!     // The receiver lagged behind","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747206,"byte_end":8747243,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"!     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747244,"byte_end":8747286,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747287,"byte_end":8747290,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"!     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747291,"byte_end":8747360,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747361,"byte_end":8747364,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747365,"byte_end":8747414,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"!     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747415,"byte_end":8747464,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747465,"byte_end":8747470,"line_start":109,"line_end":109,"column_start":1,"column_end":6}}]},{"kind":"Struct","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748609,"byte_end":8748615,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4705}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747816,"byte_end":8747862,"line_start":123,"line_end":123,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747863,"byte_end":8747866,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747867,"byte_end":8747927,"line_start":125,"line_end":125,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747928,"byte_end":8747955,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747956,"byte_end":8747959,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747960,"byte_end":8747974,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747975,"byte_end":8747978,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747979,"byte_end":8747986,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8747987,"byte_end":8748018,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748019,"byte_end":8748022,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748023,"byte_end":8748041,"line_start":133,"line_end":133,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748042,"byte_end":8748063,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748064,"byte_end":8748115,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748116,"byte_end":8748153,"line_start":136,"line_end":136,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748154,"byte_end":8748157,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748158,"byte_end":8748191,"line_start":138,"line_end":138,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748192,"byte_end":8748246,"line_start":139,"line_end":139,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748247,"byte_end":8748301,"line_start":140,"line_end":140,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748302,"byte_end":8748313,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748314,"byte_end":8748317,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748318,"byte_end":8748351,"line_start":143,"line_end":143,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748352,"byte_end":8748406,"line_start":144,"line_end":144,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748407,"byte_end":8748461,"line_start":145,"line_end":145,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748462,"byte_end":8748473,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748474,"byte_end":8748477,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748478,"byte_end":8748507,"line_start":148,"line_end":148,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748508,"byte_end":8748537,"line_start":149,"line_end":149,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748538,"byte_end":8748543,"line_start":150,"line_end":150,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748544,"byte_end":8748551,"line_start":151,"line_end":151,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748552,"byte_end":8748555,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748556,"byte_end":8748597,"line_start":153,"line_end":153,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749455,"byte_end":8749463,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4710}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748652,"byte_end":8748700,"line_start":158,"line_end":158,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748701,"byte_end":8748704,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748705,"byte_end":8748771,"line_start":160,"line_end":160,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748772,"byte_end":8748801,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748802,"byte_end":8748805,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748806,"byte_end":8748820,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748821,"byte_end":8748824,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748825,"byte_end":8748832,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748833,"byte_end":8748864,"line_start":166,"line_end":166,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748865,"byte_end":8748868,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748869,"byte_end":8748887,"line_start":168,"line_end":168,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748888,"byte_end":8748909,"line_start":169,"line_end":169,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748910,"byte_end":8748961,"line_start":170,"line_end":170,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8748962,"byte_end":8748999,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749000,"byte_end":8749003,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749004,"byte_end":8749037,"line_start":173,"line_end":173,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749038,"byte_end":8749092,"line_start":174,"line_end":174,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749093,"byte_end":8749147,"line_start":175,"line_end":175,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749148,"byte_end":8749159,"line_start":176,"line_end":176,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749160,"byte_end":8749163,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749164,"byte_end":8749197,"line_start":178,"line_end":178,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749198,"byte_end":8749252,"line_start":179,"line_end":179,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749253,"byte_end":8749307,"line_start":180,"line_end":180,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749308,"byte_end":8749319,"line_start":181,"line_end":181,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749320,"byte_end":8749323,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749324,"byte_end":8749353,"line_start":183,"line_end":183,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749354,"byte_end":8749383,"line_start":184,"line_end":184,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749384,"byte_end":8749389,"line_start":185,"line_end":185,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749390,"byte_end":8749397,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749398,"byte_end":8749401,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749402,"byte_end":8749443,"line_start":188,"line_end":188,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5943},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749948,"byte_end":8749957,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::broadcast::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::send`][Sender::send].","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::send`][Sender::send].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749651,"byte_end":8749704,"line_start":200,"line_end":200,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749705,"byte_end":8749708,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749709,"byte_end":8749781,"line_start":202,"line_end":202,"column_start":1,"column_end":73}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749782,"byte_end":8749859,"line_start":203,"line_end":203,"column_start":1,"column_end":78}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749860,"byte_end":8749919,"line_start":204,"line_end":204,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5951},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750296,"byte_end":8750302,"line_start":216,"line_end":216,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":5950},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750199,"byte_end":8750274,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750279,"byte_end":8750291,"line_start":215,"line_end":215,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5953},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750508,"byte_end":8750514,"line_start":222,"line_end":222,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":5950},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750309,"byte_end":8750381,"line_start":218,"line_end":218,"column_start":5,"column_end":77}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750386,"byte_end":8750446,"line_start":219,"line_end":219,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750451,"byte_end":8750454,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750459,"byte_end":8750503,"line_start":221,"line_end":221,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5950},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750183,"byte_end":8750192,"line_start":213,"line_end":213,"column_start":10,"column_end":19},"name":"RecvError","qualname":"::sync::broadcast::RecvError","value":"RecvError::{Closed, Lagged}","parent":null,"children":[{"krate":0,"index":5951},{"krate":0,"index":5953}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8749970,"byte_end":8750037,"line_start":208,"line_end":208,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750038,"byte_end":8750041,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750042,"byte_end":8750094,"line_start":210,"line_end":210,"column_start":1,"column_end":53}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750095,"byte_end":8750145,"line_start":211,"line_end":211,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5963},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750901,"byte_end":8750906,"line_start":233,"line_end":233,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::broadcast::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`][Sender] handles, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750768,"byte_end":8750826,"line_start":231,"line_end":231,"column_start":5,"column_end":63}},{"value":"/ [`Sender`][Sender] handles, so data may yet become available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750831,"byte_end":8750896,"line_start":232,"line_end":232,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5965},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751010,"byte_end":8751016,"line_start":237,"line_end":237,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::broadcast::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750913,"byte_end":8750988,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ be sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750993,"byte_end":8751005,"line_start":236,"line_end":236,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5967},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751265,"byte_end":8751271,"line_start":244,"line_end":244,"column_start":5,"column_end":11},"name":"Lagged","qualname":"::sync::broadcast::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":5962},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751023,"byte_end":8751097,"line_start":239,"line_end":239,"column_start":5,"column_end":79}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751102,"byte_end":8751170,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"/ retained by the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751175,"byte_end":8751203,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751208,"byte_end":8751211,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8751216,"byte_end":8751260,"line_start":243,"line_end":243,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5962},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750749,"byte_end":8750761,"line_start":230,"line_end":230,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::broadcast::TryRecvError","value":"TryRecvError::{Empty, Closed, Lagged}","parent":null,"children":[{"krate":0,"index":5963},{"krate":0,"index":5965},{"krate":0,"index":5967}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750524,"byte_end":8750595,"line_start":225,"line_end":225,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750596,"byte_end":8750599,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750600,"byte_end":8750660,"line_start":227,"line_end":227,"column_start":1,"column_end":61}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8750661,"byte_end":8750711,"line_start":228,"line_end":228,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":4738},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754519,"byte_end":8754526,"line_start":369,"line_end":369,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"fn <T> (mut capacity: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8752907,"byte_end":8752983,"line_start":324,"line_end":324,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8752984,"byte_end":8753033,"line_start":325,"line_end":325,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753034,"byte_end":8753037,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753038,"byte_end":8753107,"line_start":327,"line_end":327,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753108,"byte_end":8753158,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753159,"byte_end":8753162,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753163,"byte_end":8753237,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753238,"byte_end":8753313,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753314,"byte_end":8753382,"line_start":332,"line_end":332,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753383,"byte_end":8753386,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753387,"byte_end":8753463,"line_start":334,"line_end":334,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753464,"byte_end":8753545,"line_start":335,"line_end":335,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753546,"byte_end":8753585,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753586,"byte_end":8753589,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753590,"byte_end":8753636,"line_start":338,"line_end":338,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753637,"byte_end":8753705,"line_start":339,"line_end":339,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753706,"byte_end":8753756,"line_start":340,"line_end":340,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753757,"byte_end":8753809,"line_start":341,"line_end":341,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::SendError","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753810,"byte_end":8753862,"line_start":342,"line_end":342,"column_start":1,"column_end":53}},{"value":"/ [`RecvError`]: crate::sync::broadcast::RecvError","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753863,"byte_end":8753915,"line_start":343,"line_end":343,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753916,"byte_end":8753919,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753920,"byte_end":8753934,"line_start":345,"line_end":345,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753935,"byte_end":8753938,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753939,"byte_end":8753946,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753947,"byte_end":8753978,"line_start":348,"line_end":348,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753979,"byte_end":8753982,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8753983,"byte_end":8754001,"line_start":350,"line_end":350,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754002,"byte_end":8754023,"line_start":351,"line_end":351,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754024,"byte_end":8754075,"line_start":352,"line_end":352,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754076,"byte_end":8754113,"line_start":353,"line_end":353,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754114,"byte_end":8754117,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754118,"byte_end":8754151,"line_start":355,"line_end":355,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754152,"byte_end":8754206,"line_start":356,"line_end":356,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754207,"byte_end":8754261,"line_start":357,"line_end":357,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754262,"byte_end":8754273,"line_start":358,"line_end":358,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754274,"byte_end":8754277,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754278,"byte_end":8754311,"line_start":360,"line_end":360,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754312,"byte_end":8754366,"line_start":361,"line_end":361,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754367,"byte_end":8754421,"line_start":362,"line_end":362,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754422,"byte_end":8754433,"line_start":363,"line_end":363,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754434,"byte_end":8754437,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754438,"byte_end":8754467,"line_start":365,"line_end":365,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754468,"byte_end":8754497,"line_start":366,"line_end":366,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754498,"byte_end":8754503,"line_start":367,"line_end":367,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8754504,"byte_end":8754511,"line_start":368,"line_end":368,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4750},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757800,"byte_end":8757804,"line_start":470,"line_end":470,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&self, value: T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755950,"byte_end":8756024,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756029,"byte_end":8756065,"line_start":421,"line_end":421,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756070,"byte_end":8756073,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756078,"byte_end":8756153,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756158,"byte_end":8756224,"line_start":424,"line_end":424,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756229,"byte_end":8756280,"line_start":425,"line_end":425,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756285,"byte_end":8756288,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756293,"byte_end":8756305,"line_start":427,"line_end":427,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756310,"byte_end":8756313,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756318,"byte_end":8756392,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756397,"byte_end":8756473,"line_start":430,"line_end":430,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756478,"byte_end":8756531,"line_start":431,"line_end":431,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756536,"byte_end":8756539,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756544,"byte_end":8756554,"line_start":433,"line_end":433,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756559,"byte_end":8756562,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756567,"byte_end":8756639,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756644,"byte_end":8756719,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756724,"byte_end":8756785,"line_start":437,"line_end":437,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756790,"byte_end":8756793,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756798,"byte_end":8756871,"line_start":439,"line_end":439,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756876,"byte_end":8756941,"line_start":440,"line_end":440,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756946,"byte_end":8756964,"line_start":441,"line_end":441,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756969,"byte_end":8756972,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8756977,"byte_end":8757027,"line_start":443,"line_end":443,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757032,"byte_end":8757092,"line_start":444,"line_end":444,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757097,"byte_end":8757100,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757105,"byte_end":8757119,"line_start":446,"line_end":446,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757124,"byte_end":8757127,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757132,"byte_end":8757139,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757144,"byte_end":8757175,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757180,"byte_end":8757183,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757188,"byte_end":8757206,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757211,"byte_end":8757232,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757237,"byte_end":8757288,"line_start":453,"line_end":453,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757293,"byte_end":8757330,"line_start":454,"line_end":454,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757335,"byte_end":8757338,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757343,"byte_end":8757376,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757381,"byte_end":8757435,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757440,"byte_end":8757494,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757499,"byte_end":8757510,"line_start":459,"line_end":459,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757515,"byte_end":8757518,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757523,"byte_end":8757556,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757561,"byte_end":8757615,"line_start":462,"line_end":462,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757620,"byte_end":8757674,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757679,"byte_end":8757690,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757695,"byte_end":8757698,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757703,"byte_end":8757732,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757737,"byte_end":8757766,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757771,"byte_end":8757776,"line_start":468,"line_end":468,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757781,"byte_end":8757788,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4752},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758564,"byte_end":8758573,"line_start":498,"line_end":498,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"fn (&self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8757969,"byte_end":8758046,"line_start":475,"line_end":475,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758051,"byte_end":8758080,"line_start":476,"line_end":476,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758085,"byte_end":8758088,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758093,"byte_end":8758107,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758112,"byte_end":8758115,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758120,"byte_end":8758127,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758132,"byte_end":8758163,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758168,"byte_end":8758171,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758176,"byte_end":8758194,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758199,"byte_end":8758220,"line_start":484,"line_end":484,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758225,"byte_end":8758272,"line_start":485,"line_end":485,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758277,"byte_end":8758280,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758285,"byte_end":8758312,"line_start":487,"line_end":487,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758317,"byte_end":8758346,"line_start":488,"line_end":488,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758351,"byte_end":8758354,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758359,"byte_end":8758395,"line_start":490,"line_end":490,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758400,"byte_end":8758403,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758408,"byte_end":8758437,"line_start":492,"line_end":492,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758442,"byte_end":8758445,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758450,"byte_end":8758495,"line_start":494,"line_end":494,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758500,"byte_end":8758530,"line_start":495,"line_end":495,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758535,"byte_end":8758540,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8758545,"byte_end":8758552,"line_start":497,"line_end":497,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760331,"byte_end":8760345,"line_start":559,"line_end":559,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759179,"byte_end":8759221,"line_start":523,"line_end":523,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759226,"byte_end":8759229,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759234,"byte_end":8759310,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759315,"byte_end":8759388,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759393,"byte_end":8759413,"line_start":527,"line_end":527,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759418,"byte_end":8759421,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759426,"byte_end":8759436,"line_start":529,"line_end":529,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759441,"byte_end":8759444,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759449,"byte_end":8759519,"line_start":531,"line_end":531,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759524,"byte_end":8759592,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759597,"byte_end":8759610,"line_start":533,"line_end":533,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759615,"byte_end":8759618,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759623,"byte_end":8759675,"line_start":535,"line_end":535,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759680,"byte_end":8759730,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759735,"byte_end":8759781,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759786,"byte_end":8759846,"line_start":538,"line_end":538,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759851,"byte_end":8759899,"line_start":539,"line_end":539,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759904,"byte_end":8759907,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759912,"byte_end":8759926,"line_start":541,"line_end":541,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759931,"byte_end":8759934,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759939,"byte_end":8759946,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759951,"byte_end":8759982,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759987,"byte_end":8759990,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8759995,"byte_end":8760013,"line_start":546,"line_end":546,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760018,"byte_end":8760039,"line_start":547,"line_end":547,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760044,"byte_end":8760092,"line_start":548,"line_end":548,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760097,"byte_end":8760100,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760105,"byte_end":8760148,"line_start":550,"line_end":550,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760153,"byte_end":8760156,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760161,"byte_end":8760199,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760204,"byte_end":8760207,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760212,"byte_end":8760255,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760260,"byte_end":8760263,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760268,"byte_end":8760297,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760302,"byte_end":8760307,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8760312,"byte_end":8760319,"line_start":558,"line_end":558,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766591,"byte_end":8766599,"line_start":760,"line_end":760,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8764997,"byte_end":8765070,"line_start":721,"line_end":721,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765075,"byte_end":8765078,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765083,"byte_end":8765155,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765160,"byte_end":8765184,"line_start":724,"line_end":724,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765189,"byte_end":8765192,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of one","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765197,"byte_end":8765277,"line_start":726,"line_end":726,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765282,"byte_end":8765356,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765361,"byte_end":8765364,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765369,"byte_end":8765442,"line_start":729,"line_end":729,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765447,"byte_end":8765521,"line_start":730,"line_end":730,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765526,"byte_end":8765529,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765534,"byte_end":8765610,"line_start":732,"line_end":732,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765615,"byte_end":8765691,"line_start":733,"line_end":733,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765696,"byte_end":8765767,"line_start":734,"line_end":734,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765772,"byte_end":8765845,"line_start":735,"line_end":735,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765850,"byte_end":8765923,"line_start":736,"line_end":736,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8765928,"byte_end":8765999,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766004,"byte_end":8766056,"line_start":738,"line_end":738,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766061,"byte_end":8766064,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766069,"byte_end":8766121,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766126,"byte_end":8766176,"line_start":741,"line_end":741,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766181,"byte_end":8766184,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766189,"byte_end":8766203,"line_start":743,"line_end":743,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766208,"byte_end":8766211,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766216,"byte_end":8766223,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766228,"byte_end":8766259,"line_start":746,"line_end":746,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766264,"byte_end":8766267,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766272,"byte_end":8766290,"line_start":748,"line_end":748,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766295,"byte_end":8766316,"line_start":749,"line_end":749,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766321,"byte_end":8766371,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766376,"byte_end":8766379,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766384,"byte_end":8766424,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766429,"byte_end":8766432,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766437,"byte_end":8766466,"line_start":754,"line_end":754,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766471,"byte_end":8766474,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766479,"byte_end":8766522,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766527,"byte_end":8766557,"line_start":757,"line_end":757,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766562,"byte_end":8766567,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766572,"byte_end":8766579,"line_start":759,"line_end":759,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4771},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8766794,"byte_end":8766803,"line_start":766,"line_end":766,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<T, RecvError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4772},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769396,"byte_end":8769400,"line_start":844,"line_end":844,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Result<T, RecvError>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767180,"byte_end":8767226,"line_start":780,"line_end":780,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767231,"byte_end":8767234,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767239,"byte_end":8767307,"line_start":782,"line_end":782,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767312,"byte_end":8767344,"line_start":783,"line_end":783,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767349,"byte_end":8767352,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767357,"byte_end":8767427,"line_start":785,"line_end":785,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767432,"byte_end":8767506,"line_start":786,"line_end":786,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767511,"byte_end":8767514,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767519,"byte_end":8767595,"line_start":788,"line_end":788,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767600,"byte_end":8767676,"line_start":789,"line_end":789,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767681,"byte_end":8767749,"line_start":790,"line_end":790,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767754,"byte_end":8767827,"line_start":791,"line_end":791,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767832,"byte_end":8767901,"line_start":792,"line_end":792,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767906,"byte_end":8767951,"line_start":793,"line_end":793,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767956,"byte_end":8767959,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8767964,"byte_end":8768014,"line_start":795,"line_end":795,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768019,"byte_end":8768071,"line_start":796,"line_end":796,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768076,"byte_end":8768079,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768084,"byte_end":8768098,"line_start":798,"line_end":798,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768103,"byte_end":8768106,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768111,"byte_end":8768118,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768123,"byte_end":8768154,"line_start":801,"line_end":801,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768159,"byte_end":8768162,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768167,"byte_end":8768185,"line_start":803,"line_end":803,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768190,"byte_end":8768211,"line_start":804,"line_end":804,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768216,"byte_end":8768267,"line_start":805,"line_end":805,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768272,"byte_end":8768309,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768314,"byte_end":8768317,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768322,"byte_end":8768355,"line_start":808,"line_end":808,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768360,"byte_end":8768414,"line_start":809,"line_end":809,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768419,"byte_end":8768473,"line_start":810,"line_end":810,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768478,"byte_end":8768489,"line_start":811,"line_end":811,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768494,"byte_end":8768497,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768502,"byte_end":8768535,"line_start":813,"line_end":813,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768540,"byte_end":8768594,"line_start":814,"line_end":814,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768599,"byte_end":8768653,"line_start":815,"line_end":815,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768658,"byte_end":8768669,"line_start":816,"line_end":816,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768674,"byte_end":8768677,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768682,"byte_end":8768711,"line_start":818,"line_end":818,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768716,"byte_end":8768745,"line_start":819,"line_end":819,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768750,"byte_end":8768755,"line_start":820,"line_end":820,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768760,"byte_end":8768767,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768772,"byte_end":8768775,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768780,"byte_end":8768796,"line_start":823,"line_end":823,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768801,"byte_end":8768804,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768809,"byte_end":8768816,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768821,"byte_end":8768852,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768857,"byte_end":8768860,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768865,"byte_end":8768883,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768888,"byte_end":8768909,"line_start":829,"line_end":829,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768914,"byte_end":8768963,"line_start":830,"line_end":830,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768968,"byte_end":8768971,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8768976,"byte_end":8769005,"line_start":832,"line_end":832,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769010,"byte_end":8769039,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769044,"byte_end":8769073,"line_start":834,"line_end":834,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769078,"byte_end":8769081,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769086,"byte_end":8769123,"line_start":836,"line_end":836,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769128,"byte_end":8769170,"line_start":837,"line_end":837,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769175,"byte_end":8769178,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769183,"byte_end":8769252,"line_start":839,"line_end":839,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769257,"byte_end":8769260,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769265,"byte_end":8769314,"line_start":841,"line_end":841,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769319,"byte_end":8769368,"line_start":842,"line_end":842,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8769373,"byte_end":8769378,"line_start":843,"line_end":843,"column_start":5,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":4824},{"krate":0,"index":4897},{"krate":0,"index":4957},{"krate":0,"index":4961},{"krate":0,"index":5124},{"krate":0,"index":5170},{"krate":0,"index":5217},{"krate":0,"index":5221},{"krate":0,"index":5248}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values across\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18464,"byte_end":18488,"line_start":198,"line_end":198,"column_start":13,"column_end":37}},{"value":"! A multi-producer, single-consumer queue for sending values across","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775365,"byte_end":8775434,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"! asynchronous tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775435,"byte_end":8775458,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775459,"byte_end":8775462,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! Similar to `std`, channel creation provides [`Receiver`] and [`Sender`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775463,"byte_end":8775538,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"! handles. [`Receiver`] implements `Stream` and allows a task to read values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775539,"byte_end":8775617,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"! out of the channel. If there is no message to read, the current task will be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775618,"byte_end":8775698,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"! notified when a new value is sent.  [`Sender`] implements the `Sink` trait","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775699,"byte_end":8775777,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"! and allows sending messages into the channel. If the channel is at capacity,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775778,"byte_end":8775858,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"! the send is rejected and the task will be notified when additional capacity","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775859,"byte_end":8775938,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"! is available. In other words, the channel provides backpressure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8775939,"byte_end":8776007,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776008,"byte_end":8776011,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Unbounded channels are also available using the `unbounded_channel`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776012,"byte_end":8776083,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"! constructor.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776084,"byte_end":8776100,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776101,"byte_end":8776104,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Disconnection","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776105,"byte_end":8776124,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776125,"byte_end":8776128,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776129,"byte_end":8776195,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"! possible to send values into the channel. This is considered the termination","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776196,"byte_end":8776276,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"! event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776277,"byte_end":8776354,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776355,"byte_end":8776358,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776359,"byte_end":8776429,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"! be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776430,"byte_end":8776509,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"! result in an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776510,"byte_end":8776533,"line_start":25,"line_end":25,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776534,"byte_end":8776537,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! # Clean Shutdown","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776538,"byte_end":8776558,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776559,"byte_end":8776562,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776563,"byte_end":8776643,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"! remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776644,"byte_end":8776724,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"! shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776725,"byte_end":8776803,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"! any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776804,"byte_end":8776876,"line_start":32,"line_end":32,"column_start":1,"column_end":73}},{"value":"! consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776877,"byte_end":8776951,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"! dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776952,"byte_end":8776964,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776965,"byte_end":8776968,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8776969,"byte_end":8777010,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"! [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777011,"byte_end":8777056,"line_start":37,"line_end":37,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4909},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790921,"byte_end":8790927,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":4911}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790796,"byte_end":8790841,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790842,"byte_end":8790845,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790846,"byte_end":8790909,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":4918},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791436,"byte_end":8791444,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":4920}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791308,"byte_end":8791356,"line_start":36,"line_end":36,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791357,"byte_end":8791360,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791361,"byte_end":8791424,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":4924},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792832,"byte_end":8792839,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"fn <T> (buffer: usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks,\n returning the sender/receiver halves.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791725,"byte_end":8791805,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ returning the sender/receiver halves.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791806,"byte_end":8791847,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791848,"byte_end":8791851,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791852,"byte_end":8791929,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791930,"byte_end":8791955,"line_start":56,"line_end":56,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791956,"byte_end":8791959,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791960,"byte_end":8792039,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792040,"byte_end":8792088,"line_start":59,"line_end":59,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792089,"byte_end":8792092,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792093,"byte_end":8792172,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792173,"byte_end":8792248,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792249,"byte_end":8792315,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792316,"byte_end":8792319,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792320,"byte_end":8792334,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792335,"byte_end":8792338,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792339,"byte_end":8792350,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792351,"byte_end":8792377,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792378,"byte_end":8792381,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792382,"byte_end":8792400,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792401,"byte_end":8792422,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792423,"byte_end":8792473,"line_start":72,"line_end":72,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792474,"byte_end":8792477,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792478,"byte_end":8792511,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792512,"byte_end":8792540,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792541,"byte_end":8792591,"line_start":76,"line_end":76,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792592,"byte_end":8792641,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792642,"byte_end":8792669,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792670,"byte_end":8792687,"line_start":79,"line_end":79,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792688,"byte_end":8792701,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792702,"byte_end":8792713,"line_start":81,"line_end":81,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792714,"byte_end":8792717,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792718,"byte_end":8792763,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792764,"byte_end":8792800,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792801,"byte_end":8792810,"line_start":85,"line_end":85,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792811,"byte_end":8792816,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8792817,"byte_end":8792824,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4930},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794521,"byte_end":8794525,"line_start":147,"line_end":147,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793439,"byte_end":8793485,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793490,"byte_end":8793493,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793498,"byte_end":8793570,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793575,"byte_end":8793629,"line_start":111,"line_end":111,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793634,"byte_end":8793637,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793642,"byte_end":8793656,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793661,"byte_end":8793664,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793669,"byte_end":8793676,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793681,"byte_end":8793707,"line_start":116,"line_end":116,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793712,"byte_end":8793715,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793720,"byte_end":8793738,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793743,"byte_end":8793764,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793769,"byte_end":8793819,"line_start":120,"line_end":120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793824,"byte_end":8793827,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793832,"byte_end":8793865,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793870,"byte_end":8793914,"line_start":123,"line_end":123,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793919,"byte_end":8793930,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793935,"byte_end":8793938,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793943,"byte_end":8793994,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793999,"byte_end":8794041,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794046,"byte_end":8794051,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794056,"byte_end":8794063,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794068,"byte_end":8794071,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794076,"byte_end":8794100,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794105,"byte_end":8794108,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794113,"byte_end":8794120,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794125,"byte_end":8794151,"line_start":134,"line_end":134,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794156,"byte_end":8794159,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794164,"byte_end":8794182,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794187,"byte_end":8794208,"line_start":137,"line_end":137,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794213,"byte_end":8794263,"line_start":138,"line_end":138,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794268,"byte_end":8794271,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794276,"byte_end":8794316,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794321,"byte_end":8794361,"line_start":141,"line_end":141,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794366,"byte_end":8794369,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794374,"byte_end":8794425,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794430,"byte_end":8794481,"line_start":144,"line_end":144,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794486,"byte_end":8794491,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794496,"byte_end":8794503,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4935},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794691,"byte_end":8794700,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4936},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795356,"byte_end":8795364,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794793,"byte_end":8794866,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794871,"byte_end":8794874,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794879,"byte_end":8794951,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8794956,"byte_end":8795027,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795032,"byte_end":8795085,"line_start":162,"line_end":162,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795090,"byte_end":8795093,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795098,"byte_end":8795170,"line_start":164,"line_end":164,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795175,"byte_end":8795199,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795204,"byte_end":8795207,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795212,"byte_end":8795282,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795287,"byte_end":8795344,"line_start":168,"line_end":168,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4937},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795682,"byte_end":8795687,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795445,"byte_end":8795509,"line_start":173,"line_end":173,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795514,"byte_end":8795517,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795522,"byte_end":8795597,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795602,"byte_end":8795670,"line_start":176,"line_end":176,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4943},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797777,"byte_end":8797781,"line_start":244,"line_end":244,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"fn (&mut self, value: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796133,"byte_end":8796184,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796189,"byte_end":8796192,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796197,"byte_end":8796273,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796278,"byte_end":8796354,"line_start":202,"line_end":202,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796359,"byte_end":8796433,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796438,"byte_end":8796513,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796518,"byte_end":8796587,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796592,"byte_end":8796664,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796669,"byte_end":8796700,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796705,"byte_end":8796708,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796713,"byte_end":8796725,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796730,"byte_end":8796733,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796738,"byte_end":8796811,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796816,"byte_end":8796890,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796895,"byte_end":8796955,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796960,"byte_end":8796963,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796968,"byte_end":8796998,"line_start":215,"line_end":215,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797003,"byte_end":8797029,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797034,"byte_end":8797037,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797042,"byte_end":8797056,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797061,"byte_end":8797064,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797069,"byte_end":8797139,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797144,"byte_end":8797183,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797188,"byte_end":8797191,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797196,"byte_end":8797207,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797212,"byte_end":8797238,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797243,"byte_end":8797246,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797251,"byte_end":8797269,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797274,"byte_end":8797295,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797300,"byte_end":8797348,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797353,"byte_end":8797356,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797361,"byte_end":8797394,"line_start":230,"line_end":230,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797399,"byte_end":8797427,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797432,"byte_end":8797482,"line_start":232,"line_end":232,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797487,"byte_end":8797536,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797541,"byte_end":8797568,"line_start":234,"line_end":234,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797573,"byte_end":8797590,"line_start":235,"line_end":235,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797595,"byte_end":8797608,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797613,"byte_end":8797624,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797629,"byte_end":8797632,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797637,"byte_end":8797682,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797687,"byte_end":8797723,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797728,"byte_end":8797737,"line_start":241,"line_end":241,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797742,"byte_end":8797747,"line_start":242,"line_end":242,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8797752,"byte_end":8797759,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800514,"byte_end":8800522,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"fn (&mut self, message: T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798202,"byte_end":8798261,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798266,"byte_end":8798269,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798274,"byte_end":8798353,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798358,"byte_end":8798433,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798438,"byte_end":8798516,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798521,"byte_end":8798563,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798568,"byte_end":8798571,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This function may be paired with [`poll_ready`] in order to wait for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798576,"byte_end":8798648,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ channel capacity before trying to send a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798653,"byte_end":8798704,"line_start":266,"line_end":266,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798709,"byte_end":8798712,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798717,"byte_end":8798729,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798734,"byte_end":8798737,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798742,"byte_end":8798813,"line_start":270,"line_end":270,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798818,"byte_end":8798894,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798899,"byte_end":8798921,"line_start":272,"line_end":272,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798926,"byte_end":8798929,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8798934,"byte_end":8799007,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799012,"byte_end":8799086,"line_start":275,"line_end":275,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799091,"byte_end":8799151,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799156,"byte_end":8799159,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799164,"byte_end":8799190,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ [`poll_ready`]: Sender::poll_ready","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799195,"byte_end":8799233,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ [`channel`]: channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799238,"byte_end":8799262,"line_start":280,"line_end":280,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799267,"byte_end":8799297,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799302,"byte_end":8799305,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799310,"byte_end":8799324,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799329,"byte_end":8799332,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799337,"byte_end":8799344,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799349,"byte_end":8799375,"line_start":286,"line_end":286,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799380,"byte_end":8799383,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799388,"byte_end":8799406,"line_start":288,"line_end":288,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799411,"byte_end":8799432,"line_start":289,"line_end":289,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799437,"byte_end":8799483,"line_start":290,"line_end":290,"column_start":5,"column_end":51}},{"value":"/     let (mut tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799488,"byte_end":8799537,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/     let mut tx2 = tx1.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799542,"byte_end":8799576,"line_start":292,"line_end":292,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799581,"byte_end":8799584,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799589,"byte_end":8799622,"line_start":294,"line_end":294,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799627,"byte_end":8799666,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799671,"byte_end":8799710,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799715,"byte_end":8799777,"line_start":297,"line_end":297,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799782,"byte_end":8799793,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799798,"byte_end":8799801,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799806,"byte_end":8799839,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799844,"byte_end":8799893,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799898,"byte_end":8799945,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799950,"byte_end":8799986,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8799991,"byte_end":8800002,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800007,"byte_end":8800010,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800015,"byte_end":8800035,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800040,"byte_end":8800079,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800084,"byte_end":8800129,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800134,"byte_end":8800137,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800142,"byte_end":8800181,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800186,"byte_end":8800231,"line_start":311,"line_end":311,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800236,"byte_end":8800239,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800244,"byte_end":8800293,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800298,"byte_end":8800329,"line_start":314,"line_end":314,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800334,"byte_end":8800396,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800401,"byte_end":8800466,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800471,"byte_end":8800480,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800485,"byte_end":8800490,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800495,"byte_end":8800502,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802339,"byte_end":8802351,"line_start":372,"line_end":372,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"fn (&mut self, value: T, timeout: Duration) -> Result<(), SendTimeoutError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800643,"byte_end":8800723,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800728,"byte_end":8800731,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800736,"byte_end":8800813,"line_start":327,"line_end":327,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800818,"byte_end":8800896,"line_start":328,"line_end":328,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800901,"byte_end":8800949,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800954,"byte_end":8800957,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800962,"byte_end":8800988,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8800993,"byte_end":8800996,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801001,"byte_end":8801013,"line_start":333,"line_end":333,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801018,"byte_end":8801021,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801026,"byte_end":8801099,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801104,"byte_end":8801161,"line_start":336,"line_end":336,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801166,"byte_end":8801247,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801252,"byte_end":8801255,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801260,"byte_end":8801290,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801295,"byte_end":8801321,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801326,"byte_end":8801329,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801334,"byte_end":8801348,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801353,"byte_end":8801356,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801361,"byte_end":8801439,"line_start":344,"line_end":344,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801444,"byte_end":8801515,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801520,"byte_end":8801523,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801528,"byte_end":8801539,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801544,"byte_end":8801570,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{delay_for, Duration};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801575,"byte_end":8801618,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801623,"byte_end":8801626,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801631,"byte_end":8801649,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801654,"byte_end":8801675,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801680,"byte_end":8801728,"line_start":353,"line_end":353,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801733,"byte_end":8801736,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801741,"byte_end":8801774,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801779,"byte_end":8801807,"line_start":356,"line_end":356,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801812,"byte_end":8801898,"line_start":357,"line_end":357,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801903,"byte_end":8801956,"line_start":358,"line_end":358,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801961,"byte_end":8801988,"line_start":359,"line_end":359,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8801993,"byte_end":8802010,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802015,"byte_end":8802028,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802033,"byte_end":8802044,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802049,"byte_end":8802052,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802057,"byte_end":8802102,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802107,"byte_end":8802143,"line_start":365,"line_end":365,"column_start":5,"column_end":41}},{"value":"/         delay_for(Duration::from_millis(200)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802148,"byte_end":8802204,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802209,"byte_end":8802218,"line_start":367,"line_end":367,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802223,"byte_end":8802228,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802233,"byte_end":8802240,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8802245,"byte_end":8802269,"line_start":370,"line_end":370,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4954},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804135,"byte_end":8804145,"line_start":413,"line_end":413,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<Sender<T>>::poll_ready","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<(), ClosedError>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the channel is able to accept another item.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803054,"byte_end":8803136,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803141,"byte_end":8803144,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, then `Poll::Pending` is returned and the task is notified when a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803149,"byte_end":8803241,"line_start":398,"line_end":398,"column_start":5,"column_end":97}},{"value":"/ slot becomes available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803246,"byte_end":8803273,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803278,"byte_end":8803281,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a call to `try_send` will succeed unless","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803286,"byte_end":8803379,"line_start":401,"line_end":401,"column_start":5,"column_end":98}},{"value":"/ the channel has since been closed. To provide this guarantee, the channel reserves one slot","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803384,"byte_end":8803479,"line_start":402,"line_end":402,"column_start":5,"column_end":100}},{"value":"/ in the channel for the coming send. This reserved slot is not available to other `Sender`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803484,"byte_end":8803577,"line_start":403,"line_end":403,"column_start":5,"column_end":98}},{"value":"/ instances, so you need to be careful to not end up with deadlocks by blocking after calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803582,"byte_end":8803677,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ `poll_ready` but before sending an element.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803682,"byte_end":8803729,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803734,"byte_end":8803737,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If, after `poll_ready` succeeds, you decide you do not wish to send an item after all, you","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803742,"byte_end":8803836,"line_start":407,"line_end":407,"column_start":5,"column_end":99}},{"value":"/ can use [`disarm`](Sender::disarm) to release the reserved slot.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803841,"byte_end":8803909,"line_start":408,"line_end":408,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803914,"byte_end":8803917,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Until an item is sent or [`disarm`](Sender::disarm) is called, repeated calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8803922,"byte_end":8804006,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ `poll_ready` will return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))` if channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804011,"byte_end":8804104,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ is closed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804109,"byte_end":8804123,"line_start":412,"line_end":412,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4956},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806701,"byte_end":8806707,"line_start":471,"line_end":471,"column_start":12,"column_end":18},"name":"disarm","qualname":"<Sender<T>>::disarm","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Undo a successful call to `poll_ready`.","sig":null,"attributes":[{"value":"/ Undo a successful call to `poll_ready`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804290,"byte_end":8804333,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804338,"byte_end":8804341,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Once a call to `poll_ready` returns `Poll::Ready(Ok(()))`, it holds up one slot in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804346,"byte_end":8804436,"line_start":419,"line_end":419,"column_start":5,"column_end":95}},{"value":"/ channel to make room for the coming send. `disarm` allows you to give up that slot if you","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804441,"byte_end":8804534,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ decide you do not wish to send an item after all. After calling `disarm`, you must call","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804539,"byte_end":8804630,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/ `poll_ready` until it returns `Poll::Ready(Ok(()))` before attempting to send again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804635,"byte_end":8804723,"line_start":422,"line_end":422,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804728,"byte_end":8804731,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if no slot is reserved for this sender (usually because `poll_ready` was","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804736,"byte_end":8804828,"line_start":424,"line_end":424,"column_start":5,"column_end":97}},{"value":"/ not previously called, or did not succeed).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804833,"byte_end":8804880,"line_start":425,"line_end":425,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804885,"byte_end":8804888,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804893,"byte_end":8804909,"line_start":427,"line_end":427,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804914,"byte_end":8804917,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Since `poll_ready` takes up one of the finite number of slots in a bounded channel, callers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8804922,"byte_end":8805017,"line_start":429,"line_end":429,"column_start":5,"column_end":100}},{"value":"/ need to send an item shortly after `poll_ready` succeeds. If they do not, idle senders may","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805022,"byte_end":8805116,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ take up all the slots of the channel, and prevent active senders from getting any requests","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805121,"byte_end":8805215,"line_start":431,"line_end":431,"column_start":5,"column_end":99}},{"value":"/ through. Consider this code that forwards from one channel to another:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805220,"byte_end":8805294,"line_start":432,"line_end":432,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805299,"byte_end":8805302,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805307,"byte_end":8805325,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805330,"byte_end":8805340,"line_start":435,"line_end":435,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805345,"byte_end":8805378,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/   if let Some(item) = ready!(rx.poll_recv(cx)) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805383,"byte_end":8805435,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805440,"byte_end":8805467,"line_start":438,"line_end":438,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805472,"byte_end":8805486,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805491,"byte_end":8805505,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805510,"byte_end":8805517,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805522,"byte_end":8805527,"line_start":442,"line_end":442,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805532,"byte_end":8805539,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805544,"byte_end":8805547,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If many such forwarders exist, and they all forward into a single (cloned) `Sender`, then","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805552,"byte_end":8805645,"line_start":445,"line_end":445,"column_start":5,"column_end":98}},{"value":"/ any number of forwarders may be waiting for `rx.poll_recv` at the same time. While they do,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805650,"byte_end":8805745,"line_start":446,"line_end":446,"column_start":5,"column_end":100}},{"value":"/ they are effectively each reducing the channel's capacity by 1. If enough of these","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805750,"byte_end":8805836,"line_start":447,"line_end":447,"column_start":5,"column_end":91}},{"value":"/ forwarders are idle, forwarders whose `rx` _do_ have elements will be unable to find a spot","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805841,"byte_end":8805936,"line_start":448,"line_end":448,"column_start":5,"column_end":100}},{"value":"/ for them through `poll_ready`, and the system will deadlock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8805941,"byte_end":8806005,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806010,"byte_end":8806013,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ `disarm` solves this problem by allowing you to give up the reserved slot if you find that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806018,"byte_end":8806112,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ you have to block. We can then fix the code above by writing:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806117,"byte_end":8806182,"line_start":452,"line_end":452,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806187,"byte_end":8806190,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806195,"byte_end":8806213,"line_start":454,"line_end":454,"column_start":5,"column_end":23}},{"value":"/ loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806218,"byte_end":8806228,"line_start":455,"line_end":455,"column_start":5,"column_end":15}},{"value":"/   ready!(tx.poll_ready(cx))?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806233,"byte_end":8806266,"line_start":456,"line_end":456,"column_start":5,"column_end":38}},{"value":"/   let item = rx.poll_recv(cx);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806271,"byte_end":8806305,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/   if let Poll::Ready(Ok(_)) = item {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806310,"byte_end":8806350,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/     // we're going to send the item below, so don't disarm","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806355,"byte_end":8806417,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/   } else {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806422,"byte_end":8806436,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/     // give up our send slot, we won't need it for a while","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806441,"byte_end":8806503,"line_start":461,"line_end":461,"column_start":5,"column_end":67}},{"value":"/     tx.disarm();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806508,"byte_end":8806528,"line_start":462,"line_end":462,"column_start":5,"column_end":25}},{"value":"/   }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806533,"byte_end":8806540,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/   if let Some(item) = ready!(item) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806545,"byte_end":8806585,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/     tx.try_send(item)?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806590,"byte_end":8806617,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/   } else {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806622,"byte_end":8806636,"line_start":466,"line_end":466,"column_start":5,"column_end":19}},{"value":"/     break;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806641,"byte_end":8806655,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/   }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806660,"byte_end":8806667,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806672,"byte_end":8806677,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8806682,"byte_end":8806689,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8808699,"byte_end":8808705,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Permit","qualname":"::sync::mpsc::chan::Semaphore::Permit","value":"type Permit;","parent":{"krate":0,"index":5006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832043,"byte_end":8832058,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5182}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8831885,"byte_end":8831939,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8831940,"byte_end":8831943,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8831944,"byte_end":8831976,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8831977,"byte_end":8832031,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832636,"byte_end":8832653,"line_start":36,"line_end":36,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5191}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832475,"byte_end":8832532,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832533,"byte_end":8832536,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832537,"byte_end":8832569,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832570,"byte_end":8832624,"line_start":35,"line_end":35,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5195},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833464,"byte_end":8833481,"line_start":59,"line_end":59,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"fn <T> () -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832952,"byte_end":8833028,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833029,"byte_end":8833039,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833040,"byte_end":8833043,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833044,"byte_end":8833124,"line_start":52,"line_end":52,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833125,"byte_end":8833204,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833205,"byte_end":8833218,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833219,"byte_end":8833222,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833223,"byte_end":8833302,"line_start":56,"line_end":56,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833303,"byte_end":8833379,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833380,"byte_end":8833456,"line_start":58,"line_end":58,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833929,"byte_end":8833938,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5202},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835101,"byte_end":8835105,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834031,"byte_end":8834077,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834082,"byte_end":8834085,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834090,"byte_end":8834162,"line_start":83,"line_end":83,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834167,"byte_end":8834221,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834226,"byte_end":8834229,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834234,"byte_end":8834248,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834253,"byte_end":8834256,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834261,"byte_end":8834268,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834273,"byte_end":8834299,"line_start":89,"line_end":89,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834304,"byte_end":8834307,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834312,"byte_end":8834330,"line_start":91,"line_end":91,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834335,"byte_end":8834356,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834361,"byte_end":8834414,"line_start":93,"line_end":93,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834419,"byte_end":8834422,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834427,"byte_end":8834460,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834465,"byte_end":8834503,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834508,"byte_end":8834519,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834524,"byte_end":8834527,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834532,"byte_end":8834583,"line_start":99,"line_end":99,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834588,"byte_end":8834630,"line_start":100,"line_end":100,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834635,"byte_end":8834640,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834645,"byte_end":8834652,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834657,"byte_end":8834660,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834665,"byte_end":8834689,"line_start":104,"line_end":104,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834694,"byte_end":8834697,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834702,"byte_end":8834709,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834714,"byte_end":8834740,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834745,"byte_end":8834748,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834753,"byte_end":8834771,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834776,"byte_end":8834797,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834802,"byte_end":8834855,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834860,"byte_end":8834863,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834868,"byte_end":8834902,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834907,"byte_end":8834941,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834946,"byte_end":8834949,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8834954,"byte_end":8835005,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835010,"byte_end":8835061,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835066,"byte_end":8835071,"line_start":118,"line_end":118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835076,"byte_end":8835083,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835790,"byte_end":8835798,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnboundedReceiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without blocking.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without blocking.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835227,"byte_end":8835300,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835305,"byte_end":8835308,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This method will never block the caller in order to wait for data to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835313,"byte_end":8835385,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ become available. Instead, this will always return immediately with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835390,"byte_end":8835461,"line_start":129,"line_end":129,"column_start":5,"column_end":76}},{"value":"/ a possible option of pending data on the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835466,"byte_end":8835519,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835524,"byte_end":8835527,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835532,"byte_end":8835604,"line_start":132,"line_end":132,"column_start":5,"column_end":77}},{"value":"/ block on a receiver.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835609,"byte_end":8835633,"line_start":133,"line_end":133,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835638,"byte_end":8835641,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Compared with recv, this function has two failure cases instead of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835646,"byte_end":8835716,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ one (one for disconnection, one for an empty buffer).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835721,"byte_end":8835778,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":5208},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836116,"byte_end":8836121,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835879,"byte_end":8835943,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835948,"byte_end":8835951,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8835956,"byte_end":8836031,"line_start":143,"line_end":143,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836036,"byte_end":8836104,"line_start":144,"line_end":144,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836986,"byte_end":8836990,"line_start":172,"line_end":172,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"fn (&self, message: T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836556,"byte_end":8836630,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836635,"byte_end":8836638,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836643,"byte_end":8836716,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836721,"byte_end":8836787,"line_start":167,"line_end":167,"column_start":5,"column_end":71}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836792,"byte_end":8836873,"line_start":168,"line_end":168,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836878,"byte_end":8836881,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836886,"byte_end":8836925,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836930,"byte_end":8836974,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":5221},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":6003},{"krate":0,"index":6007},{"krate":0,"index":5224},{"krate":0,"index":5227},{"krate":0,"index":6010},{"krate":0,"index":6018},{"krate":0,"index":5229},{"krate":0,"index":5231},{"krate":0,"index":5234},{"krate":0,"index":6021},{"krate":0,"index":6024},{"krate":0,"index":5237},{"krate":0,"index":5239},{"krate":0,"index":6026},{"krate":0,"index":6034},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":5240},{"krate":0,"index":5242},{"krate":0,"index":6036},{"krate":0,"index":6039},{"krate":0,"index":5243},{"krate":0,"index":5245},{"krate":0,"index":5247},{"krate":0,"index":6046},{"krate":0,"index":6054},{"krate":0,"index":6041},{"krate":0,"index":6043}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"! Channel error types","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837108,"byte_end":8837131,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6003},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837235,"byte_end":8837244,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837171,"byte_end":8837206,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6012},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837797,"byte_end":8837801,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":6010},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837665,"byte_end":8837733,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837738,"byte_end":8837792,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6015},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837902,"byte_end":8837908,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":6010},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837811,"byte_end":8837880,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837885,"byte_end":8837897,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6010},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837643,"byte_end":8837655,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"TrySendError::{Full, Closed}","parent":null,"children":[{"krate":0,"index":6012},{"krate":0,"index":6015}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837497,"byte_end":8837568,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837569,"byte_end":8837616,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":6021},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838546,"byte_end":8838555,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838484,"byte_end":8838517,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6027},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839060,"byte_end":8839065,"line_start":76,"line_end":76,"column_start":5,"column_end":10},"name":"Empty","qualname":"::sync::mpsc::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6026},"children":[],"decl_id":null,"docs":" This channel is currently empty, but the Sender(s) have not yet\n disconnected, so data may yet become available.\n","sig":null,"attributes":[{"value":"/ This channel is currently empty, but the Sender(s) have not yet","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838932,"byte_end":8838999,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ disconnected, so data may yet become available.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839004,"byte_end":8839055,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6029},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839185,"byte_end":8839191,"line_start":79,"line_end":79,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6026},"children":[],"decl_id":null,"docs":" The channel's sending half has been closed, and there will\n never be any more data received on it.\n","sig":null,"attributes":[{"value":"/ The channel's sending half has been closed, and there will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839071,"byte_end":8839133,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ never be any more data received on it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839138,"byte_end":8839180,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":6026},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838913,"byte_end":8838925,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"TryRecvError","qualname":"::sync::mpsc::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":6027},{"krate":0,"index":6029}],"decl_id":null,"docs":" This enumeration is the list of the possible reasons that try_recv\n could not return data when called.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible reasons that try_recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838766,"byte_end":8838836,"line_start":70,"line_end":70,"column_start":1,"column_end":71}},{"value":"/ could not return data when called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838837,"byte_end":8838875,"line_start":71,"line_end":71,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":6036},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839683,"byte_end":8839694,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"ClosedError","qualname":"::sync::mpsc::error::ClosedError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by [`Sender::poll_ready`](super::Sender::poll_ready)].\n","sig":null,"attributes":[{"value":"/ Error returned by [`Sender::poll_ready`](super::Sender::poll_ready)].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839581,"byte_end":8839654,"line_start":99,"line_end":99,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6048},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840300,"byte_end":8840307,"line_start":125,"line_end":125,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":6046},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6051},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840420,"byte_end":8840426,"line_start":129,"line_end":129,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":6046},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6046},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840138,"byte_end":8840154,"line_start":122,"line_end":122,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"SendTimeoutError::{Timeout, Closed}","parent":null,"children":[{"krate":0,"index":6048},{"krate":0,"index":6051}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20315,"byte_end":20339,"line_start":291,"line_end":291,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6057},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844424,"byte_end":8844429,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6059},{"krate":0,"index":6060}],"decl_id":null,"docs":" An asynchronous mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ An asynchronous mutual exclusion primitive useful for protecting shared data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844057,"byte_end":8844137,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844138,"byte_end":8844141,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Each mutex has a type parameter (`T`) which represents the data that it is protecting. The data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844142,"byte_end":8844241,"line_start":91,"line_end":91,"column_start":1,"column_end":100}},{"value":"/ can only be accessed through the RAII guards returned from `lock`, which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844242,"byte_end":8844318,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"/ guarantees that the data is only ever accessed when the mutex is locked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844319,"byte_end":8844395,"line_start":93,"line_end":93,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":5258},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844888,"byte_end":8844898,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":5261}],"decl_id":null,"docs":" A handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844489,"byte_end":8844520,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844521,"byte_end":8844524,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying `T`. The guard","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844525,"byte_end":8844619,"line_start":102,"line_end":102,"column_start":1,"column_end":95}},{"value":"/ internally keeps a reference-couned pointer to the original `Mutex`, so even if the lock goes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844620,"byte_end":8844717,"line_start":103,"line_end":103,"column_start":1,"column_end":98}},{"value":"/ away, the guard remains valid.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844718,"byte_end":8844752,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844753,"byte_end":8844756,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which point `lock`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844757,"byte_end":8844848,"line_start":106,"line_end":106,"column_start":1,"column_end":92}},{"value":"/ will succeed yet again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8844849,"byte_end":8844876,"line_start":107,"line_end":107,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6064},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845502,"byte_end":8845514,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845294,"byte_end":8845351,"line_start":119,"line_end":119,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845352,"byte_end":8845355,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ A `try_lock` operation can only fail if the mutex is already locked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845356,"byte_end":8845428,"line_start":121,"line_end":121,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845429,"byte_end":8845432,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845433,"byte_end":8845473,"line_start":123,"line_end":123,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846277,"byte_end":8846280,"line_start":153,"line_end":153,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn (t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.\n","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846207,"byte_end":8846265,"line_start":152,"line_end":152,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5275},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846509,"byte_end":8846513,"line_start":161,"line_end":161,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn (&self) -> MutexGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves on acquiring the lock and returns the `MutexGuard`.\n","sig":null,"attributes":[{"value":"/ A future that resolves on acquiring the lock and returns the `MutexGuard`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846413,"byte_end":8846491,"line_start":160,"line_end":160,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":5279},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846909,"byte_end":8846917,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn (&self) -> Result<MutexGuard<'_, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire the lock\n","sig":null,"attributes":[{"value":"/ Tries to acquire the lock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846868,"byte_end":8846897,"line_start":170,"line_end":170,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":5280},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847192,"byte_end":8847202,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847126,"byte_end":8847180,"line_start":178,"line_end":178,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6069},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851346,"byte_end":8851352,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":6070},{"krate":0,"index":6071}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848536,"byte_end":8848572,"line_start":13,"line_end":13,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848573,"byte_end":8848576,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848577,"byte_end":8848653,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848654,"byte_end":8848734,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848735,"byte_end":8848776,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848777,"byte_end":8848780,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848781,"byte_end":8848855,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify()`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848856,"byte_end":8848937,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8848938,"byte_end":8849004,"line_start":21,"line_end":21,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849005,"byte_end":8849008,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849009,"byte_end":8849067,"line_start":23,"line_end":23,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849068,"byte_end":8849148,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849149,"byte_end":8849229,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify()`] sets the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849230,"byte_end":8849309,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849310,"byte_end":8849360,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849361,"byte_end":8849364,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **before** `notfied().await`, then the next call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849365,"byte_end":8849444,"line_start":29,"line_end":29,"column_start":1,"column_end":80}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849445,"byte_end":8849520,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849521,"byte_end":8849591,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849592,"byte_end":8849595,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If `notify()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849596,"byte_end":8849676,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849677,"byte_end":8849750,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849751,"byte_end":8849822,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849823,"byte_end":8849826,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849827,"byte_end":8849841,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849842,"byte_end":8849845,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849846,"byte_end":8849862,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849863,"byte_end":8849866,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849867,"byte_end":8849874,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849875,"byte_end":8849903,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849904,"byte_end":8849927,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849928,"byte_end":8849931,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849932,"byte_end":8849950,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849951,"byte_end":8849972,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8849973,"byte_end":8850018,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850019,"byte_end":8850056,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850057,"byte_end":8850060,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850061,"byte_end":8850094,"line_start":50,"line_end":50,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850095,"byte_end":8850132,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850133,"byte_end":8850179,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850180,"byte_end":8850191,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850192,"byte_end":8850195,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850196,"byte_end":8850237,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/     notify.notify();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850238,"byte_end":8850262,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850263,"byte_end":8850268,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850269,"byte_end":8850276,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850277,"byte_end":8850280,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850281,"byte_end":8850306,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850307,"byte_end":8850310,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850311,"byte_end":8850318,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850319,"byte_end":8850347,"line_start":63,"line_end":63,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850348,"byte_end":8850351,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850352,"byte_end":8850387,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850388,"byte_end":8850413,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850414,"byte_end":8850417,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850418,"byte_end":8850441,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850442,"byte_end":8850477,"line_start":69,"line_end":69,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850478,"byte_end":8850501,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850502,"byte_end":8850507,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850508,"byte_end":8850511,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850512,"byte_end":8850536,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850537,"byte_end":8850575,"line_start":74,"line_end":74,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850576,"byte_end":8850615,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850616,"byte_end":8850650,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850651,"byte_end":8850654,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850655,"byte_end":8850710,"line_start":78,"line_end":78,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850711,"byte_end":8850744,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850745,"byte_end":8850754,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850755,"byte_end":8850758,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850759,"byte_end":8850798,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850799,"byte_end":8850817,"line_start":83,"line_end":83,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850818,"byte_end":8850849,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850850,"byte_end":8850928,"line_start":85,"line_end":85,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850929,"byte_end":8850962,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850963,"byte_end":8850980,"line_start":87,"line_end":87,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850981,"byte_end":8850984,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8850985,"byte_end":8851035,"line_start":89,"line_end":89,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851036,"byte_end":8851081,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851082,"byte_end":8851095,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851096,"byte_end":8851105,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851106,"byte_end":8851111,"line_start":93,"line_end":93,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851112,"byte_end":8851119,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851120,"byte_end":8851123,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851124,"byte_end":8851153,"line_start":96,"line_end":96,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851154,"byte_end":8851195,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851196,"byte_end":8851240,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ [`notify()`]: Notify::notify()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851241,"byte_end":8851275,"line_start":99,"line_end":99,"column_start":1,"column_end":35}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8851276,"byte_end":8851317,"line_start":100,"line_end":100,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5335},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852584,"byte_end":8852587,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"fn () -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852380,"byte_end":8852436,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852441,"byte_end":8852444,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852449,"byte_end":8852463,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852468,"byte_end":8852471,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852476,"byte_end":8852483,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852488,"byte_end":8852516,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852521,"byte_end":8852524,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852529,"byte_end":8852560,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852565,"byte_end":8852572,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853659,"byte_end":8853667,"line_start":200,"line_end":200,"column_start":18,"column_end":26},"name":"notified","qualname":"<Notify>::notified","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852729,"byte_end":8852757,"line_start":171,"line_end":171,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852762,"byte_end":8852765,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852770,"byte_end":8852846,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify()`], then `notified().await` will complete","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852851,"byte_end":8852925,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852930,"byte_end":8853005,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853010,"byte_end":8853079,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853084,"byte_end":8853087,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ [`notify()`]: Notify::notify","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853092,"byte_end":8853124,"line_start":178,"line_end":178,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853129,"byte_end":8853132,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853137,"byte_end":8853151,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853156,"byte_end":8853159,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853164,"byte_end":8853171,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853176,"byte_end":8853204,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853209,"byte_end":8853232,"line_start":184,"line_end":184,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853237,"byte_end":8853240,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853245,"byte_end":8853263,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853268,"byte_end":8853289,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853294,"byte_end":8853339,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853344,"byte_end":8853381,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853386,"byte_end":8853389,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853394,"byte_end":8853427,"line_start":191,"line_end":191,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853432,"byte_end":8853469,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853474,"byte_end":8853520,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853525,"byte_end":8853536,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853541,"byte_end":8853544,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853549,"byte_end":8853590,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853595,"byte_end":8853619,"line_start":197,"line_end":197,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853624,"byte_end":8853629,"line_start":198,"line_end":198,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8853634,"byte_end":8853641,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5339},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855163,"byte_end":8855169,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"notify","qualname":"<Notify>::notify","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854004,"byte_end":8854031,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854036,"byte_end":8854039,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854044,"byte_end":8854115,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854120,"byte_end":8854188,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854193,"byte_end":8854269,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854274,"byte_end":8854315,"line_start":219,"line_end":219,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854320,"byte_end":8854323,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854328,"byte_end":8854402,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ `notify` will result in a single permit being stored. The next call to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854407,"byte_end":8854481,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854486,"byte_end":8854558,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854563,"byte_end":8854577,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854582,"byte_end":8854585,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854590,"byte_end":8854634,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854639,"byte_end":8854642,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854647,"byte_end":8854661,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854666,"byte_end":8854669,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854674,"byte_end":8854681,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854686,"byte_end":8854714,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854719,"byte_end":8854742,"line_start":232,"line_end":232,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854747,"byte_end":8854750,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854755,"byte_end":8854773,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854778,"byte_end":8854799,"line_start":235,"line_end":235,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854804,"byte_end":8854849,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854854,"byte_end":8854891,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854896,"byte_end":8854899,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854904,"byte_end":8854937,"line_start":239,"line_end":239,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854942,"byte_end":8854979,"line_start":240,"line_end":240,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8854984,"byte_end":8855030,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855035,"byte_end":8855046,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855051,"byte_end":8855054,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855059,"byte_end":8855100,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/     notify.notify();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855105,"byte_end":8855129,"line_start":245,"line_end":245,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855134,"byte_end":8855139,"line_start":246,"line_end":246,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8855144,"byte_end":8855151,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5361},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367},{"krate":0,"index":5368},{"krate":0,"index":5369},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":6098},{"krate":0,"index":6101},{"krate":0,"index":6104},{"krate":0,"index":6107},{"krate":0,"index":5380},{"krate":0,"index":5388},{"krate":0,"index":5389},{"krate":0,"index":6135},{"krate":0,"index":6139},{"krate":0,"index":6138},{"krate":0,"index":5395},{"krate":0,"index":5397},{"krate":0,"index":5410},{"krate":0,"index":5413},{"krate":0,"index":5417},{"krate":0,"index":5420},{"krate":0,"index":5424},{"krate":0,"index":5448},{"krate":0,"index":5450},{"krate":0,"index":5452},{"krate":0,"index":5456},{"krate":0,"index":5460},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5478}],"decl_id":null,"docs":" A channel for sending a single message between asynchronous tasks.\n","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18464,"byte_end":18488,"line_start":198,"line_end":198,"column_start":13,"column_end":37}},{"value":"! A channel for sending a single message between asynchronous tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8866945,"byte_end":8867015,"line_start":3,"line_end":3,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":6098},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867499,"byte_end":8867505,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6100}],"decl_id":null,"docs":" Sends a value to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Sends a value to the associated `Receiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867347,"byte_end":8867394,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867395,"byte_end":8867398,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867399,"byte_end":8867470,"line_start":19,"line_end":19,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6104},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867702,"byte_end":8867710,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6106}],"decl_id":null,"docs":" Receive a value from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive a value from the associated `Sender`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867548,"byte_end":8867597,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867598,"byte_end":8867601,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867602,"byte_end":8867673,"line_start":27,"line_end":27,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867761,"byte_end":8867766,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":5381},{"krate":0,"index":6110},{"krate":0,"index":6120},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6122},{"krate":0,"index":6133},{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6127},{"krate":0,"index":6128},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5385},{"krate":0,"index":5387}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"! Oneshot error types","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867773,"byte_end":8867796,"line_start":34,"line_end":34,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6110},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867938,"byte_end":8867947,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867821,"byte_end":8867886,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6123},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868169,"byte_end":8868174,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":6122},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868102,"byte_end":8868160,"line_start":45,"line_end":45,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6125},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868263,"byte_end":8868269,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":6122},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868185,"byte_end":8868254,"line_start":48,"line_end":48,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":6122},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868079,"byte_end":8868091,"line_start":44,"line_end":44,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"TryRecvError::{Empty, Closed}","parent":null,"children":[{"krate":0,"index":6123},{"krate":0,"index":6125}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8867969,"byte_end":8868029,"line_start":42,"line_end":42,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":5395},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870266,"byte_end":8870273,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"fn <T> () -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869451,"byte_end":8869530,"line_start":96,"line_end":96,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869531,"byte_end":8869541,"line_start":97,"line_end":97,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869542,"byte_end":8869545,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869546,"byte_end":8869622,"line_start":99,"line_end":99,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869623,"byte_end":8869701,"line_start":100,"line_end":100,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869702,"byte_end":8869748,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869749,"byte_end":8869752,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869753,"byte_end":8869799,"line_start":103,"line_end":103,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869800,"byte_end":8869803,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869804,"byte_end":8869818,"line_start":105,"line_end":105,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869819,"byte_end":8869822,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869823,"byte_end":8869830,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869831,"byte_end":8869860,"line_start":108,"line_end":108,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869861,"byte_end":8869864,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869865,"byte_end":8869883,"line_start":110,"line_end":110,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869884,"byte_end":8869905,"line_start":111,"line_end":111,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869906,"byte_end":8869948,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869949,"byte_end":8869952,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869953,"byte_end":8869986,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8869987,"byte_end":8870027,"line_start":115,"line_end":115,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870028,"byte_end":8870077,"line_start":116,"line_end":116,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870078,"byte_end":8870091,"line_start":117,"line_end":117,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870092,"byte_end":8870103,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870104,"byte_end":8870107,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870108,"byte_end":8870132,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870133,"byte_end":8870180,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870181,"byte_end":8870234,"line_start":122,"line_end":122,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870235,"byte_end":8870244,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870245,"byte_end":8870250,"line_start":124,"line_end":124,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870251,"byte_end":8870258,"line_start":125,"line_end":125,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8872072,"byte_end":8872076,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"fn (mut self, t: T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870738,"byte_end":8870813,"line_start":144,"line_end":144,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870818,"byte_end":8870834,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870839,"byte_end":8870842,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The function consumes `self` as only one value may ever be sent on a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870847,"byte_end":8870919,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ one-shot channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870924,"byte_end":8870945,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870950,"byte_end":8870953,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870958,"byte_end":8871034,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871039,"byte_end":8871115,"line_start":151,"line_end":151,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871120,"byte_end":8871192,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871197,"byte_end":8871270,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871275,"byte_end":8871349,"line_start":154,"line_end":154,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871354,"byte_end":8871426,"line_start":155,"line_end":155,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871431,"byte_end":8871468,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871473,"byte_end":8871476,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871481,"byte_end":8871495,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871500,"byte_end":8871503,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871508,"byte_end":8871540,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871545,"byte_end":8871548,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871553,"byte_end":8871560,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871565,"byte_end":8871594,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871599,"byte_end":8871602,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871607,"byte_end":8871625,"line_start":165,"line_end":165,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871630,"byte_end":8871651,"line_start":166,"line_end":166,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871656,"byte_end":8871698,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871703,"byte_end":8871706,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871711,"byte_end":8871744,"line_start":169,"line_end":169,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871749,"byte_end":8871789,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871794,"byte_end":8871843,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871848,"byte_end":8871861,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871866,"byte_end":8871877,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871882,"byte_end":8871885,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871890,"byte_end":8871914,"line_start":175,"line_end":175,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871919,"byte_end":8871966,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8871971,"byte_end":8872024,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8872029,"byte_end":8872038,"line_start":178,"line_end":178,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8872043,"byte_end":8872048,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8872053,"byte_end":8872060,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8872477,"byte_end":8872488,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5404},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875605,"byte_end":8875611,"line_start":310,"line_end":310,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873720,"byte_end":8873778,"line_start":243,"line_end":243,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873783,"byte_end":8873786,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873791,"byte_end":8873865,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873870,"byte_end":8873904,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873909,"byte_end":8873912,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873917,"byte_end":8873982,"line_start":248,"line_end":248,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8873987,"byte_end":8874059,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874064,"byte_end":8874067,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874072,"byte_end":8874084,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874089,"byte_end":8874092,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874097,"byte_end":8874145,"line_start":253,"line_end":253,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874150,"byte_end":8874153,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874158,"byte_end":8874184,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874189,"byte_end":8874219,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874224,"byte_end":8874227,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874232,"byte_end":8874246,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874251,"byte_end":8874254,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874259,"byte_end":8874274,"line_start":260,"line_end":260,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874279,"byte_end":8874282,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874287,"byte_end":8874294,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874299,"byte_end":8874328,"line_start":263,"line_end":263,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874333,"byte_end":8874336,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874341,"byte_end":8874359,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874364,"byte_end":8874385,"line_start":266,"line_end":266,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874390,"byte_end":8874442,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874447,"byte_end":8874450,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874455,"byte_end":8874488,"line_start":269,"line_end":269,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874493,"byte_end":8874514,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874519,"byte_end":8874530,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874535,"byte_end":8874538,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874543,"byte_end":8874569,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874574,"byte_end":8874615,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874620,"byte_end":8874625,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874630,"byte_end":8874637,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874642,"byte_end":8874645,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874650,"byte_end":8874672,"line_start":278,"line_end":278,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874677,"byte_end":8874680,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874685,"byte_end":8874692,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874697,"byte_end":8874726,"line_start":281,"line_end":281,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874731,"byte_end":8874769,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874774,"byte_end":8874777,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ use futures::{select, FutureExt};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874782,"byte_end":8874819,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874824,"byte_end":8874827,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874832,"byte_end":8874866,"line_start":286,"line_end":286,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874871,"byte_end":8874922,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874927,"byte_end":8874952,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874957,"byte_end":8874962,"line_start":289,"line_end":289,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874967,"byte_end":8874970,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874975,"byte_end":8874993,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8874998,"byte_end":8875019,"line_start":292,"line_end":292,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875024,"byte_end":8875070,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875075,"byte_end":8875078,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875083,"byte_end":8875116,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/         select! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875121,"byte_end":8875142,"line_start":296,"line_end":296,"column_start":5,"column_end":26}},{"value":"/             _ = tx.closed().fuse() => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875147,"byte_end":8875190,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875195,"byte_end":8875270,"line_start":298,"line_end":298,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875275,"byte_end":8875292,"line_start":299,"line_end":299,"column_start":5,"column_end":22}},{"value":"/             value = compute().fuse() => {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875297,"byte_end":8875342,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/                 tx.send(value).unwrap()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875347,"byte_end":8875390,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875395,"byte_end":8875412,"line_start":302,"line_end":302,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875417,"byte_end":8875430,"line_start":303,"line_end":303,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875435,"byte_end":8875446,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875451,"byte_end":8875454,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875459,"byte_end":8875495,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875500,"byte_end":8875565,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875570,"byte_end":8875575,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875580,"byte_end":8875587,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5409},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876481,"byte_end":8876490,"line_start":343,"line_end":343,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875722,"byte_end":8875796,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875801,"byte_end":8875804,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875809,"byte_end":8875883,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875888,"byte_end":8875922,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875927,"byte_end":8875930,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8875935,"byte_end":8876010,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876015,"byte_end":8876018,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876023,"byte_end":8876049,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876054,"byte_end":8876084,"line_start":324,"line_end":324,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876089,"byte_end":8876092,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876097,"byte_end":8876111,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876116,"byte_end":8876119,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876124,"byte_end":8876131,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876136,"byte_end":8876165,"line_start":329,"line_end":329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876170,"byte_end":8876173,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876178,"byte_end":8876196,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876201,"byte_end":8876222,"line_start":332,"line_end":332,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876227,"byte_end":8876269,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876274,"byte_end":8876277,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876282,"byte_end":8876315,"line_start":335,"line_end":335,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876320,"byte_end":8876323,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876328,"byte_end":8876345,"line_start":337,"line_end":337,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876350,"byte_end":8876353,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876358,"byte_end":8876390,"line_start":339,"line_end":339,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876395,"byte_end":8876447,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876452,"byte_end":8876457,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876462,"byte_end":8876469,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878432,"byte_end":8878437,"line_start":415,"line_end":415,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876830,"byte_end":8876897,"line_start":360,"line_end":360,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876902,"byte_end":8876905,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876910,"byte_end":8876984,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, `Receiver::poll`] should be called to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876989,"byte_end":8877062,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877067,"byte_end":8877133,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877138,"byte_end":8877152,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877157,"byte_end":8877160,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877165,"byte_end":8877241,"line_start":367,"line_end":367,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877246,"byte_end":8877309,"line_start":368,"line_end":368,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877314,"byte_end":8877317,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877322,"byte_end":8877344,"line_start":370,"line_end":370,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877349,"byte_end":8877352,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877357,"byte_end":8877371,"line_start":372,"line_end":372,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877376,"byte_end":8877379,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877384,"byte_end":8877419,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877424,"byte_end":8877427,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877432,"byte_end":8877439,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877444,"byte_end":8877473,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877478,"byte_end":8877528,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877533,"byte_end":8877536,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877541,"byte_end":8877559,"line_start":380,"line_end":380,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877564,"byte_end":8877585,"line_start":381,"line_end":381,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877590,"byte_end":8877636,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877641,"byte_end":8877644,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877649,"byte_end":8877682,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877687,"byte_end":8877690,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877695,"byte_end":8877714,"line_start":386,"line_end":386,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877719,"byte_end":8877722,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877727,"byte_end":8877759,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877764,"byte_end":8877816,"line_start":389,"line_end":389,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877821,"byte_end":8877824,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877829,"byte_end":8877858,"line_start":391,"line_end":391,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877863,"byte_end":8877906,"line_start":392,"line_end":392,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877911,"byte_end":8877943,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877948,"byte_end":8877957,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877962,"byte_end":8877967,"line_start":395,"line_end":395,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877972,"byte_end":8877979,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877984,"byte_end":8877987,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8877992,"byte_end":8878043,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878048,"byte_end":8878051,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878056,"byte_end":8878063,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878068,"byte_end":8878097,"line_start":401,"line_end":401,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878102,"byte_end":8878105,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878110,"byte_end":8878128,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878133,"byte_end":8878154,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878159,"byte_end":8878205,"line_start":405,"line_end":405,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878210,"byte_end":8878213,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878218,"byte_end":8878267,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878272,"byte_end":8878275,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878280,"byte_end":8878299,"line_start":409,"line_end":409,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878304,"byte_end":8878307,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878312,"byte_end":8878353,"line_start":411,"line_end":411,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878358,"byte_end":8878398,"line_start":412,"line_end":412,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878403,"byte_end":8878408,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878413,"byte_end":8878420,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5416},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880420,"byte_end":8880428,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"fn (&mut self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878535,"byte_end":8878567,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878572,"byte_end":8878575,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878580,"byte_end":8878653,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878658,"byte_end":8878724,"line_start":423,"line_end":423,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878729,"byte_end":8878753,"line_start":424,"line_end":424,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878758,"byte_end":8878761,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878766,"byte_end":8878832,"line_start":426,"line_end":426,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878837,"byte_end":8878859,"line_start":427,"line_end":427,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878864,"byte_end":8878867,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878872,"byte_end":8878884,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878889,"byte_end":8878892,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878897,"byte_end":8878948,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8878953,"byte_end":8879016,"line_start":432,"line_end":432,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879021,"byte_end":8879096,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879101,"byte_end":8879115,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879120,"byte_end":8879123,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879128,"byte_end":8879142,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879147,"byte_end":8879150,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879155,"byte_end":8879205,"line_start":438,"line_end":438,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879210,"byte_end":8879213,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879218,"byte_end":8879225,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879230,"byte_end":8879259,"line_start":441,"line_end":441,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879264,"byte_end":8879314,"line_start":442,"line_end":442,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879319,"byte_end":8879322,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879327,"byte_end":8879345,"line_start":444,"line_end":444,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879350,"byte_end":8879371,"line_start":445,"line_end":445,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879376,"byte_end":8879422,"line_start":446,"line_end":446,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879427,"byte_end":8879430,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879435,"byte_end":8879464,"line_start":448,"line_end":448,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879469,"byte_end":8879514,"line_start":449,"line_end":449,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879519,"byte_end":8879561,"line_start":450,"line_end":450,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879566,"byte_end":8879598,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879603,"byte_end":8879612,"line_start":452,"line_end":452,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879617,"byte_end":8879620,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879625,"byte_end":8879648,"line_start":454,"line_end":454,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879653,"byte_end":8879687,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879692,"byte_end":8879695,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879700,"byte_end":8879729,"line_start":457,"line_end":457,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879734,"byte_end":8879786,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879791,"byte_end":8879823,"line_start":459,"line_end":459,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879828,"byte_end":8879837,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879842,"byte_end":8879847,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879852,"byte_end":8879859,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879864,"byte_end":8879867,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879872,"byte_end":8879933,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879938,"byte_end":8879941,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879946,"byte_end":8879953,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879958,"byte_end":8879987,"line_start":467,"line_end":467,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8879992,"byte_end":8880042,"line_start":468,"line_end":468,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880047,"byte_end":8880050,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880055,"byte_end":8880073,"line_start":470,"line_end":470,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880078,"byte_end":8880099,"line_start":471,"line_end":471,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880104,"byte_end":8880156,"line_start":472,"line_end":472,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880161,"byte_end":8880164,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880169,"byte_end":8880186,"line_start":474,"line_end":474,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880191,"byte_end":8880194,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880199,"byte_end":8880228,"line_start":476,"line_end":476,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880233,"byte_end":8880287,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880292,"byte_end":8880335,"line_start":478,"line_end":478,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880340,"byte_end":8880372,"line_start":479,"line_end":479,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880377,"byte_end":8880386,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880391,"byte_end":8880396,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8880401,"byte_end":8880408,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6202},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948109,"byte_end":8948118,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":6203}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit aquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit aquisition.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947458,"byte_end":8947523,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947524,"byte_end":8947527,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947528,"byte_end":8947603,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947604,"byte_end":8947680,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947681,"byte_end":8947761,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947762,"byte_end":8947771,"line_start":9,"line_end":9,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947772,"byte_end":8947775,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947776,"byte_end":8947849,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947850,"byte_end":8947929,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8947930,"byte_end":8948008,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948009,"byte_end":8948080,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6206},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948255,"byte_end":8948270,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":6208},{"krate":0,"index":6209}],"decl_id":null,"docs":" A permit from the semaphore\n","sig":null,"attributes":[{"value":"/ A permit from the semaphore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948183,"byte_end":8948214,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"must_use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948215,"byte_end":8948226,"line_start":22,"line_end":22,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6213},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948569,"byte_end":8948584,"line_start":36,"line_end":36,"column_start":12,"column_end":27},"name":"TryAcquireError","qualname":"::sync::semaphore::TryAcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948322,"byte_end":8948386,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948387,"byte_end":8948390,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A `try_acquire` operation can only fail if the semaphore has no available","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948391,"byte_end":8948468,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ permits.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948469,"byte_end":8948481,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948482,"byte_end":8948485,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: Semaphore::try_acquire","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8948486,"byte_end":8948540,"line_start":34,"line_end":34,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5713},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949137,"byte_end":8949140,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"fn (permits: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949063,"byte_end":8949125,"line_start":54,"line_end":54,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5714},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949315,"byte_end":8949332,"line_start":62,"line_end":62,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949252,"byte_end":8949303,"line_start":61,"line_end":61,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949456,"byte_end":8949467,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"fn (&self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.\n","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949402,"byte_end":8949444,"line_start":66,"line_end":66,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5716},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949586,"byte_end":8949593,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"fn (&self) -> SemaphorePermit<'_>","parent":null,"children":[],"decl_id":null,"docs":" Acquires permit from the semaphore\n","sig":null,"attributes":[{"value":"/ Acquires permit from the semaphore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949530,"byte_end":8949568,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":5719},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949840,"byte_end":8949851,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"fn (&self) -> Result<SemaphorePermit<'_>, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit form the semaphore\n","sig":null,"attributes":[{"value":"/ Tries to acquire a permit form the semaphore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949780,"byte_end":8949828,"line_start":80,"line_end":80,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950342,"byte_end":8950348,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950167,"byte_end":8950237,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950242,"byte_end":8950311,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950316,"byte_end":8950330,"line_start":95,"line_end":95,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6218},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953379,"byte_end":8953385,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":6221}],"decl_id":null,"docs":" An asynchronous reader-writer lock","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8950749,"byte_end":8950787,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8950788,"byte_end":8950791,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8950792,"byte_end":8950869,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8950870,"byte_end":8950949,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8950950,"byte_end":8951029,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951030,"byte_end":8951088,"line_start":17,"line_end":17,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951089,"byte_end":8951092,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951093,"byte_end":8951171,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951172,"byte_end":8951250,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951251,"byte_end":8951329,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951330,"byte_end":8951395,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951396,"byte_end":8951399,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951400,"byte_end":8951464,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951465,"byte_end":8951537,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951538,"byte_end":8951618,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951619,"byte_end":8951699,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951700,"byte_end":8951780,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951781,"byte_end":8951850,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951851,"byte_end":8951921,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951922,"byte_end":8951960,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951961,"byte_end":8951964,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8951965,"byte_end":8952042,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952043,"byte_end":8952128,"line_start":34,"line_end":34,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](https://doc.rust-lang.org/std/ops/trait.Deref.html)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952129,"byte_end":8952238,"line_start":35,"line_end":35,"column_start":1,"column_end":110}},{"value":"/ (and [`DerefMut`](https://doc.rust-lang.org/std/ops/trait.DerefMut.html)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952239,"byte_end":8952315,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952316,"byte_end":8952388,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952389,"byte_end":8952392,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952393,"byte_end":8952407,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952408,"byte_end":8952411,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952412,"byte_end":8952419,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952420,"byte_end":8952448,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952449,"byte_end":8952452,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952453,"byte_end":8952471,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952472,"byte_end":8952493,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952494,"byte_end":8952528,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952529,"byte_end":8952532,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952533,"byte_end":8952581,"line_start":48,"line_end":48,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952582,"byte_end":8952591,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952592,"byte_end":8952631,"line_start":50,"line_end":50,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952632,"byte_end":8952671,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952672,"byte_end":8952703,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952704,"byte_end":8952735,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952736,"byte_end":8952785,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952786,"byte_end":8952789,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952790,"byte_end":8952841,"line_start":56,"line_end":56,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952842,"byte_end":8952851,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952852,"byte_end":8952895,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952896,"byte_end":8952916,"line_start":59,"line_end":59,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952917,"byte_end":8952947,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952948,"byte_end":8952987,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952988,"byte_end":8952993,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8952994,"byte_end":8953001,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953002,"byte_end":8953005,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct.Mutex.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953006,"byte_end":8953038,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953039,"byte_end":8953073,"line_start":66,"line_end":66,"column_start":1,"column_end":35}},{"value":"/ [`RwLockReadGuard`]: struct.RwLockReadGuard.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953074,"byte_end":8953126,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ [`RwLockWriteGuard`]: struct.RwLockWriteGuard.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953127,"byte_end":8953181,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/ [`Send`]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953182,"byte_end":8953248,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953249,"byte_end":8953350,"line_start":70,"line_end":70,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":6225},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953750,"byte_end":8953765,"line_start":88,"line_end":88,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6228},{"krate":0,"index":6229}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953511,"byte_end":8953583,"line_start":80,"line_end":80,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953584,"byte_end":8953596,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953597,"byte_end":8953600,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953601,"byte_end":8953656,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953657,"byte_end":8953672,"line_start":84,"line_end":84,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953673,"byte_end":8953676,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ [`read`]: struct.RwLock.html#method.read","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953677,"byte_end":8953721,"line_start":86,"line_end":86,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6234},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954124,"byte_end":8954140,"line_start":102,"line_end":102,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6237},{"krate":0,"index":6238}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953839,"byte_end":8953915,"line_start":93,"line_end":93,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953916,"byte_end":8953928,"line_start":94,"line_end":94,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953929,"byte_end":8953932,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] and method","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953933,"byte_end":8953990,"line_start":96,"line_end":96,"column_start":1,"column_end":58}},{"value":"/ on [`RwLock`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8953991,"byte_end":8954009,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954010,"byte_end":8954013,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`write`]: struct.RwLock.html#method.write","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954014,"byte_end":8954060,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct.RwLock.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954061,"byte_end":8954095,"line_start":100,"line_end":100,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956146,"byte_end":8956149,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"fn (value: T) -> RwLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955936,"byte_end":8955999,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956004,"byte_end":8956007,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956012,"byte_end":8956026,"line_start":165,"line_end":165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956031,"byte_end":8956034,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956039,"byte_end":8956046,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956051,"byte_end":8956079,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956084,"byte_end":8956087,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956092,"byte_end":8956122,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956127,"byte_end":8956134,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957332,"byte_end":8957336,"line_start":210,"line_end":210,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"fn (&self) -> RwLockReadGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with shared read access, causing the current task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956294,"byte_end":8956365,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956370,"byte_end":8956416,"line_start":180,"line_end":180,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956421,"byte_end":8956424,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no more writers which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956429,"byte_end":8956498,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ hold the lock. There may be other readers currently inside the lock when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956503,"byte_end":8956579,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ this method returns.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956584,"byte_end":8956608,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956613,"byte_end":8956616,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956621,"byte_end":8956635,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956640,"byte_end":8956643,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956648,"byte_end":8956655,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956660,"byte_end":8956683,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956688,"byte_end":8956716,"line_start":190,"line_end":190,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956721,"byte_end":8956724,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956729,"byte_end":8956747,"line_start":192,"line_end":192,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956752,"byte_end":8956773,"line_start":193,"line_end":193,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956778,"byte_end":8956822,"line_start":194,"line_end":194,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956827,"byte_end":8956861,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956866,"byte_end":8956869,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956874,"byte_end":8956908,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956913,"byte_end":8956939,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956944,"byte_end":8956947,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956952,"byte_end":8956985,"line_start":200,"line_end":200,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8956990,"byte_end":8957060,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957065,"byte_end":8957105,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957110,"byte_end":8957140,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has paniced\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957145,"byte_end":8957201,"line_start":204,"line_end":204,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957206,"byte_end":8957209,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957214,"byte_end":8957272,"line_start":206,"line_end":206,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957277,"byte_end":8957293,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957298,"byte_end":8957302,"line_start":208,"line_end":208,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957307,"byte_end":8957314,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5764},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958367,"byte_end":8958372,"line_start":241,"line_end":241,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"fn (&self) -> RwLockWriteGuard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this rwlock with exclusive write access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this rwlock with exclusive write access, causing the current task","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957726,"byte_end":8957801,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957806,"byte_end":8957852,"line_start":220,"line_end":220,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957857,"byte_end":8957860,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This function will not return while other writers or other readers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957865,"byte_end":8957935,"line_start":222,"line_end":222,"column_start":5,"column_end":75}},{"value":"/ currently have access to the lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957940,"byte_end":8957978,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957983,"byte_end":8957986,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this rwlock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8957991,"byte_end":8958064,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ when dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958069,"byte_end":8958086,"line_start":226,"line_end":226,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958091,"byte_end":8958094,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958099,"byte_end":8958113,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958118,"byte_end":8958121,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958126,"byte_end":8958133,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958138,"byte_end":8958166,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958171,"byte_end":8958174,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958179,"byte_end":8958197,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958202,"byte_end":8958223,"line_start":234,"line_end":234,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958228,"byte_end":8958260,"line_start":235,"line_end":235,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958265,"byte_end":8958268,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958273,"byte_end":8958310,"line_start":237,"line_end":237,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958315,"byte_end":8958328,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958333,"byte_end":8958337,"line_start":239,"line_end":239,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958342,"byte_end":8958349,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958887,"byte_end":8958897,"line_start":254,"line_end":254,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958822,"byte_end":8958875,"line_start":253,"line_end":253,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":5836},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5837},{"krate":0,"index":5838},{"krate":0,"index":5839},{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5845},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":6252},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6262},{"krate":0,"index":6265},{"krate":0,"index":6269},{"krate":0,"index":5857},{"krate":0,"index":6279},{"krate":0,"index":6285},{"krate":0,"index":5864},{"krate":0,"index":6288},{"krate":0,"index":6293},{"krate":0,"index":6291},{"krate":0,"index":6295},{"krate":0,"index":6298},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5870},{"krate":0,"index":5875},{"krate":0,"index":5882},{"krate":0,"index":5887},{"krate":0,"index":5890},{"krate":0,"index":5893},{"krate":0,"index":5901},{"krate":0,"index":5903},{"krate":0,"index":5906},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5915},{"krate":0,"index":5917},{"krate":0,"index":5918},{"krate":0,"index":5921}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18464,"byte_end":18488,"line_start":198,"line_end":198,"column_start":13,"column_end":37}},{"value":"! A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972356,"byte_end":8972435,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972436,"byte_end":8972446,"line_start":2,"line_end":2,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972447,"byte_end":8972450,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972451,"byte_end":8972527,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"! points in the code base, for example, changes to configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972528,"byte_end":8972602,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972603,"byte_end":8972606,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! # Usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972607,"byte_end":8972618,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972619,"byte_end":8972622,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972623,"byte_end":8972690,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"! the producer and sender halves of the channel. The channel is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972691,"byte_end":8972756,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"! created with an initial value. [`Receiver::recv`] will always","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972757,"byte_end":8972822,"line_start":11,"line_end":11,"column_start":1,"column_end":66}},{"value":"! be ready upon creation and will yield either this initial value or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972823,"byte_end":8972893,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"! the latest value that has been sent by `Sender`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972894,"byte_end":8972946,"line_start":13,"line_end":13,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972947,"byte_end":8972950,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Calls to [`Receiver::recv`] will always yield the latest value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8972951,"byte_end":8973018,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973019,"byte_end":8973022,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973023,"byte_end":8973037,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973038,"byte_end":8973041,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973042,"byte_end":8973049,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"! use tokio::sync::watch;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973050,"byte_end":8973077,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973078,"byte_end":8973081,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973082,"byte_end":8973146,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"!     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973147,"byte_end":8973198,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973199,"byte_end":8973202,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"!     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973203,"byte_end":8973236,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!         while let Some(value) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973237,"byte_end":8973290,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"!             println!(\"received = {:?}\", value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973291,"byte_end":8973342,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973343,"byte_end":8973356,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973357,"byte_end":8973368,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973369,"byte_end":8973372,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!     tx.broadcast(\"world\")?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973373,"byte_end":8973404,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"! # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973405,"byte_end":8973417,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973418,"byte_end":8973425,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973426,"byte_end":8973433,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973434,"byte_end":8973437,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Closing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973438,"byte_end":8973451,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973452,"byte_end":8973455,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! [`Sender::closed`] allows the producer to detect when all [`Receiver`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973456,"byte_end":8973530,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"! handles have been dropped. This indicates that there is no further interest","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973531,"byte_end":8973610,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! in the values being produced and work can be stopped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973611,"byte_end":8973668,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973669,"byte_end":8973672,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! # Thread safety","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973673,"byte_end":8973692,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973693,"byte_end":8973696,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973697,"byte_end":8973777,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"! threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973778,"byte_end":8973857,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"! handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973858,"byte_end":8973930,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973931,"byte_end":8973934,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973935,"byte_end":8973977,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"! [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8973978,"byte_end":8974024,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"! [`Receiver::recv`]: crate::sync::watch::Receiver::recv","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974025,"byte_end":8974083,"line_start":50,"line_end":50,"column_start":1,"column_end":59}},{"value":"! [`channel`]: crate::sync::watch::channel","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974084,"byte_end":8974128,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"! [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974129,"byte_end":8974187,"line_start":52,"line_end":52,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":6252},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974685,"byte_end":8974693,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct.Sender.html).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct.Sender.html).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974509,"byte_end":8974580,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974581,"byte_end":8974584,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974585,"byte_end":8974656,"line_start":67,"line_end":67,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6259},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975010,"byte_end":8975016,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":6261}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct.Receiver.html).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct.Receiver.html).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974835,"byte_end":8974905,"line_start":77,"line_end":77,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974906,"byte_end":8974909,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn.channel.html) function.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8974910,"byte_end":8974981,"line_start":79,"line_end":79,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":6265},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975337,"byte_end":8975340,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":6268}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975054,"byte_end":8975096,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975097,"byte_end":8975100,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975101,"byte_end":8975177,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975178,"byte_end":8975257,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975258,"byte_end":8975308,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":5857},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975396,"byte_end":8975401,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":5858},{"krate":0,"index":6273},{"krate":0,"index":6276},{"krate":0,"index":5859},{"krate":0,"index":5862}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"! Watch error types","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975408,"byte_end":8975429,"line_start":96,"line_end":96,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":6273},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975537,"byte_end":8975546,"line_start":102,"line_end":102,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":6275}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975454,"byte_end":8975500,"line_start":100,"line_end":100,"column_start":5,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":5866},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977335,"byte_end":8977342,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"fn <T> (init: T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976557,"byte_end":8976633,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976634,"byte_end":8976637,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976638,"byte_end":8976720,"line_start":152,"line_end":152,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976721,"byte_end":8976797,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976798,"byte_end":8976834,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976835,"byte_end":8976838,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976839,"byte_end":8976853,"line_start":156,"line_end":156,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976854,"byte_end":8976857,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976858,"byte_end":8976865,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976866,"byte_end":8976893,"line_start":159,"line_end":159,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976894,"byte_end":8976897,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976898,"byte_end":8976962,"line_start":161,"line_end":161,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8976963,"byte_end":8977014,"line_start":162,"line_end":162,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977015,"byte_end":8977018,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977019,"byte_end":8977052,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"/         while let Some(value) = rx.recv().await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977053,"byte_end":8977106,"line_start":165,"line_end":165,"column_start":1,"column_end":54}},{"value":"/             println!(\"received = {:?}\", value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977107,"byte_end":8977158,"line_start":166,"line_end":166,"column_start":1,"column_end":52}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977159,"byte_end":8977172,"line_start":167,"line_end":167,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977173,"byte_end":8977184,"line_start":168,"line_end":168,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977185,"byte_end":8977188,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     tx.broadcast(\"world\")?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977189,"byte_end":8977220,"line_start":170,"line_end":170,"column_start":1,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977221,"byte_end":8977233,"line_start":171,"line_end":171,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977234,"byte_end":8977241,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977242,"byte_end":8977249,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977250,"byte_end":8977253,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct.Sender.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977254,"byte_end":8977288,"line_start":175,"line_end":175,"column_start":1,"column_end":35}},{"value":"/ [`Receiver`]: struct.Receiver.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8977289,"byte_end":8977327,"line_start":176,"line_end":176,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":5872},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978511,"byte_end":8978517,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"fn (&self) -> Ref<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978049,"byte_end":8978104,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978109,"byte_end":8978112,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978117,"byte_end":8978193,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978198,"byte_end":8978274,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978279,"byte_end":8978310,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978315,"byte_end":8978318,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978323,"byte_end":8978337,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978342,"byte_end":8978345,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978350,"byte_end":8978357,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978362,"byte_end":8978389,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978394,"byte_end":8978397,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978402,"byte_end":8978444,"line_start":216,"line_end":216,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978449,"byte_end":8978487,"line_start":217,"line_end":217,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978492,"byte_end":8978499,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5873},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978677,"byte_end":8978690,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"poll_recv_ref","qualname":"<Receiver<T>>::poll_recv_ref","value":"fn <'a> (&'a mut self, cx: &mut Context<'_>) -> Poll<Option<Ref<'a, T>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5877},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980411,"byte_end":8980415,"line_start":282,"line_end":282,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to clone the latest value sent via the channel.","sig":null,"attributes":[{"value":"/ Attempts to clone the latest value sent via the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979329,"byte_end":8979389,"line_start":249,"line_end":249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979394,"byte_end":8979397,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If this is the first time the function is called on a `Receiver`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979402,"byte_end":8979470,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ instance, then the function completes immediately with the **current**","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979475,"byte_end":8979549,"line_start":252,"line_end":252,"column_start":5,"column_end":79}},{"value":"/ value held by the channel. On the next call, the function waits until","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979554,"byte_end":8979627,"line_start":253,"line_end":253,"column_start":5,"column_end":78}},{"value":"/ a new value is sent in the channel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979632,"byte_end":8979671,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979676,"byte_end":8979679,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ `None` is returned if the `Sender` half is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979684,"byte_end":8979739,"line_start":256,"line_end":256,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979744,"byte_end":8979747,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979752,"byte_end":8979766,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979771,"byte_end":8979774,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979779,"byte_end":8979786,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979791,"byte_end":8979818,"line_start":261,"line_end":261,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979823,"byte_end":8979826,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979831,"byte_end":8979849,"line_start":263,"line_end":263,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979854,"byte_end":8979875,"line_start":264,"line_end":264,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979880,"byte_end":8979931,"line_start":265,"line_end":265,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979936,"byte_end":8979939,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979944,"byte_end":8979985,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"hello\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979990,"byte_end":8980021,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980026,"byte_end":8980029,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980034,"byte_end":8980067,"line_start":270,"line_end":270,"column_start":5,"column_end":38}},{"value":"/         tx.broadcast(\"goodbye\").unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980072,"byte_end":8980117,"line_start":271,"line_end":271,"column_start":5,"column_end":50}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980122,"byte_end":8980133,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980138,"byte_end":8980141,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     // Waits for the new task to spawn and send the value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980146,"byte_end":8980208,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/     let v = rx.recv().await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980213,"byte_end":8980254,"line_start":275,"line_end":275,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(v, \"goodbye\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980259,"byte_end":8980292,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980297,"byte_end":8980300,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/     let v = rx.recv().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980305,"byte_end":8980337,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     assert!(v.is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980342,"byte_end":8980371,"line_start":279,"line_end":279,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980376,"byte_end":8980381,"line_start":280,"line_end":280,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980386,"byte_end":8980393,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5895},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981481,"byte_end":8981490,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Sender<T>>::broadcast","value":"fn (&self, value: T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Broadcasts a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Broadcasts a new value via the channel, notifying all receivers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981401,"byte_end":8981469,"line_start":321,"line_end":321,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5896},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982353,"byte_end":8982359,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982142,"byte_end":8982188,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982193,"byte_end":8982196,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982201,"byte_end":8982275,"line_start":347,"line_end":347,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982280,"byte_end":8982335,"line_start":348,"line_end":348,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6300},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6302},{"krate":0,"index":6305},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6316},{"krate":0,"index":6327},{"krate":0,"index":6403},{"krate":0,"index":6406},{"krate":0,"index":6467}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18776,"byte_end":18803,"line_start":214,"line_end":214,"column_start":13,"column_end":40}},{"value":"! Asynchronous green-threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984212,"byte_end":8984243,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984244,"byte_end":8984247,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! ## What are Tasks?","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984248,"byte_end":8984270,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984271,"byte_end":8984274,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984275,"byte_end":8984356,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"! to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984357,"byte_end":8984437,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"! managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984438,"byte_end":8984518,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"! [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984519,"byte_end":8984593,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"! coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984594,"byte_end":8984669,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"! something similar.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984670,"byte_end":8984692,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984693,"byte_end":8984696,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! Key points about tasks include:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984697,"byte_end":8984732,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984733,"byte_end":8984736,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984737,"byte_end":8984811,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"!   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984812,"byte_end":8984891,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"!   between tasks does not require a context switch and has fairly low","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984892,"byte_end":8984964,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"!   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8984965,"byte_end":8985040,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"!   quite cheap, especially compared to OS threads.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985041,"byte_end":8985094,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985095,"byte_end":8985098,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985099,"byte_end":8985176,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985177,"byte_end":8985250,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"!   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985251,"byte_end":8985330,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"!   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985331,"byte_end":8985409,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"!   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985410,"byte_end":8985482,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"!   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985483,"byte_end":8985558,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"!   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985559,"byte_end":8985633,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"!   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985634,"byte_end":8985709,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"!   executing the next task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985710,"byte_end":8985740,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985741,"byte_end":8985744,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985745,"byte_end":8985823,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"!   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985824,"byte_end":8985899,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"!   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985900,"byte_end":8985977,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"!   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8985978,"byte_end":8986057,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"!   should generally not perform system calls or other operations that could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986058,"byte_end":8986136,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986137,"byte_end":8986212,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"!   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986213,"byte_end":8986288,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"!   running blocking operations in an asynchronous context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986289,"byte_end":8986350,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986351,"byte_end":8986354,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! [rt]: crate::runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986355,"byte_end":8986379,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"! [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986380,"byte_end":8986444,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"! [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986445,"byte_end":8986505,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"! [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986506,"byte_end":8986595,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"! [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986596,"byte_end":8986684,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986685,"byte_end":8986688,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! ## Working with Tasks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986689,"byte_end":8986714,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986715,"byte_end":8986718,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! This module provides the following APIs for working with tasks:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986719,"byte_end":8986786,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986787,"byte_end":8986790,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! ### Spawning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986791,"byte_end":8986807,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986808,"byte_end":8986811,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986812,"byte_end":8986891,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"! function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986892,"byte_end":8986971,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"! [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8986972,"byte_end":8987051,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"! [future], and creates a new task to run that work concurrently:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987052,"byte_end":8987119,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987120,"byte_end":8987123,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987124,"byte_end":8987131,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987132,"byte_end":8987152,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987153,"byte_end":8987156,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! # async fn doc() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987157,"byte_end":8987179,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"! task::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987180,"byte_end":8987203,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"!     // perform some work here...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987204,"byte_end":8987240,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987241,"byte_end":8987248,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987249,"byte_end":8987256,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987257,"byte_end":8987264,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987265,"byte_end":8987268,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987269,"byte_end":8987348,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"! A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987349,"byte_end":8987427,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! the spawned task. For example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987428,"byte_end":8987462,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987463,"byte_end":8987466,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987467,"byte_end":8987474,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987475,"byte_end":8987495,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987496,"byte_end":8987499,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987500,"byte_end":8987580,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987581,"byte_end":8987615,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"!     // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987616,"byte_end":8987630,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!     \"hello world!\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987631,"byte_end":8987653,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987654,"byte_end":8987661,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987662,"byte_end":8987665,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987666,"byte_end":8987676,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987677,"byte_end":8987680,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! // Await the result of the spawned task.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987681,"byte_end":8987725,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987726,"byte_end":8987755,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"hello world!\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987756,"byte_end":8987795,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"! # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987796,"byte_end":8987808,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987809,"byte_end":8987816,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987817,"byte_end":8987824,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987825,"byte_end":8987828,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987829,"byte_end":8987909,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"! task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987910,"byte_end":8987986,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"! example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8987987,"byte_end":8987999,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988000,"byte_end":8988003,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988004,"byte_end":8988011,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988012,"byte_end":8988032,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988033,"byte_end":8988036,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988037,"byte_end":8988075,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"! let join = task::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988076,"byte_end":8988110,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"!     panic!(\"something bad happened!\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988111,"byte_end":8988152,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988153,"byte_end":8988160,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988161,"byte_end":8988164,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"! // The returned result indicates that the task failed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988165,"byte_end":8988223,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"! assert!(join.await.is_err());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988224,"byte_end":8988257,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988258,"byte_end":8988265,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988266,"byte_end":8988273,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988274,"byte_end":8988277,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt-core\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988278,"byte_end":8988351,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"! feature flag is enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988352,"byte_end":8988380,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988381,"byte_end":8988384,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988385,"byte_end":8988426,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"! [future]: std::future::Future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988427,"byte_end":8988460,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"! [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988461,"byte_end":8988507,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"! [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988508,"byte_end":8988551,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"! [thread_join]: std::thread::JoinHandle","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988552,"byte_end":8988594,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"! [`JoinError`]: crate::task::JoinError","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988595,"byte_end":8988636,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988637,"byte_end":8988640,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ### Blocking and Yielding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988641,"byte_end":8988670,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988671,"byte_end":8988674,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988675,"byte_end":8988755,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"! operations that can block. A blocking operation performed in a task running","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988756,"byte_end":8988835,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"! on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988836,"byte_end":8988915,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! preventing other tasks from running.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988916,"byte_end":8988956,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988957,"byte_end":8988960,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8988961,"byte_end":8989035,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"! asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989036,"byte_end":8989116,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989117,"byte_end":8989120,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! #### spawn_blocking","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989121,"byte_end":8989144,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989145,"byte_end":8989148,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989149,"byte_end":8989229,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"! discussed in the previous section, but rather than spawning an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989230,"byte_end":8989296,"line_start":128,"line_end":128,"column_start":1,"column_end":67}},{"value":"! _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989297,"byte_end":8989364,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"! _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989365,"byte_end":8989439,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"! example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989440,"byte_end":8989452,"line_start":131,"line_end":131,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989453,"byte_end":8989456,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989457,"byte_end":8989464,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989465,"byte_end":8989485,"line_start":134,"line_end":134,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989486,"byte_end":8989489,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989490,"byte_end":8989513,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! task::spawn_blocking(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989514,"byte_end":8989543,"line_start":137,"line_end":137,"column_start":1,"column_end":30}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989544,"byte_end":8989606,"line_start":138,"line_end":138,"column_start":1,"column_end":63}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989607,"byte_end":8989614,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989615,"byte_end":8989622,"line_start":140,"line_end":140,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989623,"byte_end":8989630,"line_start":141,"line_end":141,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989631,"byte_end":8989634,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989635,"byte_end":8989709,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"! which we can use to await the result of the blocking operation:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989710,"byte_end":8989777,"line_start":144,"line_end":144,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989778,"byte_end":8989781,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989782,"byte_end":8989793,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"! # use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989794,"byte_end":8989816,"line_start":147,"line_end":147,"column_start":1,"column_end":23}},{"value":"! # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989817,"byte_end":8989881,"line_start":148,"line_end":148,"column_start":1,"column_end":65}},{"value":"! let join = task::spawn_blocking(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989882,"byte_end":8989922,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989923,"byte_end":8989985,"line_start":150,"line_end":150,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8989986,"byte_end":8990014,"line_start":151,"line_end":151,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990015,"byte_end":8990022,"line_start":152,"line_end":152,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990023,"byte_end":8990026,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! let result = join.await?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990027,"byte_end":8990056,"line_start":154,"line_end":154,"column_start":1,"column_end":30}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990057,"byte_end":8990102,"line_start":155,"line_end":155,"column_start":1,"column_end":46}},{"value":"! # Ok(())","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990103,"byte_end":8990115,"line_start":156,"line_end":156,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990116,"byte_end":8990123,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990124,"byte_end":8990131,"line_start":158,"line_end":158,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990132,"byte_end":8990135,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"! #### block_in_place","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990136,"byte_end":8990159,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990160,"byte_end":8990163,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"! When using the [threaded runtime][rt-threaded], the [`task::block_in_place`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990164,"byte_end":8990244,"line_start":162,"line_end":162,"column_start":1,"column_end":81}},{"value":"! function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990245,"byte_end":8990319,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"! allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990320,"byte_end":8990396,"line_start":164,"line_end":164,"column_start":1,"column_end":77}},{"value":"! `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990397,"byte_end":8990471,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"! _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990472,"byte_end":8990551,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"! that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990552,"byte_end":8990634,"line_start":167,"line_end":167,"column_start":1,"column_end":83}},{"value":"! context switches.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990635,"byte_end":8990656,"line_start":168,"line_end":168,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990657,"byte_end":8990660,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! For example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990661,"byte_end":8990677,"line_start":170,"line_end":170,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990678,"byte_end":8990681,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990682,"byte_end":8990689,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990690,"byte_end":8990710,"line_start":173,"line_end":173,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990711,"byte_end":8990714,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! # async fn docs() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990715,"byte_end":8990738,"line_start":175,"line_end":175,"column_start":1,"column_end":24}},{"value":"! let result = task::block_in_place(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990739,"byte_end":8990781,"line_start":176,"line_end":176,"column_start":1,"column_end":43}},{"value":"!     // do some compute-heavy work or call synchronous code","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990782,"byte_end":8990844,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"!     \"blocking completed\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990845,"byte_end":8990873,"line_start":178,"line_end":178,"column_start":1,"column_end":29}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990874,"byte_end":8990881,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990882,"byte_end":8990885,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! assert_eq!(result, \"blocking completed\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990886,"byte_end":8990931,"line_start":181,"line_end":181,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990932,"byte_end":8990939,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990940,"byte_end":8990947,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990948,"byte_end":8990951,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! #### yield_now","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990952,"byte_end":8990970,"line_start":185,"line_end":185,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990971,"byte_end":8990974,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"! In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8990975,"byte_end":8991049,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"! that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991050,"byte_end":8991128,"line_start":188,"line_end":188,"column_start":1,"column_end":79}},{"value":"! and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991129,"byte_end":8991205,"line_start":189,"line_end":189,"column_start":1,"column_end":77}},{"value":"! Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991206,"byte_end":8991263,"line_start":190,"line_end":190,"column_start":1,"column_end":58}},{"value":"! scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991264,"byte_end":8991342,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"! to execute. For example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991343,"byte_end":8991371,"line_start":192,"line_end":192,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991372,"byte_end":8991375,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991376,"byte_end":8991387,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"! use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991388,"byte_end":8991408,"line_start":195,"line_end":195,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991409,"byte_end":8991412,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! # #[tokio::main] async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991413,"byte_end":8991451,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"! async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991452,"byte_end":8991463,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"!     task::spawn(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991464,"byte_end":8991491,"line_start":199,"line_end":199,"column_start":1,"column_end":28}},{"value":"!         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991492,"byte_end":8991510,"line_start":200,"line_end":200,"column_start":1,"column_end":19}},{"value":"!         println!(\"spawned task done!\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991511,"byte_end":8991553,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991554,"byte_end":8991565,"line_start":202,"line_end":202,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991566,"byte_end":8991569,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"!     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991570,"byte_end":8991637,"line_start":204,"line_end":204,"column_start":1,"column_end":68}},{"value":"!     task::yield_now().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991638,"byte_end":8991670,"line_start":205,"line_end":205,"column_start":1,"column_end":33}},{"value":"!     println!(\"main task done!\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991671,"byte_end":8991707,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991708,"byte_end":8991713,"line_start":207,"line_end":207,"column_start":1,"column_end":6}},{"value":"! # .await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991714,"byte_end":8991727,"line_start":208,"line_end":208,"column_start":1,"column_end":14}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991728,"byte_end":8991735,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991736,"byte_end":8991743,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991744,"byte_end":8991747,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"! [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991748,"byte_end":8991805,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991806,"byte_end":8991863,"line_start":213,"line_end":213,"column_start":1,"column_end":58}},{"value":"! [rt-threaded]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991864,"byte_end":8991923,"line_start":214,"line_end":214,"column_start":1,"column_end":60}},{"value":"! [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991924,"byte_end":8991973,"line_start":215,"line_end":215,"column_start":1,"column_end":50}},{"value":"! [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/mod.rs","byte_start":8991974,"byte_end":8992023,"line_start":216,"line_end":216,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":6317},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/spawn.rs","byte_start":8998591,"byte_end":8998596,"line_start":125,"line_end":125,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"fn <T> (task: T) -> JoinHandle<T::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18918,"byte_end":18945,"line_start":223,"line_end":223,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6319},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/yield_now.rs","byte_start":8999610,"byte_end":8999619,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-core\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":18918,"byte_end":18945,"line_start":223,"line_end":223,"column_start":13,"column_end":40}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/yield_now.rs","byte_start":8999529,"byte_end":8999592,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6468},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9004018,"byte_end":9004026,"line_start":111,"line_end":111,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":6469},{"krate":0,"index":6470}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":19459,"byte_end":19486,"line_start":249,"line_end":249,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":6476},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9005952,"byte_end":9005963,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"fn <F> (future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-util\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":19459,"byte_end":19486,"line_start":249,"line_end":249,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6359},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9006796,"byte_end":9006799,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"fn () -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9006751,"byte_end":9006784,"line_start":217,"line_end":217,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008473,"byte_end":9008484,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"fn <F> (&self, future: F) -> JoinHandle<F::Output>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007305,"byte_end":9007355,"line_start":234,"line_end":234,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007360,"byte_end":9007363,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007368,"byte_end":9007428,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007433,"byte_end":9007436,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007441,"byte_end":9007513,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007518,"byte_end":9007588,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007593,"byte_end":9007604,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007609,"byte_end":9007629,"line_start":241,"line_end":241,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007634,"byte_end":9007637,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007642,"byte_end":9007660,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007665,"byte_end":9007686,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007691,"byte_end":9007733,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007738,"byte_end":9007741,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007746,"byte_end":9007818,"line_start":247,"line_end":247,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007823,"byte_end":9007876,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007881,"byte_end":9007914,"line_start":249,"line_end":249,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007919,"byte_end":9007936,"line_start":250,"line_end":250,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007941,"byte_end":9007952,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007957,"byte_end":9007960,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9007965,"byte_end":9007999,"line_start":253,"line_end":253,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008004,"byte_end":9008040,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008045,"byte_end":9008063,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008068,"byte_end":9008085,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008090,"byte_end":9008093,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008098,"byte_end":9008169,"line_start":258,"line_end":258,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008174,"byte_end":9008224,"line_start":259,"line_end":259,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008229,"byte_end":9008262,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008267,"byte_end":9008284,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008289,"byte_end":9008300,"line_start":262,"line_end":262,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008305,"byte_end":9008308,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008313,"byte_end":9008349,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008354,"byte_end":9008372,"line_start":265,"line_end":265,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008377,"byte_end":9008394,"line_start":266,"line_end":266,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008399,"byte_end":9008404,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008409,"byte_end":9008416,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008421,"byte_end":9008461,"line_start":269,"line_end":269,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":6362},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011160,"byte_end":9011168,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"fn <F> (&self, rt: &mut crate::runtime::Runtime, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008763,"byte_end":9008837,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008842,"byte_end":9008901,"line_start":281,"line_end":281,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008906,"byte_end":9008909,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008914,"byte_end":9008981,"line_start":283,"line_end":283,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9008986,"byte_end":9009059,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009064,"byte_end":9009140,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009145,"byte_end":9009225,"line_start":286,"line_end":286,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009230,"byte_end":9009249,"line_start":287,"line_end":287,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009254,"byte_end":9009257,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009262,"byte_end":9009328,"line_start":289,"line_end":289,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009333,"byte_end":9009336,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009341,"byte_end":9009353,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009358,"byte_end":9009361,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009366,"byte_end":9009438,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009443,"byte_end":9009516,"line_start":294,"line_end":294,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009521,"byte_end":9009524,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009529,"byte_end":9009540,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009545,"byte_end":9009548,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009553,"byte_end":9009627,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009632,"byte_end":9009707,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009712,"byte_end":9009787,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009792,"byte_end":9009869,"line_start":301,"line_end":301,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009874,"byte_end":9009877,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009882,"byte_end":9009915,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009920,"byte_end":9009939,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009944,"byte_end":9009976,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9009981,"byte_end":9010001,"line_start":306,"line_end":306,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010006,"byte_end":9010009,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010014,"byte_end":9010055,"line_start":308,"line_end":308,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010060,"byte_end":9010098,"line_start":309,"line_end":309,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010103,"byte_end":9010138,"line_start":310,"line_end":310,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010143,"byte_end":9010187,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010192,"byte_end":9010251,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010256,"byte_end":9010278,"line_start":313,"line_end":313,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010283,"byte_end":9010298,"line_start":314,"line_end":314,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010303,"byte_end":9010321,"line_start":315,"line_end":315,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010326,"byte_end":9010337,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010342,"byte_end":9010370,"line_start":317,"line_end":317,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010375,"byte_end":9010381,"line_start":318,"line_end":318,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010386,"byte_end":9010393,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010398,"byte_end":9010432,"line_start":320,"line_end":320,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010437,"byte_end":9010444,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010449,"byte_end":9010481,"line_start":322,"line_end":322,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010486,"byte_end":9010506,"line_start":323,"line_end":323,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010511,"byte_end":9010514,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010519,"byte_end":9010560,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010565,"byte_end":9010603,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&mut rt, async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010608,"byte_end":9010643,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010648,"byte_end":9010692,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010697,"byte_end":9010756,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010761,"byte_end":9010783,"line_start":330,"line_end":330,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010788,"byte_end":9010809,"line_start":331,"line_end":331,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010814,"byte_end":9010832,"line_start":332,"line_end":332,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010837,"byte_end":9010848,"line_start":333,"line_end":333,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010853,"byte_end":9010881,"line_start":334,"line_end":334,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010886,"byte_end":9010892,"line_start":335,"line_end":335,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010897,"byte_end":9010904,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010909,"byte_end":9010912,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010917,"byte_end":9010957,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/ [`Runtime::block_on`]: ../struct.Runtime.html#method.block_on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9010962,"byte_end":9011027,"line_start":339,"line_end":339,"column_start":5,"column_end":70}},{"value":"/ [in-place blocking]: ../blocking/fn.in_place.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011032,"byte_end":9011085,"line_start":340,"line_end":340,"column_start":5,"column_end":58}},{"value":"/ [`spawn_blocking`]: ../blocking/fn.spawn_blocking.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011090,"byte_end":9011148,"line_start":341,"line_end":341,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012424,"byte_end":9012433,"line_start":377,"line_end":377,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"fn <F> (&self, future: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011327,"byte_end":9011397,"line_start":349,"line_end":349,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011402,"byte_end":9011405,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011410,"byte_end":9011480,"line_start":351,"line_end":351,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011485,"byte_end":9011561,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011566,"byte_end":9011634,"line_start":353,"line_end":353,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011639,"byte_end":9011719,"line_start":354,"line_end":354,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011724,"byte_end":9011796,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011801,"byte_end":9011876,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011881,"byte_end":9011937,"line_start":357,"line_end":357,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011942,"byte_end":9011945,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011950,"byte_end":9011964,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011969,"byte_end":9011972,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011977,"byte_end":9011988,"line_start":361,"line_end":361,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9011993,"byte_end":9012013,"line_start":362,"line_end":362,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012018,"byte_end":9012021,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012026,"byte_end":9012044,"line_start":364,"line_end":364,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012049,"byte_end":9012070,"line_start":365,"line_end":365,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012075,"byte_end":9012122,"line_start":366,"line_end":366,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012127,"byte_end":9012169,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012174,"byte_end":9012196,"line_start":368,"line_end":368,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012201,"byte_end":9012231,"line_start":369,"line_end":369,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012236,"byte_end":9012254,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012259,"byte_end":9012276,"line_start":371,"line_end":371,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012281,"byte_end":9012286,"line_start":372,"line_end":372,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012291,"byte_end":9012298,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012303,"byte_end":9012306,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn.spawn_local.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012311,"byte_end":9012351,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9012356,"byte_end":9012406,"line_start":376,"line_end":376,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6420},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021257,"byte_end":9021265,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":6422}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020395,"byte_end":9020425,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020426,"byte_end":9020429,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020430,"byte_end":9020484,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020485,"byte_end":9020488,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020489,"byte_end":9020555,"line_start":66,"line_end":66,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020556,"byte_end":9020623,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020624,"byte_end":9020681,"line_start":68,"line_end":68,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020682,"byte_end":9020751,"line_start":69,"line_end":69,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020752,"byte_end":9020755,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020756,"byte_end":9020770,"line_start":71,"line_end":71,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020771,"byte_end":9020774,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020775,"byte_end":9020782,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020783,"byte_end":9020805,"line_start":74,"line_end":74,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020806,"byte_end":9020830,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020831,"byte_end":9020858,"line_start":76,"line_end":76,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020859,"byte_end":9020864,"line_start":77,"line_end":77,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020865,"byte_end":9020868,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020869,"byte_end":9020901,"line_start":79,"line_end":79,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020902,"byte_end":9020938,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020939,"byte_end":9020952,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020953,"byte_end":9020956,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020957,"byte_end":9020989,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9020990,"byte_end":9021026,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021027,"byte_end":9021030,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021031,"byte_end":9021067,"line_start":86,"line_end":86,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021068,"byte_end":9021108,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021109,"byte_end":9021126,"line_start":88,"line_end":88,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021127,"byte_end":9021140,"line_start":89,"line_end":89,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021141,"byte_end":9021148,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021149,"byte_end":9021156,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: https://doc.rust-lang.org/std/thread/struct.LocalKey.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021157,"byte_end":9021245,"line_start":92,"line_end":92,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":6422},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021307,"byte_end":9021312,"line_start":95,"line_end":95,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":6420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6425},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021840,"byte_end":9021845,"line_start":116,"line_end":116,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"fn <F> (&'static self, value: T, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021390,"byte_end":9021454,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021459,"byte_end":9021462,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021467,"byte_end":9021528,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021533,"byte_end":9021536,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021541,"byte_end":9021557,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021562,"byte_end":9021565,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021570,"byte_end":9021577,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021582,"byte_end":9021604,"line_start":106,"line_end":106,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021609,"byte_end":9021633,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021638,"byte_end":9021665,"line_start":108,"line_end":108,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021670,"byte_end":9021675,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021680,"byte_end":9021683,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021688,"byte_end":9021720,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021725,"byte_end":9021780,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021785,"byte_end":9021798,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021803,"byte_end":9021810,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021815,"byte_end":9021822,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6429},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022319,"byte_end":9022323,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"fn <F, R> (&'static self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022070,"byte_end":9022136,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022141,"byte_end":9022144,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022149,"byte_end":9022161,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022166,"byte_end":9022169,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022174,"byte_end":9022235,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022240,"byte_end":9022307,"line_start":133,"line_end":133,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6432},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022811,"byte_end":9022819,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"fn <F, R> (&'static self, f: F) -> Result<R, AccessError>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022564,"byte_end":9022630,"line_start":144,"line_end":144,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022635,"byte_end":9022638,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the accociated key is not present, this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022643,"byte_end":9022709,"line_start":146,"line_end":146,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022714,"byte_end":9022779,"line_start":147,"line_end":147,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9022784,"byte_end":9022799,"line_start":148,"line_end":148,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6438},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023279,"byte_end":9023282,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"fn (&'static self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023174,"byte_end":9023216,"line_start":164,"line_end":164,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023221,"byte_end":9023267,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6479},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024782,"byte_end":9024793,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":6480}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](struct.LocalKey.html#method.try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](struct.LocalKey.html#method.try_with).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024646,"byte_end":9024732,"line_start":222,"line_end":222,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":6491},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6591},{"krate":0,"index":6595},{"krate":0,"index":6771},{"krate":0,"index":6784},{"krate":0,"index":6785},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6845},{"krate":0,"index":6849},{"krate":0,"index":6884},{"krate":0,"index":7131},{"krate":0,"index":7155},{"krate":0,"index":6889},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":6959}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/cfg.rs","byte_start":20315,"byte_end":20339,"line_start":291,"line_end":291,"column_start":13,"column_end":37}},{"value":"! Utilities for tracking time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025166,"byte_end":9025198,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025199,"byte_end":9025202,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides a number of types for executing code after a set period","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025203,"byte_end":9025283,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"! of time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025284,"byte_end":9025296,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025297,"byte_end":9025300,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! * `Delay` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025301,"byte_end":9025382,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"!   in time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025383,"byte_end":9025397,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025398,"byte_end":9025401,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025402,"byte_end":9025472,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"!   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025473,"byte_end":9025553,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"!   elapses.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025554,"byte_end":9025568,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025569,"byte_end":9025572,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025573,"byte_end":9025652,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"!   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025653,"byte_end":9025725,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"!   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025726,"byte_end":9025795,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025796,"byte_end":9025799,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025800,"byte_end":9025877,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"!   has expired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025878,"byte_end":9025896,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025897,"byte_end":9025900,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! These types are sufficient for handling a large number of scenarios","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025901,"byte_end":9025972,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"! involving time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025973,"byte_end":9025992,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025993,"byte_end":9025996,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! These types must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9025997,"byte_end":9026067,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026068,"byte_end":9026071,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026072,"byte_end":9026086,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026087,"byte_end":9026090,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Wait 100ms and print \"Hello World!\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026091,"byte_end":9026130,"line_start":27,"line_end":27,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026131,"byte_end":9026134,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026135,"byte_end":9026142,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"! use tokio::time::delay_for;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026143,"byte_end":9026174,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026175,"byte_end":9026178,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026179,"byte_end":9026207,"line_start":32,"line_end":32,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026208,"byte_end":9026211,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026212,"byte_end":9026215,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026216,"byte_end":9026234,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"! async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026235,"byte_end":9026256,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"!     delay_for(Duration::from_millis(100)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026257,"byte_end":9026309,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!     println!(\"100 ms have elapsed\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026310,"byte_end":9026350,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026351,"byte_end":9026356,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026357,"byte_end":9026364,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026365,"byte_end":9026368,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Require that an operation takes no more than 300ms. Note that this uses the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026369,"byte_end":9026448,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"! `timeout` function on the `FutureExt` trait. This trait is included in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026449,"byte_end":9026527,"line_start":43,"line_end":43,"column_start":1,"column_end":79}},{"value":"! prelude.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026528,"byte_end":9026540,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026541,"byte_end":9026544,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026545,"byte_end":9026552,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"! use tokio::time::{timeout, Duration};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026553,"byte_end":9026594,"line_start":47,"line_end":47,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026595,"byte_end":9026598,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! async fn long_future() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026599,"byte_end":9026627,"line_start":49,"line_end":49,"column_start":1,"column_end":29}},{"value":"!     // do work here","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026628,"byte_end":9026651,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026652,"byte_end":9026657,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026658,"byte_end":9026661,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026662,"byte_end":9026684,"line_start":53,"line_end":53,"column_start":1,"column_end":23}},{"value":"! let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026685,"byte_end":9026752,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026753,"byte_end":9026756,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if res.is_err() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026757,"byte_end":9026778,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"!     println!(\"operation timed out\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026779,"byte_end":9026819,"line_start":57,"line_end":57,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026820,"byte_end":9026825,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"! # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026826,"byte_end":9026833,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026834,"byte_end":9026841,"line_start":60,"line_end":60,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6494},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":6495},{"krate":0,"index":6498},{"krate":0,"index":6504},{"krate":0,"index":6505},{"krate":0,"index":6506},{"krate":0,"index":6507},{"krate":0,"index":6508},{"krate":0,"index":6509},{"krate":0,"index":6976},{"krate":0,"index":6984},{"krate":0,"index":6987},{"krate":0,"index":6992},{"krate":0,"index":6995},{"krate":0,"index":6999},{"krate":0,"index":6997},{"krate":0,"index":7001},{"krate":0,"index":7005},{"krate":0,"index":7008},{"krate":0,"index":7015},{"krate":0,"index":6512},{"krate":0,"index":6513},{"krate":0,"index":6540},{"krate":0,"index":6542},{"krate":0,"index":6545},{"krate":0,"index":6549},{"krate":0,"index":6559},{"krate":0,"index":6562},{"krate":0,"index":6564}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"! A queue of delayed elements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9032857,"byte_end":9032889,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9032890,"byte_end":9032893,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! See [`DelayQueue`] for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9032894,"byte_end":9032934,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9032935,"byte_end":9032938,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9032939,"byte_end":9032981,"line_start":5,"line_end":5,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":6976},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037170,"byte_end":9037180,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":6978},{"krate":0,"index":6979},{"krate":0,"index":6980},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033222,"byte_end":9033254,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033255,"byte_end":9033258,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033259,"byte_end":9033336,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033337,"byte_end":9033377,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033378,"byte_end":9033381,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033382,"byte_end":9033393,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033394,"byte_end":9033397,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033398,"byte_end":9033465,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033466,"byte_end":9033546,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033547,"byte_end":9033625,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033626,"byte_end":9033662,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033663,"byte_end":9033666,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033667,"byte_end":9033737,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll`] is called. If an entry has reached its","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033738,"byte_end":9033816,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` indicating that the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033817,"byte_end":9033890,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033891,"byte_end":9033960,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033961,"byte_end":9033964,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033965,"byte_end":9033994,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033995,"byte_end":9033998,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`Stream::poll`]. If no delays have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9033999,"byte_end":9034077,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ expired, no items are returned. In this case, `NotReady` is returned and the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034078,"byte_end":9034158,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034159,"byte_end":9034235,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034236,"byte_end":9034248,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034249,"byte_end":9034252,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034253,"byte_end":9034332,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"/ returns `Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034333,"byte_end":9034410,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034411,"byte_end":9034487,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ returning items or `NotReady.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034488,"byte_end":9034521,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034522,"byte_end":9034525,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034526,"byte_end":9034604,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034605,"byte_end":9034681,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire the same instant. Also note that delays are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034682,"byte_end":9034760,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034761,"byte_end":9034800,"line_start":49,"line_end":49,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034801,"byte_end":9034804,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034805,"byte_end":9034825,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034826,"byte_end":9034829,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The `DelayQueue` is backed by the same hashed timing wheel implementation as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034830,"byte_end":9034910,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ [`Timer`] as such, it offers the same performance benefits. See [`Timer`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034911,"byte_end":9034988,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/ for further implementation notes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9034989,"byte_end":9035026,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035027,"byte_end":9035030,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This allows","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035031,"byte_end":9035104,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ amortizing the cost of allocation. Space created for expired entries is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035105,"byte_end":9035180,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ reused when inserting new entries.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035181,"byte_end":9035219,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035220,"byte_end":9035223,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035224,"byte_end":9035306,"line_start":61,"line_end":61,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035307,"byte_end":9035334,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035335,"byte_end":9035338,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035339,"byte_end":9035350,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035351,"byte_end":9035354,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035355,"byte_end":9035402,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035403,"byte_end":9035406,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035407,"byte_end":9035425,"line_start":68,"line_end":68,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::{delay_queue, DelayQueue, Error};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035426,"byte_end":9035480,"line_start":69,"line_end":69,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035481,"byte_end":9035484,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035485,"byte_end":9035508,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035509,"byte_end":9035543,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035544,"byte_end":9035579,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035580,"byte_end":9035608,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035609,"byte_end":9035638,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035639,"byte_end":9035665,"line_start":76,"line_end":76,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035666,"byte_end":9035669,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035670,"byte_end":9035688,"line_start":78,"line_end":78,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035689,"byte_end":9035751,"line_start":79,"line_end":79,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035752,"byte_end":9035794,"line_start":80,"line_end":80,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035795,"byte_end":9035800,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035801,"byte_end":9035804,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035805,"byte_end":9035834,"line_start":83,"line_end":83,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035835,"byte_end":9035838,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035839,"byte_end":9035855,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035856,"byte_end":9035915,"line_start":86,"line_end":86,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035916,"byte_end":9035956,"line_start":87,"line_end":87,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9035957,"byte_end":9036025,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036026,"byte_end":9036029,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036030,"byte_end":9036083,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036084,"byte_end":9036093,"line_start":91,"line_end":91,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036094,"byte_end":9036097,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036098,"byte_end":9036155,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036156,"byte_end":9036189,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036190,"byte_end":9036227,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036228,"byte_end":9036237,"line_start":96,"line_end":96,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036238,"byte_end":9036241,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036242,"byte_end":9036288,"line_start":98,"line_end":98,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036289,"byte_end":9036357,"line_start":99,"line_end":99,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036358,"byte_end":9036410,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036411,"byte_end":9036424,"line_start":101,"line_end":101,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036425,"byte_end":9036434,"line_start":102,"line_end":102,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036435,"byte_end":9036438,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036439,"byte_end":9036522,"line_start":104,"line_end":104,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036523,"byte_end":9036600,"line_start":105,"line_end":105,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036601,"byte_end":9036634,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036635,"byte_end":9036688,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036689,"byte_end":9036702,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036703,"byte_end":9036706,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036707,"byte_end":9036738,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036739,"byte_end":9036748,"line_start":111,"line_end":111,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036749,"byte_end":9036754,"line_start":112,"line_end":112,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036755,"byte_end":9036762,"line_start":113,"line_end":113,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036763,"byte_end":9036766,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: #method.insert","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036767,"byte_end":9036797,"line_start":115,"line_end":115,"column_start":1,"column_end":31}},{"value":"/ [`insert_at`]: #method.insert_at","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036798,"byte_end":9036834,"line_start":116,"line_end":116,"column_start":1,"column_end":37}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036835,"byte_end":9036863,"line_start":117,"line_end":117,"column_start":1,"column_end":29}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036864,"byte_end":9036940,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036941,"byte_end":9036967,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"/ [`Stream::poll`]: #method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9036968,"byte_end":9037002,"line_start":120,"line_end":120,"column_start":1,"column_end":35}},{"value":"/ [`Timer`]: ../struct.Timer.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037003,"byte_end":9037038,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/ [`slab`]: https://docs.rs/slab","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037039,"byte_end":9037073,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`capacity`]: #method.capacity","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037074,"byte_end":9037108,"line_start":123,"line_end":123,"column_start":1,"column_end":35}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037109,"byte_end":9037141,"line_start":124,"line_end":124,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6987},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037882,"byte_end":9037889,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":6989},{"krate":0,"index":6990},{"krate":0,"index":6991}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and removed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037677,"byte_end":9037735,"line_start":147,"line_end":147,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037736,"byte_end":9037739,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037740,"byte_end":9037788,"line_start":149,"line_end":149,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037789,"byte_end":9037792,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll`]: struct.DelayQueue.html#method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9037793,"byte_end":9037853,"line_start":151,"line_end":151,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":6995},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038373,"byte_end":9038376,"line_start":172,"line_end":172,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":6996}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038057,"byte_end":9038103,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038104,"byte_end":9038107,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038108,"byte_end":9038189,"line_start":166,"line_end":166,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038190,"byte_end":9038225,"line_start":167,"line_end":167,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038226,"byte_end":9038229,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct.DelayQueue.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038230,"byte_end":9038272,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/ [`DelayQueue::insert`]: struct.DelayQueue.html#method.insert","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9038273,"byte_end":9038337,"line_start":170,"line_end":170,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":6515},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039354,"byte_end":9039357,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn () -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039054,"byte_end":9039092,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039097,"byte_end":9039100,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039105,"byte_end":9039178,"line_start":208,"line_end":208,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039183,"byte_end":9039186,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039191,"byte_end":9039205,"line_start":210,"line_end":210,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039210,"byte_end":9039213,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039218,"byte_end":9039229,"line_start":212,"line_end":212,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039234,"byte_end":9039268,"line_start":213,"line_end":213,"column_start":5,"column_end":39}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039273,"byte_end":9039330,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039335,"byte_end":9039342,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6516},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040275,"byte_end":9040288,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn (capacity: usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039427,"byte_end":9039494,"line_start":220,"line_end":220,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039499,"byte_end":9039502,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039507,"byte_end":9039578,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039583,"byte_end":9039652,"line_start":223,"line_end":223,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039657,"byte_end":9039669,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039674,"byte_end":9039677,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039682,"byte_end":9039696,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039701,"byte_end":9039704,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039709,"byte_end":9039720,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039725,"byte_end":9039759,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039764,"byte_end":9039794,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039799,"byte_end":9039802,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039807,"byte_end":9039827,"line_start":232,"line_end":232,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039832,"byte_end":9039855,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039860,"byte_end":9039920,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039925,"byte_end":9039928,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/     // These insertions are done without further allocation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039933,"byte_end":9039996,"line_start":236,"line_end":236,"column_start":5,"column_end":68}},{"value":"/     for i in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040001,"byte_end":9040025,"line_start":237,"line_end":237,"column_start":5,"column_end":29}},{"value":"/         delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040030,"byte_end":9040088,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040093,"byte_end":9040102,"line_start":239,"line_end":239,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040107,"byte_end":9040110,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // This will make the queue allocate additional storage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040115,"byte_end":9040178,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/     delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040183,"byte_end":9040239,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040244,"byte_end":9040251,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040256,"byte_end":9040263,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6517},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042314,"byte_end":9042323,"line_start":303,"line_end":303,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn (&mut self, value: T, when: Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040587,"byte_end":9040660,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040665,"byte_end":9040674,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040679,"byte_end":9040682,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040687,"byte_end":9040761,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040766,"byte_end":9040786,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040791,"byte_end":9040794,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040799,"byte_end":9040874,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040879,"byte_end":9040949,"line_start":263,"line_end":263,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9040954,"byte_end":9041018,"line_start":264,"line_end":264,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041023,"byte_end":9041026,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041031,"byte_end":9041106,"line_start":266,"line_end":266,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041111,"byte_end":9041186,"line_start":267,"line_end":267,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041191,"byte_end":9041261,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041266,"byte_end":9041339,"line_start":269,"line_end":269,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041344,"byte_end":9041420,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041425,"byte_end":9041459,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041464,"byte_end":9041467,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041472,"byte_end":9041524,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041529,"byte_end":9041532,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041537,"byte_end":9041549,"line_start":275,"line_end":275,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041554,"byte_end":9041557,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041562,"byte_end":9041622,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041627,"byte_end":9041630,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041635,"byte_end":9041649,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041654,"byte_end":9041657,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041662,"byte_end":9041677,"line_start":281,"line_end":281,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041682,"byte_end":9041685,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041690,"byte_end":9041701,"line_start":283,"line_end":283,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041706,"byte_end":9041759,"line_start":284,"line_end":284,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041764,"byte_end":9041767,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041772,"byte_end":9041792,"line_start":286,"line_end":286,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041797,"byte_end":9041820,"line_start":287,"line_end":287,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041825,"byte_end":9041873,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert_at(","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041878,"byte_end":9041918,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/         \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041923,"byte_end":9041983,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041988,"byte_end":9041991,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9041996,"byte_end":9042023,"line_start":292,"line_end":292,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042028,"byte_end":9042072,"line_start":293,"line_end":293,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042077,"byte_end":9042120,"line_start":294,"line_end":294,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042125,"byte_end":9042132,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042137,"byte_end":9042144,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042149,"byte_end":9042152,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042157,"byte_end":9042183,"line_start":298,"line_end":298,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042188,"byte_end":9042218,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042223,"byte_end":9042251,"line_start":300,"line_end":300,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042256,"byte_end":9042284,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/ [type]: #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9042289,"byte_end":9042302,"line_start":302,"line_end":302,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6518},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9043683,"byte_end":9043695,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn (&mut self, cx: &mut task::Context<'_>) -> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n None if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9043475,"byte_end":9043550,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9043555,"byte_end":9043631,"line_start":341,"line_end":341,"column_start":5,"column_end":81}},{"value":"/ None if the queue is exhausted.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9043636,"byte_end":9043671,"line_start":342,"line_end":342,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6521},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046057,"byte_end":9046063,"line_start":411,"line_end":411,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn (&mut self, value: T, timeout: Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044312,"byte_end":9044389,"line_start":363,"line_end":363,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044394,"byte_end":9044406,"line_start":364,"line_end":364,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044411,"byte_end":9044414,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044419,"byte_end":9044488,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044493,"byte_end":9044521,"line_start":367,"line_end":367,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044526,"byte_end":9044529,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044534,"byte_end":9044609,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll`]. If `when` has already been","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044614,"byte_end":9044684,"line_start":370,"line_end":370,"column_start":5,"column_end":75}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044689,"byte_end":9044753,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044758,"byte_end":9044761,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used at an argument to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044766,"byte_end":9044841,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is token and is reused once","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044846,"byte_end":9044921,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ `value` is removed from the queue either by calling [`poll`] after","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9044926,"byte_end":9044996,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045001,"byte_end":9045074,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045079,"byte_end":9045155,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045160,"byte_end":9045194,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045199,"byte_end":9045202,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045207,"byte_end":9045259,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045264,"byte_end":9045267,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045272,"byte_end":9045284,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045289,"byte_end":9045292,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045297,"byte_end":9045372,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ duration.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045377,"byte_end":9045390,"line_start":385,"line_end":385,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045395,"byte_end":9045398,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045403,"byte_end":9045417,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045422,"byte_end":9045425,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045430,"byte_end":9045445,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045450,"byte_end":9045453,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045458,"byte_end":9045469,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045474,"byte_end":9045506,"line_start":392,"line_end":392,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045511,"byte_end":9045539,"line_start":393,"line_end":393,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045544,"byte_end":9045547,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045552,"byte_end":9045572,"line_start":395,"line_end":395,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045577,"byte_end":9045600,"line_start":396,"line_end":396,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045605,"byte_end":9045653,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045658,"byte_end":9045726,"line_start":398,"line_end":398,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045731,"byte_end":9045734,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045739,"byte_end":9045766,"line_start":400,"line_end":400,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045771,"byte_end":9045815,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045820,"byte_end":9045863,"line_start":402,"line_end":402,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045868,"byte_end":9045875,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045880,"byte_end":9045887,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045892,"byte_end":9045895,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045900,"byte_end":9045926,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`remove`]: #method.remove","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045931,"byte_end":9045961,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/ [`reset`]: #method.reset","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045966,"byte_end":9045994,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ [`Key`]: struct.Key.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9045999,"byte_end":9046027,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/ [type]: #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046032,"byte_end":9046045,"line_start":410,"line_end":410,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6526},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047608,"byte_end":9047614,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn (&mut self, key: &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046754,"byte_end":9046812,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046817,"byte_end":9046820,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046825,"byte_end":9046898,"line_start":432,"line_end":432,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046903,"byte_end":9046976,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9046981,"byte_end":9046998,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047003,"byte_end":9047006,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047011,"byte_end":9047023,"line_start":436,"line_end":436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047028,"byte_end":9047031,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047036,"byte_end":9047099,"line_start":438,"line_end":438,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047104,"byte_end":9047107,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047112,"byte_end":9047126,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047131,"byte_end":9047134,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047139,"byte_end":9047154,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047159,"byte_end":9047162,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047167,"byte_end":9047178,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047183,"byte_end":9047215,"line_start":445,"line_end":445,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047220,"byte_end":9047248,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047253,"byte_end":9047256,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047261,"byte_end":9047281,"line_start":448,"line_end":448,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047286,"byte_end":9047309,"line_start":449,"line_end":449,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047314,"byte_end":9047362,"line_start":450,"line_end":450,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047367,"byte_end":9047435,"line_start":451,"line_end":451,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047440,"byte_end":9047443,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     // Remove the entry","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047448,"byte_end":9047475,"line_start":453,"line_end":453,"column_start":5,"column_end":32}},{"value":"/     let item = delay_queue.remove(&key);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047480,"byte_end":9047524,"line_start":454,"line_end":454,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047529,"byte_end":9047572,"line_start":455,"line_end":455,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047577,"byte_end":9047584,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9047589,"byte_end":9047596,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6528},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049266,"byte_end":9049274,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn (&mut self, key: &Key, when: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048152,"byte_end":9048225,"line_start":477,"line_end":477,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048230,"byte_end":9048233,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048238,"byte_end":9048313,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048318,"byte_end":9048335,"line_start":480,"line_end":480,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048340,"byte_end":9048343,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048348,"byte_end":9048423,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048428,"byte_end":9048504,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048509,"byte_end":9048524,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048529,"byte_end":9048532,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048537,"byte_end":9048549,"line_start":486,"line_end":486,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048554,"byte_end":9048557,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048562,"byte_end":9048636,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048641,"byte_end":9048672,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048677,"byte_end":9048680,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048685,"byte_end":9048699,"line_start":491,"line_end":491,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048704,"byte_end":9048707,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048712,"byte_end":9048727,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048732,"byte_end":9048735,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048740,"byte_end":9048751,"line_start":495,"line_end":495,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{DelayQueue, Duration, Instant};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048756,"byte_end":9048809,"line_start":496,"line_end":496,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048814,"byte_end":9048817,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048822,"byte_end":9048842,"line_start":498,"line_end":498,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048847,"byte_end":9048870,"line_start":499,"line_end":499,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048875,"byte_end":9048923,"line_start":500,"line_end":500,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9048928,"byte_end":9048996,"line_start":501,"line_end":501,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049001,"byte_end":9049004,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049009,"byte_end":9049066,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049071,"byte_end":9049074,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049079,"byte_end":9049156,"line_start":505,"line_end":505,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049161,"byte_end":9049164,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049169,"byte_end":9049230,"line_start":507,"line_end":507,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049235,"byte_end":9049242,"line_start":508,"line_end":508,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9049247,"byte_end":9049254,"line_start":509,"line_end":509,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6531},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051167,"byte_end":9051172,"line_start":567,"line_end":567,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn (&mut self, key: &Key, timeout: Duration) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050017,"byte_end":9050085,"line_start":532,"line_end":532,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050090,"byte_end":9050104,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050109,"byte_end":9050112,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050117,"byte_end":9050192,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050197,"byte_end":9050217,"line_start":536,"line_end":536,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050222,"byte_end":9050225,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050230,"byte_end":9050300,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050305,"byte_end":9050375,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050380,"byte_end":9050408,"line_start":540,"line_end":540,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050413,"byte_end":9050416,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050421,"byte_end":9050433,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050438,"byte_end":9050441,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050446,"byte_end":9050521,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050526,"byte_end":9050581,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050586,"byte_end":9050589,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050594,"byte_end":9050608,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050613,"byte_end":9050616,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050621,"byte_end":9050636,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050641,"byte_end":9050644,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050649,"byte_end":9050660,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050665,"byte_end":9050697,"line_start":552,"line_end":552,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050702,"byte_end":9050730,"line_start":553,"line_end":553,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050735,"byte_end":9050738,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050743,"byte_end":9050763,"line_start":555,"line_end":555,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050768,"byte_end":9050791,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050796,"byte_end":9050844,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/     let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050849,"byte_end":9050917,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050922,"byte_end":9050925,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/     // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050930,"byte_end":9050987,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9050992,"byte_end":9050995,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/     delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051000,"byte_end":9051057,"line_start":562,"line_end":562,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051062,"byte_end":9051065,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/     // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051070,"byte_end":9051131,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051136,"byte_end":9051143,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051148,"byte_end":9051155,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6532},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052009,"byte_end":9052014,"line_start":598,"line_end":598,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051281,"byte_end":9051322,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051327,"byte_end":9051330,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051335,"byte_end":9051401,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051406,"byte_end":9051409,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051414,"byte_end":9051480,"line_start":575,"line_end":575,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051485,"byte_end":9051488,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051493,"byte_end":9051519,"line_start":577,"line_end":577,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051524,"byte_end":9051527,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051532,"byte_end":9051546,"line_start":579,"line_end":579,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051551,"byte_end":9051554,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051559,"byte_end":9051570,"line_start":581,"line_end":581,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051575,"byte_end":9051607,"line_start":582,"line_end":582,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051612,"byte_end":9051640,"line_start":583,"line_end":583,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051645,"byte_end":9051648,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051653,"byte_end":9051673,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051678,"byte_end":9051701,"line_start":586,"line_end":586,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051706,"byte_end":9051754,"line_start":587,"line_end":587,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051759,"byte_end":9051762,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051767,"byte_end":9051825,"line_start":589,"line_end":589,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051830,"byte_end":9051833,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051838,"byte_end":9051879,"line_start":591,"line_end":591,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051884,"byte_end":9051887,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/     delay_queue.clear();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051892,"byte_end":9051920,"line_start":593,"line_end":593,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051925,"byte_end":9051928,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051933,"byte_end":9051973,"line_start":595,"line_end":595,"column_start":5,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051978,"byte_end":9051985,"line_start":596,"line_end":596,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9051990,"byte_end":9051997,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6533},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052486,"byte_end":9052494,"line_start":615,"line_end":615,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052169,"byte_end":9052244,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052249,"byte_end":9052252,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052257,"byte_end":9052271,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052276,"byte_end":9052279,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052284,"byte_end":9052295,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052300,"byte_end":9052332,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052337,"byte_end":9052340,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052345,"byte_end":9052414,"line_start":612,"line_end":612,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052419,"byte_end":9052462,"line_start":613,"line_end":613,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052467,"byte_end":9052474,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6534},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053062,"byte_end":9053065,"line_start":635,"line_end":635,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052553,"byte_end":9052611,"line_start":619,"line_end":619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052616,"byte_end":9052619,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052624,"byte_end":9052638,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052643,"byte_end":9052646,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052651,"byte_end":9052662,"line_start":623,"line_end":623,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052667,"byte_end":9052699,"line_start":624,"line_end":624,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052704,"byte_end":9052732,"line_start":625,"line_end":625,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052737,"byte_end":9052740,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052745,"byte_end":9052765,"line_start":627,"line_end":627,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052770,"byte_end":9052793,"line_start":628,"line_end":628,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052798,"byte_end":9052875,"line_start":629,"line_end":629,"column_start":5,"column_end":82}},{"value":"/     assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052880,"byte_end":9052921,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/     delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052926,"byte_end":9052980,"line_start":631,"line_end":631,"column_start":5,"column_end":59}},{"value":"/     assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9052985,"byte_end":9053026,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053031,"byte_end":9053038,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053043,"byte_end":9053050,"line_start":634,"line_end":634,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054274,"byte_end":9054281,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053119,"byte_end":9053190,"line_start":639,"line_end":639,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053195,"byte_end":9053218,"line_start":640,"line_end":640,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053223,"byte_end":9053226,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053231,"byte_end":9053306,"line_start":642,"line_end":642,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053311,"byte_end":9053387,"line_start":643,"line_end":643,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053392,"byte_end":9053468,"line_start":644,"line_end":644,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053473,"byte_end":9053549,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053554,"byte_end":9053577,"line_start":646,"line_end":646,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053582,"byte_end":9053585,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053590,"byte_end":9053662,"line_start":648,"line_end":648,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053667,"byte_end":9053700,"line_start":649,"line_end":649,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053705,"byte_end":9053708,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053713,"byte_end":9053725,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053730,"byte_end":9053733,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053738,"byte_end":9053810,"line_start":653,"line_end":653,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053815,"byte_end":9053837,"line_start":654,"line_end":654,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053842,"byte_end":9053845,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053850,"byte_end":9053864,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053869,"byte_end":9053872,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053877,"byte_end":9053884,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053889,"byte_end":9053921,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053926,"byte_end":9053954,"line_start":660,"line_end":660,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053959,"byte_end":9053962,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053967,"byte_end":9053987,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9053992,"byte_end":9054015,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054020,"byte_end":9054068,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054073,"byte_end":9054076,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054081,"byte_end":9054142,"line_start":666,"line_end":666,"column_start":5,"column_end":66}},{"value":"/     delay_queue.reserve(10);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054147,"byte_end":9054179,"line_start":667,"line_end":667,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054184,"byte_end":9054187,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/     assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054192,"byte_end":9054238,"line_start":669,"line_end":669,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054243,"byte_end":9054250,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054255,"byte_end":9054262,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6536},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054997,"byte_end":9055005,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054364,"byte_end":9054418,"line_start":676,"line_end":676,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054423,"byte_end":9054426,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054431,"byte_end":9054505,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `NotReady`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054510,"byte_end":9054566,"line_start":679,"line_end":679,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054571,"byte_end":9054574,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054579,"byte_end":9054593,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054598,"byte_end":9054601,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054606,"byte_end":9054613,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::DelayQueue;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054618,"byte_end":9054650,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054655,"byte_end":9054683,"line_start":685,"line_end":685,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054688,"byte_end":9054691,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054696,"byte_end":9054716,"line_start":687,"line_end":687,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054721,"byte_end":9054744,"line_start":688,"line_end":688,"column_start":5,"column_end":28}},{"value":"/     let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054749,"byte_end":9054797,"line_start":689,"line_end":689,"column_start":5,"column_end":53}},{"value":"/     assert!(delay_queue.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054802,"byte_end":9054842,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054847,"byte_end":9054850,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/     delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054855,"byte_end":9054915,"line_start":692,"line_end":692,"column_start":5,"column_end":65}},{"value":"/     assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054920,"byte_end":9054961,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054966,"byte_end":9054973,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9054978,"byte_end":9054985,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6566},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059668,"byte_end":9059675,"line_start":869,"line_end":869,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059613,"byte_end":9059656,"line_start":868,"line_end":868,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6567},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059784,"byte_end":9059791,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059721,"byte_end":9059772,"line_start":873,"line_end":873,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6568},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059909,"byte_end":9059919,"line_start":879,"line_end":879,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059849,"byte_end":9059897,"line_start":878,"line_end":878,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9060030,"byte_end":9060038,"line_start":884,"line_end":884,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059962,"byte_end":9060018,"line_start":883,"line_end":883,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6581},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060616,"byte_end":9060627,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"delay_until","qualname":"::time::delay::delay_until","value":"fn (deadline: Instant) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060242,"byte_end":9060280,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060281,"byte_end":9060284,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060285,"byte_end":9060360,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060361,"byte_end":9060438,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060439,"byte_end":9060474,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060475,"byte_end":9060478,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060479,"byte_end":9060497,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060498,"byte_end":9060501,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060502,"byte_end":9060578,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060579,"byte_end":9060608,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":6582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061257,"byte_end":9061266,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"delay_for","qualname":"::time::delay::delay_for","value":"fn (duration: Duration) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060766,"byte_end":9060805,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060806,"byte_end":9060809,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `delay_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060810,"byte_end":9060885,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060886,"byte_end":9060921,"line_start":26,"line_end":26,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060922,"byte_end":9060925,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the delay to complete. The delay","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9060926,"byte_end":9061001,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061002,"byte_end":9061079,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061080,"byte_end":9061115,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061116,"byte_end":9061119,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061120,"byte_end":9061138,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061139,"byte_end":9061142,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Canceling a delay is done by dropping the returned future. No additional","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061143,"byte_end":9061219,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ cleanup work is required.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061220,"byte_end":9061249,"line_start":35,"line_end":35,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7018},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061526,"byte_end":9061531,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"Delay","qualname":"::time::delay::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":7019}],"decl_id":null,"docs":" Future returned by [`delay_until`](delay_until) and\n [`delay_for`](delay_for).\n","sig":null,"attributes":[{"value":"/ Future returned by [`delay_until`](delay_until) and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061344,"byte_end":9061399,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ [`delay_for`](delay_for).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061400,"byte_end":9061429,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061447,"byte_end":9061514,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6585},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061971,"byte_end":9061979,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Delay>::deadline","value":"fn (&self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061901,"byte_end":9061959,"line_start":57,"line_end":57,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6586},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062183,"byte_end":9062193,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Delay>::is_elapsed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `Delay` has elapsed","sig":null,"attributes":[{"value":"/ Returns `true` if the `Delay` has elapsed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062048,"byte_end":9062093,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062098,"byte_end":9062101,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ A `Delay` is elapsed when the requested duration has elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062106,"byte_end":9062171,"line_start":64,"line_end":64,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6587},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062582,"byte_end":9062587,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"reset","qualname":"<Delay>::reset","value":"fn (&mut self, deadline: Instant) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Delay` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Delay` instance to a new deadline.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062261,"byte_end":9062311,"line_start":69,"line_end":69,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062316,"byte_end":9062319,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Delay`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062324,"byte_end":9062398,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062403,"byte_end":9062470,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062475,"byte_end":9062478,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062483,"byte_end":9062551,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062556,"byte_end":9062570,"line_start":75,"line_end":75,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":7075},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095417,"byte_end":9095422,"line_start":25,"line_end":25,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094304,"byte_end":9094355,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094356,"byte_end":9094359,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094360,"byte_end":9094421,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094422,"byte_end":9094425,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094426,"byte_end":9094500,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094501,"byte_end":9094580,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094581,"byte_end":9094656,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094657,"byte_end":9094732,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094733,"byte_end":9094761,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094762,"byte_end":9094765,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094766,"byte_end":9094843,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding delays.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094844,"byte_end":9094922,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9094923,"byte_end":9094999,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095000,"byte_end":9095080,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095081,"byte_end":9095158,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095159,"byte_end":9095240,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095241,"byte_end":9095323,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095324,"byte_end":9095327,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095328,"byte_end":9095388,"line_start":23,"line_end":23,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6776},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095573,"byte_end":9095581,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095510,"byte_end":9095561,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6777},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095713,"byte_end":9095724,"line_start":40,"line_end":40,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095630,"byte_end":9095701,"line_start":39,"line_end":39,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095912,"byte_end":9095923,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"fn () -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095846,"byte_end":9095900,"line_start":47,"line_end":47,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6779},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9096060,"byte_end":9096074,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095974,"byte_end":9096048,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":7087},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096914,"byte_end":9096921,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7088}],"decl_id":null,"docs":" A measurement of the system clock, useful for talking to\n external entities like the file system or other processes.\n","sig":null,"attributes":[{"value":"/ A measurement of the system clock, useful for talking to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096718,"byte_end":9096778,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"/ external entities like the file system or other processes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096779,"byte_end":9096841,"line_start":8,"line_end":8,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6790},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097168,"byte_end":9097171,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn () -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096975,"byte_end":9097021,"line_start":15,"line_end":15,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097026,"byte_end":9097029,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097034,"byte_end":9097048,"line_start":17,"line_end":17,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097053,"byte_end":9097056,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097061,"byte_end":9097068,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097073,"byte_end":9097102,"line_start":20,"line_end":20,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097107,"byte_end":9097110,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097115,"byte_end":9097144,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097149,"byte_end":9097156,"line_start":23,"line_end":23,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6791},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097297,"byte_end":9097305,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"fn (std: std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097221,"byte_end":9097285,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6792},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097441,"byte_end":9097449,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"fn (self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097379,"byte_end":9097429,"line_start":33,"line_end":33,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6793},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097693,"byte_end":9097707,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097508,"byte_end":9097580,"line_start":38,"line_end":38,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097585,"byte_end":9097588,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097593,"byte_end":9097605,"line_start":40,"line_end":40,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097610,"byte_end":9097613,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097618,"byte_end":9097681,"line_start":42,"line_end":42,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6794},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098398,"byte_end":9098420,"line_start":64,"line_end":64,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"fn (&self, earlier: Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097803,"byte_end":9097878,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097883,"byte_end":9097931,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097936,"byte_end":9097939,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097944,"byte_end":9097958,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097963,"byte_end":9097966,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097971,"byte_end":9097978,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9097983,"byte_end":9098035,"line_start":53,"line_end":53,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098040,"byte_end":9098043,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098048,"byte_end":9098066,"line_start":55,"line_end":55,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098071,"byte_end":9098092,"line_start":56,"line_end":56,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098097,"byte_end":9098130,"line_start":57,"line_end":57,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098135,"byte_end":9098180,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098185,"byte_end":9098222,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098227,"byte_end":9098289,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098294,"byte_end":9098364,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098369,"byte_end":9098374,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098379,"byte_end":9098386,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6795},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099143,"byte_end":9099168,"line_start":85,"line_end":85,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"fn (&self, earlier: Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098532,"byte_end":9098607,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098612,"byte_end":9098671,"line_start":69,"line_end":69,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098676,"byte_end":9098679,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098684,"byte_end":9098698,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098703,"byte_end":9098706,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098711,"byte_end":9098718,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098723,"byte_end":9098775,"line_start":74,"line_end":74,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098780,"byte_end":9098783,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098788,"byte_end":9098806,"line_start":76,"line_end":76,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098811,"byte_end":9098832,"line_start":77,"line_end":77,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098837,"byte_end":9098870,"line_start":78,"line_end":78,"column_start":5,"column_end":38}},{"value":"/     delay_for(Duration::new(1, 0)).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098875,"byte_end":9098920,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098925,"byte_end":9098962,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9098967,"byte_end":9099032,"line_start":81,"line_end":81,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099037,"byte_end":9099109,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099114,"byte_end":9099119,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099124,"byte_end":9099131,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6796},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099939,"byte_end":9099946,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn (&self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099275,"byte_end":9099345,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099350,"byte_end":9099353,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099358,"byte_end":9099370,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099375,"byte_end":9099378,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099383,"byte_end":9099451,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099456,"byte_end":9099522,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099527,"byte_end":9099554,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099559,"byte_end":9099562,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099567,"byte_end":9099581,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099586,"byte_end":9099589,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099594,"byte_end":9099601,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, delay_for};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099606,"byte_end":9099658,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099663,"byte_end":9099666,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099671,"byte_end":9099689,"line_start":102,"line_end":102,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099694,"byte_end":9099715,"line_start":103,"line_end":103,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099720,"byte_end":9099757,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099762,"byte_end":9099810,"line_start":105,"line_end":105,"column_start":5,"column_end":53}},{"value":"/     delay_for(three_secs).await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099815,"byte_end":9099851,"line_start":106,"line_end":106,"column_start":5,"column_end":41}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099856,"byte_end":9099905,"line_start":107,"line_end":107,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099910,"byte_end":9099915,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9099920,"byte_end":9099927,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6797},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100227,"byte_end":9100238,"line_start":117,"line_end":117,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100010,"byte_end":9100085,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100090,"byte_end":9100161,"line_start":115,"line_end":115,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100166,"byte_end":9100215,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6798},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100577,"byte_end":9100588,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn (&self, duration: Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100360,"byte_end":9100435,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100440,"byte_end":9100511,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100516,"byte_end":9100565,"line_start":123,"line_end":123,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":6834},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103041,"byte_end":9103049,"line_start":36,"line_end":36,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"fn (period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102310,"byte_end":9102387,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102388,"byte_end":9102419,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102420,"byte_end":9102423,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102424,"byte_end":9102504,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102505,"byte_end":9102544,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102545,"byte_end":9102548,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102549,"byte_end":9102622,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102623,"byte_end":9102626,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102627,"byte_end":9102639,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102640,"byte_end":9102643,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102644,"byte_end":9102689,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102690,"byte_end":9102693,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102694,"byte_end":9102708,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102709,"byte_end":9102712,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102713,"byte_end":9102720,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102721,"byte_end":9102759,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102760,"byte_end":9102763,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102764,"byte_end":9102782,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102783,"byte_end":9102804,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102805,"byte_end":9102874,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102875,"byte_end":9102878,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102879,"byte_end":9102909,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102910,"byte_end":9102940,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102941,"byte_end":9102971,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102972,"byte_end":9102975,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9102976,"byte_end":9103019,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103020,"byte_end":9103025,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103026,"byte_end":9103033,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6835},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103935,"byte_end":9103946,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"fn (start: Instant, period: Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `at`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103199,"byte_end":9103272,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `at`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103273,"byte_end":9103307,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103308,"byte_end":9103311,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103312,"byte_end":9103392,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103393,"byte_end":9103432,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103433,"byte_end":9103436,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103437,"byte_end":9103449,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103450,"byte_end":9103453,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103454,"byte_end":9103499,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103500,"byte_end":9103503,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103504,"byte_end":9103518,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103519,"byte_end":9103522,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103523,"byte_end":9103530,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103531,"byte_end":9103585,"line_start":55,"line_end":55,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103586,"byte_end":9103589,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103590,"byte_end":9103608,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103609,"byte_end":9103630,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103631,"byte_end":9103694,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103695,"byte_end":9103768,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103769,"byte_end":9103772,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103773,"byte_end":9103803,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103804,"byte_end":9103834,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103835,"byte_end":9103865,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103866,"byte_end":9103869,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103870,"byte_end":9103913,"line_start":66,"line_end":66,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103914,"byte_end":9103919,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9103920,"byte_end":9103927,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7110},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9104252,"byte_end":9104260,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":7111},{"krate":0,"index":7112}],"decl_id":null,"docs":" Stream returned by [`interval`](interval) and [`interval_at`](interval_at).\n","sig":null,"attributes":[{"value":"/ Stream returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9104144,"byte_end":9104223,"line_start":78,"line_end":78,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":6837},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9104505,"byte_end":9104514,"line_start":90,"line_end":90,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6838},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105606,"byte_end":9105610,"line_start":127,"line_end":127,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"fn (&mut self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105001,"byte_end":9105070,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105075,"byte_end":9105078,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105083,"byte_end":9105097,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105102,"byte_end":9105105,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105110,"byte_end":9105117,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105122,"byte_end":9105142,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105147,"byte_end":9105150,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105155,"byte_end":9105183,"line_start":113,"line_end":113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105188,"byte_end":9105191,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105196,"byte_end":9105214,"line_start":115,"line_end":115,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105219,"byte_end":9105240,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105245,"byte_end":9105314,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105319,"byte_end":9105322,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105327,"byte_end":9105357,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105362,"byte_end":9105392,"line_start":120,"line_end":120,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105397,"byte_end":9105427,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105432,"byte_end":9105435,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105440,"byte_end":9105483,"line_start":123,"line_end":123,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105488,"byte_end":9105493,"line_start":124,"line_end":124,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105498,"byte_end":9105505,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105510,"byte_end":9105550,"line_start":126,"line_end":126,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":6861},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107262,"byte_end":9107269,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"fn <T> (duration: Duration, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106247,"byte_end":9106324,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106325,"byte_end":9106328,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106329,"byte_end":9106408,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106409,"byte_end":9106481,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106482,"byte_end":9106495,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106496,"byte_end":9106499,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106500,"byte_end":9106517,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106518,"byte_end":9106521,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106522,"byte_end":9106600,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106601,"byte_end":9106631,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106632,"byte_end":9106635,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106636,"byte_end":9106716,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106717,"byte_end":9106744,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106745,"byte_end":9106748,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106749,"byte_end":9106763,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106764,"byte_end":9106767,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106768,"byte_end":9106828,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106829,"byte_end":9106832,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106833,"byte_end":9106844,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106845,"byte_end":9106874,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106875,"byte_end":9106904,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106905,"byte_end":9106908,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106909,"byte_end":9106937,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106938,"byte_end":9106941,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106942,"byte_end":9106964,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9106965,"byte_end":9107003,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107004,"byte_end":9107031,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107032,"byte_end":9107035,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107036,"byte_end":9107109,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107110,"byte_end":9107176,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107177,"byte_end":9107232,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107233,"byte_end":9107238,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107239,"byte_end":9107246,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107247,"byte_end":9107254,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":6863},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108491,"byte_end":9108501,"line_start":90,"line_end":90,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"fn <T> (deadline: Instant, future: T) -> Timeout<T>","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107460,"byte_end":9107532,"line_start":56,"line_end":56,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107533,"byte_end":9107536,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107537,"byte_end":9107614,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107615,"byte_end":9107670,"line_start":59,"line_end":59,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107671,"byte_end":9107674,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107675,"byte_end":9107692,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107693,"byte_end":9107696,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107697,"byte_end":9107775,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107776,"byte_end":9107806,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107807,"byte_end":9107810,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107811,"byte_end":9107891,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107892,"byte_end":9107919,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107920,"byte_end":9107923,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107924,"byte_end":9107938,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107939,"byte_end":9107942,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9107943,"byte_end":9108003,"line_start":71,"line_end":71,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108004,"byte_end":9108007,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108008,"byte_end":9108019,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108020,"byte_end":9108063,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108064,"byte_end":9108093,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108094,"byte_end":9108097,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108098,"byte_end":9108126,"line_start":77,"line_end":77,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108127,"byte_end":9108130,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108131,"byte_end":9108153,"line_start":79,"line_end":79,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108154,"byte_end":9108192,"line_start":80,"line_end":80,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108193,"byte_end":9108220,"line_start":81,"line_end":81,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108221,"byte_end":9108224,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108225,"byte_end":9108303,"line_start":83,"line_end":83,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108304,"byte_end":9108318,"line_start":84,"line_end":84,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108319,"byte_end":9108405,"line_start":85,"line_end":85,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108406,"byte_end":9108461,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108462,"byte_end":9108467,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108468,"byte_end":9108475,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108476,"byte_end":9108483,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7115},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108845,"byte_end":9108852,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":7117},{"krate":0,"index":7118}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"/ Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108673,"byte_end":9108748,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108749,"byte_end":9108816,"line_start":103,"line_end":103,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7122},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108965,"byte_end":9108972,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::timeout::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108893,"byte_end":9108925,"line_start":110,"line_end":110,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6870},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109323,"byte_end":9109330,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109250,"byte_end":9109311,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6871},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109458,"byte_end":9109465,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109377,"byte_end":9109446,"line_start":132,"line_end":132,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6872},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109594,"byte_end":9109604,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109524,"byte_end":9109582,"line_start":137,"line_end":137,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":7144},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128005,"byte_end":9128013,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"throttle","qualname":"::time::throttle::throttle","value":"fn <T> (duration: Duration, stream: T) -> Throttle<T>","parent":null,"children":[],"decl_id":null,"docs":" Slows down a stream by enforcing a delay between items.\n They will be produced not more often than the specified interval.","sig":null,"attributes":[{"value":"/ Slows down a stream by enforcing a delay between items.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127432,"byte_end":9127491,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ They will be produced not more often than the specified interval.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127492,"byte_end":9127561,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127562,"byte_end":9127565,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127566,"byte_end":9127579,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127580,"byte_end":9127583,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Create a throttled stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127584,"byte_end":9127614,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ ```rust,norun","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127615,"byte_end":9127632,"line_start":19,"line_end":19,"column_start":1,"column_end":18}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127633,"byte_end":9127661,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use tokio::stream::StreamExt;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127662,"byte_end":9127695,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/ use tokio::time::throttle;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127696,"byte_end":9127726,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127727,"byte_end":9127730,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127731,"byte_end":9127753,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ let mut item_stream = throttle(Duration::from_secs(2), futures::stream::repeat(\"one\"));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127754,"byte_end":9127845,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127846,"byte_end":9127849,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127850,"byte_end":9127860,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/     // The string will be produced at most every 2 seconds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127861,"byte_end":9127923,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/     println!(\"{:?}\", item_stream.next().await);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127924,"byte_end":9127975,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127976,"byte_end":9127981,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127982,"byte_end":9127989,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9127990,"byte_end":9127997,"line_start":32,"line_end":32,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7476},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128508,"byte_end":9128516,"line_start":55,"line_end":55,"column_start":16,"column_end":24},"name":"Throttle","qualname":"::time::throttle::Throttle","value":"Throttle {  }","parent":null,"children":[{"krate":0,"index":7478},{"krate":0,"index":7479},{"krate":0,"index":7480},{"krate":0,"index":7481}],"decl_id":null,"docs":" Stream for the [`throttle`](throttle) function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"<::pin_project_lite::pin_project macros>","byte_start":8070301,"byte_end":8070312,"line_start":61,"line_end":61,"column_start":8,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":7148},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128983,"byte_end":9128990,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Throttle<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128876,"byte_end":9128949,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128954,"byte_end":9128971,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7149},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129299,"byte_end":9129306,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Throttle<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this combinator\n is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this combinator","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129038,"byte_end":9129116,"line_start":77,"line_end":77,"column_start":5,"column_end":83}},{"value":"/ is pulling from.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129121,"byte_end":9129141,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129146,"byte_end":9129149,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the stream","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129154,"byte_end":9129234,"line_start":80,"line_end":80,"column_start":5,"column_end":85}},{"value":"/ which may otherwise confuse this combinator.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129239,"byte_end":9129287,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":7150},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129601,"byte_end":9129611,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Throttle<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129366,"byte_end":9129428,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129433,"byte_end":9129436,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so care","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129441,"byte_end":9129518,"line_start":88,"line_end":88,"column_start":5,"column_end":82}},{"value":"/ should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129523,"byte_end":9129589,"line_start":89,"line_end":89,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":6921},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126519,"byte_end":9126524,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126469,"byte_end":9126509,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":6922},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126582,"byte_end":9126590,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126555,"byte_end":9126572,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":6923},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126679,"byte_end":9126684,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":6920},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126597,"byte_end":9126669,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":783},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164023,"byte_end":164029,"line_start":40,"line_end":40,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163932,"byte_end":163961,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163966,"byte_end":163969,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163974,"byte_end":164013,"line_start":39,"line_end":39,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":784},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164059,"byte_end":164065,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164036,"byte_end":164049,"line_start":42,"line_end":42,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":25894,"byte_end":25903,"line_start":33,"line_end":33,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":25919,"byte_end":25928,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":26278,"byte_end":26283,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28039,"byte_end":28048,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28211,"byte_end":28220,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":29407,"byte_end":29416,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30170,"byte_end":30176,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30390,"byte_end":30396,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30538,"byte_end":30544,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31081,"byte_end":31086,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31113,"byte_end":31118,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/try_join.rs","byte_start":32315,"byte_end":32323,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44585,"byte_end":44588,"line_start":75,"line_end":75,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44748,"byte_end":44751,"line_start":83,"line_end":83,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":45380,"byte_end":45386,"line_start":107,"line_end":107,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":51312,"byte_end":51315,"line_start":151,"line_end":151,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":51458,"byte_end":51461,"line_start":159,"line_end":159,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":52257,"byte_end":52263,"line_start":191,"line_end":191,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54723,"byte_end":54726,"line_start":67,"line_end":67,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54869,"byte_end":54872,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":55326,"byte_end":55332,"line_start":93,"line_end":93,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63209,"byte_end":63212,"line_start":172,"line_end":172,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63360,"byte_end":63363,"line_start":180,"line_end":180,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63932,"byte_end":63935,"line_start":202,"line_end":202,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":64443,"byte_end":64449,"line_start":221,"line_end":221,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":64962,"byte_end":64968,"line_start":239,"line_end":239,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":65484,"byte_end":65490,"line_start":257,"line_end":257,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":66001,"byte_end":66007,"line_start":275,"line_end":275,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8095302,"byte_end":8095313,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8096072,"byte_end":8096083,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8096290,"byte_end":8096301,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8098923,"byte_end":8098934,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8084873,"byte_end":8084879,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8087740,"byte_end":8087746,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8088114,"byte_end":8088120,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8088256,"byte_end":8088262,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089405,"byte_end":8089411,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089489,"byte_end":8089495,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089630,"byte_end":8089635,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8091110,"byte_end":8091119,"line_start":289,"line_end":289,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105585,"byte_end":8105596,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111785,"byte_end":8111796,"line_start":342,"line_end":342,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8112289,"byte_end":8112300,"line_start":364,"line_end":364,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8113381,"byte_end":8113392,"line_start":410,"line_end":410,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8113565,"byte_end":8113576,"line_start":416,"line_end":416,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115711,"byte_end":8115723,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125218,"byte_end":8125230,"line_start":288,"line_end":288,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125255,"byte_end":8125267,"line_start":289,"line_end":289,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125286,"byte_end":8125298,"line_start":291,"line_end":291,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136123,"byte_end":8136131,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137048,"byte_end":8137057,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137307,"byte_end":8137315,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137870,"byte_end":8137879,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8138828,"byte_end":8138833,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139226,"byte_end":8139231,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139484,"byte_end":8139489,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139612,"byte_end":8139620,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139657,"byte_end":8139666,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139703,"byte_end":8139711,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139748,"byte_end":8139757,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139800,"byte_end":8139808,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139976,"byte_end":8139985,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/seek.rs","byte_start":8140675,"byte_end":8140679,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8152629,"byte_end":8152630,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8181180,"byte_end":8181181,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182732,"byte_end":8182733,"line_start":60,"line_end":60,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8206759,"byte_end":8206760,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208160,"byte_end":8208169,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8210348,"byte_end":8210357,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8211333,"byte_end":8211342,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8212173,"byte_end":8212182,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8212693,"byte_end":8212702,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214209,"byte_end":8214218,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216055,"byte_end":8216064,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216206,"byte_end":8216215,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1466}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216927,"byte_end":8216936,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8217466,"byte_end":8217475,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1474},{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8217954,"byte_end":8217963,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8219917,"byte_end":8219926,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8222204,"byte_end":8222213,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223103,"byte_end":8223112,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223594,"byte_end":8223603,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223890,"byte_end":8223899,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225068,"byte_end":8225073,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226213,"byte_end":8226218,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226497,"byte_end":8226502,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8227019,"byte_end":8227024,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/copy.rs","byte_start":8230054,"byte_end":8230058,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233173,"byte_end":8233178,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233387,"byte_end":8233392,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233625,"byte_end":8233630,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/flush.rs","byte_start":8234395,"byte_end":8234400,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235580,"byte_end":8235585,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236295,"byte_end":8236300,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8237008,"byte_end":8237013,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read.rs","byte_start":8238411,"byte_end":8238415,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_buf.rs","byte_start":8239457,"byte_end":8239464,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_exact.rs","byte_start":8240856,"byte_end":8240865,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_line.rs","byte_start":8246926,"byte_end":8246934,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8248157,"byte_end":8248162,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1740}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8249838,"byte_end":8249847,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_string.rs","byte_start":8251951,"byte_end":8251963,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_until.rs","byte_start":8254086,"byte_end":8254095,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/repeat.rs","byte_start":8255924,"byte_end":8255930,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/shutdown.rs","byte_start":8256867,"byte_end":8256875,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8258708,"byte_end":8258712,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8259222,"byte_end":8259226,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260191,"byte_end":8260196,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260935,"byte_end":8260940,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8261598,"byte_end":8261603,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275772,"byte_end":8275784,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8276289,"byte_end":8276301,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8277840,"byte_end":8277852,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262771,"byte_end":8262775,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264403,"byte_end":8264407,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8265064,"byte_end":8265068,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write.rs","byte_start":8266625,"byte_end":8266630,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_all.rs","byte_start":8267423,"byte_end":8267431,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_buf.rs","byte_start":8268931,"byte_end":8268939,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69108,"byte_end":69118,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69158,"byte_end":69168,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69449,"byte_end":69461,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69501,"byte_end":69513,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69773,"byte_end":69785,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69825,"byte_end":69837,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282688,"byte_end":8282699,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2393},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292627,"byte_end":8292638,"line_start":373,"line_end":373,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2412},{"krate":0,"index":2413}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292953,"byte_end":8292964,"line_start":385,"line_end":385,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293404,"byte_end":8293415,"line_start":399,"line_end":399,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293741,"byte_end":8293752,"line_start":411,"line_end":411,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2421}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293968,"byte_end":8293979,"line_start":422,"line_end":422,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294811,"byte_end":8294819,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2438},{"krate":0,"index":2439}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295457,"byte_end":8295465,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296812,"byte_end":8296820,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8299082,"byte_end":8299090,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8299410,"byte_end":8299419,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2473}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8300232,"byte_end":8300240,"line_start":153,"line_end":153,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8300334,"byte_end":8300343,"line_start":159,"line_end":159,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301818,"byte_end":8301827,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2516},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8324752,"byte_end":8324761,"line_start":771,"line_end":771,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325197,"byte_end":8325206,"line_start":785,"line_end":785,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325559,"byte_end":8325568,"line_start":799,"line_end":799,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2564},{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325882,"byte_end":8325891,"line_start":813,"line_end":813,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8326635,"byte_end":8326644,"line_start":842,"line_end":842,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8326858,"byte_end":8326867,"line_start":853,"line_end":853,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2578}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8327873,"byte_end":8327882,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2642},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674},{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341496,"byte_end":8341505,"line_start":372,"line_end":372,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341941,"byte_end":8341950,"line_start":386,"line_end":386,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2681},{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8342270,"byte_end":8342279,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8342498,"byte_end":8342507,"line_start":409,"line_end":409,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344573,"byte_end":8344585,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344788,"byte_end":8344800,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345327,"byte_end":8345335,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346967,"byte_end":8346975,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348295,"byte_end":8348303,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348394,"byte_end":8348402,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349218,"byte_end":8349230,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355853,"byte_end":8355865,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356307,"byte_end":8356319,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356648,"byte_end":8356660,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356785,"byte_end":8356797,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357155,"byte_end":8357163,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357895,"byte_end":8357903,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360043,"byte_end":8360055,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2851},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364559,"byte_end":8364571,"line_start":181,"line_end":181,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364887,"byte_end":8364899,"line_start":193,"line_end":193,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365341,"byte_end":8365353,"line_start":207,"line_end":207,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365673,"byte_end":8365685,"line_start":219,"line_end":219,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365810,"byte_end":8365822,"line_start":225,"line_end":225,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366814,"byte_end":8366822,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367142,"byte_end":8367151,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367635,"byte_end":8367643,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367739,"byte_end":8367748,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368686,"byte_end":8368696,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2937},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2946},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2950}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372132,"byte_end":8372142,"line_start":122,"line_end":122,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372580,"byte_end":8372590,"line_start":136,"line_end":136,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372903,"byte_end":8372913,"line_start":148,"line_end":148,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8373227,"byte_end":8373237,"line_start":162,"line_end":162,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8373724,"byte_end":8373734,"line_start":181,"line_end":181,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8375251,"byte_end":8375261,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8375386,"byte_end":8375396,"line_start":232,"line_end":232,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":78673,"byte_end":78682,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":78977,"byte_end":78986,"line_start":20,"line_end":20,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":79135,"byte_end":79144,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79488,"byte_end":79497,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79522,"byte_end":79531,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79541,"byte_end":79550,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":80036,"byte_end":80045,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":80330,"byte_end":80339,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80680,"byte_end":80689,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80714,"byte_end":80723,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80733,"byte_end":80742,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80921,"byte_end":80930,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":81215,"byte_end":81224,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83339,"byte_end":83347,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83372,"byte_end":83380,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83390,"byte_end":83398,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83573,"byte_end":83581,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83865,"byte_end":83873,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84213,"byte_end":84224,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84249,"byte_end":84260,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84270,"byte_end":84281,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84964,"byte_end":84975,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":85265,"byte_end":85276,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":85440,"byte_end":85451,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/unsafe_cell.rs","byte_start":85639,"byte_end":85649,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8379730,"byte_end":8379736,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8380542,"byte_end":8380548,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8380762,"byte_end":8380768,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3069}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":90758,"byte_end":90768,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":91033,"byte_end":91043,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":91502,"byte_end":91507,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":96232,"byte_end":96242,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":96351,"byte_end":96363,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89860,"byte_end":89863,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89952,"byte_end":89955,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/context.rs","byte_start":117985,"byte_end":117994,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8438839,"byte_end":8438853,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8442387,"byte_end":8442392,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3171}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8443079,"byte_end":8443093,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8443980,"byte_end":8443994,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444160,"byte_end":8444167,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3181},{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444625,"byte_end":8444632,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444800,"byte_end":8444803,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3187},{"krate":0,"index":3189},{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8445901,"byte_end":8445907,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3195},{"krate":0,"index":3196}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453275,"byte_end":8453281,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453306,"byte_end":8453312,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453671,"byte_end":8453675,"line_start":74,"line_end":74,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8454453,"byte_end":8454457,"line_start":97,"line_end":97,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3272},{"krate":0,"index":3274}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8460800,"byte_end":8460809,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463888,"byte_end":8463897,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464140,"byte_end":8464149,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464426,"byte_end":8464435,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464469,"byte_end":8464474,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8465152,"byte_end":8465159,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8465636,"byte_end":8465643,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3352},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8467621,"byte_end":8467626,"line_start":90,"line_end":90,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3351}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480059,"byte_end":8480069,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480106,"byte_end":8480116,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480132,"byte_end":8480142,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480318,"byte_end":8480328,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480355,"byte_end":8480365,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8481507,"byte_end":8481517,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3399}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8481783,"byte_end":8481793,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8483040,"byte_end":8483047,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8484578,"byte_end":8484585,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8484675,"byte_end":8484682,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8487364,"byte_end":8487369,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8496225,"byte_end":8496233,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8498110,"byte_end":8498115,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8498274,"byte_end":8498282,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/waker.rs","byte_start":8500100,"byte_end":8500108,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3559},{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8446920,"byte_end":8446924,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8446955,"byte_end":8446959,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447096,"byte_end":8447104,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447145,"byte_end":8447153,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8449077,"byte_end":8449081,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3611},{"krate":0,"index":3612}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8449973,"byte_end":8449977,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3615}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450146,"byte_end":8450154,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450440,"byte_end":8450444,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3622}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450684,"byte_end":8450688,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3625}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450840,"byte_end":8450848,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8451064,"byte_end":8451068,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/blocking/mod.rs","byte_start":119213,"byte_end":119225,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121390,"byte_end":121397,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":129317,"byte_end":129324,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3684}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":129873,"byte_end":129880,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3686}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":130400,"byte_end":130407,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3688},{"krate":0,"index":3689}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":134172,"byte_end":134179,"line_start":501,"line_end":501,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":134258,"byte_end":134265,"line_start":507,"line_end":507,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/enter.rs","byte_start":139220,"byte_end":139225,"line_start":149,"line_end":149,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/enter.rs","byte_start":139355,"byte_end":139360,"line_start":155,"line_end":155,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140283,"byte_end":140289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141673,"byte_end":141679,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3710}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143076,"byte_end":143091,"line_start":128,"line_end":128,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143239,"byte_end":143254,"line_start":134,"line_end":134,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143412,"byte_end":143427,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/shell.rs","byte_start":145716,"byte_end":145721,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/shell.rs","byte_start":146323,"byte_end":146329,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/spawner.rs","byte_start":146945,"byte_end":146952,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110062,"byte_end":110069,"line_start":306,"line_end":306,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":152718,"byte_end":152723,"line_start":89,"line_end":89,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":156824,"byte_end":156837,"line_start":209,"line_end":209,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":159193,"byte_end":159203,"line_start":292,"line_end":292,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":159416,"byte_end":159426,"line_start":300,"line_end":300,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":160315,"byte_end":160316,"line_start":327,"line_end":327,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8583223,"byte_end":8583226,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3826},{"krate":0,"index":3827}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8583948,"byte_end":8583956,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3834}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8584046,"byte_end":8584054,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3839},{"krate":0,"index":3840}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8586207,"byte_end":8586214,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3847},{"krate":0,"index":3848}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8586322,"byte_end":8586329,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592401,"byte_end":8592410,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3891}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592524,"byte_end":8592533,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592921,"byte_end":8592932,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3901}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593218,"byte_end":8593228,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3912},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8597024,"byte_end":8597034,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8599383,"byte_end":8599389,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3928}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8599674,"byte_end":8599680,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":3931}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605894,"byte_end":8605900,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607758,"byte_end":8607764,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642305,"byte_end":8642314,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3992}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642460,"byte_end":8642469,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642508,"byte_end":8642517,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643468,"byte_end":8643477,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4013}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643623,"byte_end":8643632,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643671,"byte_end":8643680,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4020},{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/chain.rs","byte_start":8644603,"byte_end":8644608,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4035}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/chain.rs","byte_start":8644788,"byte_end":8644793,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4039},{"krate":0,"index":4040},{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646594,"byte_end":8646601,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646885,"byte_end":8646892,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4067},{"krate":0,"index":4068}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8647868,"byte_end":8647874,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8647929,"byte_end":8647935,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4080},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648324,"byte_end":8648327,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648373,"byte_end":8648376,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648759,"byte_end":8648762,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648810,"byte_end":8648813,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8649328,"byte_end":8649334,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8649423,"byte_end":8649429,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109},{"krate":0,"index":4110},{"krate":0,"index":4111}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650507,"byte_end":8650512,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650560,"byte_end":8650565,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4118},{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650965,"byte_end":8650973,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651021,"byte_end":8651029,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652290,"byte_end":8652295,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652326,"byte_end":8652331,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652362,"byte_end":8652367,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652910,"byte_end":8652915,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4154},{"krate":0,"index":4155},{"krate":0,"index":4156}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653529,"byte_end":8653535,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653753,"byte_end":8653759,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4175}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653878,"byte_end":8653884,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8654970,"byte_end":8654979,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4194}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8655200,"byte_end":8655209,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4198}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8655331,"byte_end":8655340,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fold.rs","byte_start":8656412,"byte_end":8656422,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4219}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fold.rs","byte_start":8656618,"byte_end":8656628,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":4225}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fuse.rs","byte_start":8657527,"byte_end":8657531,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4236}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fuse.rs","byte_start":8657691,"byte_end":8657695,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658629,"byte_end":8658633,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659295,"byte_end":8659299,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660004,"byte_end":8660007,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660196,"byte_end":8660199,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4276}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660320,"byte_end":8660323,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4285}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/merge.rs","byte_start":8661168,"byte_end":8661173,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4299}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/merge.rs","byte_start":8661427,"byte_end":8661432,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663167,"byte_end":8663171,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663205,"byte_end":8663209,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4323}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663350,"byte_end":8663354,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4326},{"krate":0,"index":4327}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663841,"byte_end":8663845,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664472,"byte_end":8664476,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665011,"byte_end":8665018,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665049,"byte_end":8665056,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665087,"byte_end":8665094,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665787,"byte_end":8665794,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671459,"byte_end":8671468,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4390},{"krate":0,"index":4393},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":4401},{"krate":0,"index":4403}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678469,"byte_end":8678478,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8680017,"byte_end":8680026,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681242,"byte_end":8681246,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4427}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681456,"byte_end":8681460,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4430}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681593,"byte_end":8681597,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8682823,"byte_end":8682832,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4449}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8683053,"byte_end":8683062,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8683247,"byte_end":8683256,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684605,"byte_end":8684612,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684646,"byte_end":8684653,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684860,"byte_end":8684867,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":4480},{"krate":0,"index":4481}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685477,"byte_end":8685481,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4494}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685691,"byte_end":8685695,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4497}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685828,"byte_end":8685832,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4500},{"krate":0,"index":4501},{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687351,"byte_end":8687360,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4516}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687620,"byte_end":8687629,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4520}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687822,"byte_end":8687831,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4524},{"krate":0,"index":4525},{"krate":0,"index":4528}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/timeout.rs","byte_start":8721252,"byte_end":8721259,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4660}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/timeout.rs","byte_start":8721614,"byte_end":8721621,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641927,"byte_end":8641929,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739717,"byte_end":8739724,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743004,"byte_end":8743021,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4678}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755778,"byte_end":8755784,"line_start":413,"line_end":413,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755821,"byte_end":8755827,"line_start":414,"line_end":414,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755865,"byte_end":8755873,"line_start":416,"line_end":416,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755910,"byte_end":8755918,"line_start":417,"line_end":417,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755934,"byte_end":8755940,"line_start":419,"line_end":419,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4750},{"krate":0,"index":4752},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4757}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8762905,"byte_end":8762911,"line_start":644,"line_end":644,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8763091,"byte_end":8763097,"line_start":653,"line_end":653,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4764}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8763251,"byte_end":8763259,"line_start":661,"line_end":661,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4767}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8764959,"byte_end":8764967,"line_start":717,"line_end":717,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4777}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8770614,"byte_end":8770622,"line_start":883,"line_end":883,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4781},{"krate":0,"index":4782}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8771043,"byte_end":8771051,"line_start":901,"line_end":901,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4786}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8771728,"byte_end":8771734,"line_start":925,"line_end":925,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772069,"byte_end":8772075,"line_start":937,"line_end":937,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4794}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772219,"byte_end":8772227,"line_start":943,"line_end":943,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4797}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772358,"byte_end":8772362,"line_start":949,"line_end":949,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4800},{"krate":0,"index":4801}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8773749,"byte_end":8773758,"line_start":991,"line_end":991,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4808},{"krate":0,"index":4810}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774154,"byte_end":8774163,"line_start":1010,"line_end":1010,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4814}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774604,"byte_end":8774613,"line_start":1025,"line_end":1025,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4818}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774886,"byte_end":8774895,"line_start":1034,"line_end":1034,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774922,"byte_end":8774934,"line_start":1036,"line_end":1036,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4821}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8775276,"byte_end":8775288,"line_start":1046,"line_end":1046,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8779869,"byte_end":8779874,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4872},{"krate":0,"index":4873},{"krate":0,"index":4875},{"krate":0,"index":4877},{"krate":0,"index":4878},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4883},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4887}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8789856,"byte_end":8789862,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4892}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8790344,"byte_end":8790350,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4895},{"krate":0,"index":4896}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790988,"byte_end":8790994,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4914}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791126,"byte_end":8791132,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791539,"byte_end":8791547,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4923}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793319,"byte_end":8793327,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930},{"krate":0,"index":4935},{"krate":0,"index":4936},{"krate":0,"index":4937}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795755,"byte_end":8795763,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795823,"byte_end":8795831,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5988},{"krate":0,"index":5989}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796019,"byte_end":8796025,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4942},{"krate":0,"index":4943},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4954},{"krate":0,"index":4956}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8807415,"byte_end":8807417,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4991}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8807818,"byte_end":8807820,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4999}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8808127,"byte_end":8808136,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5002}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8808398,"byte_end":8808410,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5005}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8810105,"byte_end":8810109,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5027}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8810742,"byte_end":8810750,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5034}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811016,"byte_end":8811020,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811069,"byte_end":8811073,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811552,"byte_end":8811554,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5049},{"krate":0,"index":5050}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812252,"byte_end":8812254,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812402,"byte_end":8812404,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812582,"byte_end":8812584,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5060}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812984,"byte_end":8812986,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5064}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8813395,"byte_end":8813397,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5071},{"krate":0,"index":5075}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8816368,"byte_end":8816370,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5081}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8816806,"byte_end":8816810,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5087}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8817274,"byte_end":8817278,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5091}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8817827,"byte_end":8817839,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8819329,"byte_end":8819340,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5114},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8822057,"byte_end":8822059,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5155},{"krate":0,"index":5157}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8827763,"byte_end":8827765,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5160}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8828042,"byte_end":8828044,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8831443,"byte_end":8831445,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5169}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832119,"byte_end":8832134,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5185}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832275,"byte_end":8832290,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5188}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832748,"byte_end":8832765,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5194}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833743,"byte_end":8833760,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5207},{"krate":0,"index":5208}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836232,"byte_end":8836249,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5211},{"krate":0,"index":5212}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836415,"byte_end":8836430,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837282,"byte_end":8837291,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5226}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837451,"byte_end":8837460,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837946,"byte_end":8837958,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837991,"byte_end":8838003,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5233}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838343,"byte_end":8838355,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5236}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838584,"byte_end":8838593,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5238}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838723,"byte_end":8838732,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839218,"byte_end":8839230,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5241}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839536,"byte_end":8839548,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839706,"byte_end":8839717,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5244}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839816,"byte_end":8839827,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5246}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839957,"byte_end":8839968,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840472,"byte_end":8840488,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840525,"byte_end":8840541,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6045}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845147,"byte_end":8845152,"line_start":115,"line_end":115,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845197,"byte_end":8845202,"line_start":116,"line_end":116,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845251,"byte_end":8845261,"line_start":117,"line_end":117,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845543,"byte_end":8845555,"line_start":127,"line_end":127,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5270}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845698,"byte_end":8845710,"line_start":133,"line_end":133,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846192,"byte_end":8846197,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5275},{"krate":0,"index":5279},{"krate":0,"index":5280}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847274,"byte_end":8847284,"line_start":184,"line_end":184,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5284}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847379,"byte_end":8847384,"line_start":190,"line_end":190,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847468,"byte_end":8847473,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5290}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847591,"byte_end":8847601,"line_start":205,"line_end":205,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5294},{"krate":0,"index":5295}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847744,"byte_end":8847754,"line_start":212,"line_end":212,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5299}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847906,"byte_end":8847916,"line_start":218,"line_end":218,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8848077,"byte_end":8848087,"line_start":224,"line_end":224,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5307}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852055,"byte_end":8852063,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852096,"byte_end":8852104,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852367,"byte_end":8852373,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5339}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8856381,"byte_end":8856387,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5341}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8858125,"byte_end":8858133,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5344}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8858643,"byte_end":8858651,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5346},{"krate":0,"index":5347}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8863481,"byte_end":8863489,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5350}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8866447,"byte_end":8866453,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868339,"byte_end":8868348,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5383}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868510,"byte_end":8868519,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868588,"byte_end":8868600,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5386}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868899,"byte_end":8868911,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870722,"byte_end":8870728,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5399},{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":5409}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876667,"byte_end":8876673,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5412}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876812,"byte_end":8876820,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5416}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881175,"byte_end":8881183,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881330,"byte_end":8881338,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881801,"byte_end":8881806,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5429},{"krate":0,"index":5430},{"krate":0,"index":5432},{"krate":0,"index":5436},{"krate":0,"index":5440},{"krate":0,"index":5442},{"krate":0,"index":5444},{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886011,"byte_end":8886016,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886053,"byte_end":8886058,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886083,"byte_end":8886088,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5454}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886457,"byte_end":8886462,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5458}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886857,"byte_end":8886862,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5477}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8888575,"byte_end":8888580,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5479}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8892058,"byte_end":8892067,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5520},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5528},{"krate":0,"index":5529},{"krate":0,"index":5530},{"krate":0,"index":5534}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8901601,"byte_end":8901610,"line_start":348,"line_end":348,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5538}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8901811,"byte_end":8901817,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5540},{"krate":0,"index":5541}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8902683,"byte_end":8902690,"line_start":385,"line_end":385,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5543},{"krate":0,"index":5544}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8903198,"byte_end":8903205,"line_start":404,"line_end":404,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5547},{"krate":0,"index":5548}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8904004,"byte_end":8904011,"line_start":434,"line_end":434,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905653,"byte_end":8905660,"line_start":471,"line_end":471,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905707,"byte_end":8905719,"line_start":475,"line_end":475,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5555}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905812,"byte_end":8905824,"line_start":481,"line_end":481,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5557}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905968,"byte_end":8905980,"line_start":487,"line_end":487,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906027,"byte_end":8906042,"line_start":491,"line_end":491,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5560},{"krate":0,"index":5561}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906664,"byte_end":8906679,"line_start":512,"line_end":512,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906977,"byte_end":8906992,"line_start":521,"line_end":521,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8907085,"byte_end":8907091,"line_start":526,"line_end":526,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8912360,"byte_end":8912369,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5617},{"krate":0,"index":5619},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5626},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928441,"byte_end":8928450,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5636}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928529,"byte_end":8928538,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5638}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928916,"byte_end":8928925,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928950,"byte_end":8928959,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928997,"byte_end":8929003,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5643},{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5650},{"krate":0,"index":5652},{"krate":0,"index":5653}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935409,"byte_end":8935415,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5656}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935488,"byte_end":8935494,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5658}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935916,"byte_end":8935928,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":5660}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936108,"byte_end":8936120,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5663}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936264,"byte_end":8936276,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936323,"byte_end":8936338,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5666},{"krate":0,"index":5667}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936868,"byte_end":8936883,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8937181,"byte_end":8937196,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8937234,"byte_end":8937240,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5672},{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5675},{"krate":0,"index":5676},{"krate":0,"index":5677},{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5680}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8942653,"byte_end":8942661,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5686},{"krate":0,"index":5687},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5692},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8946324,"byte_end":8946332,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5699}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8946685,"byte_end":8946696,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5703},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5706},{"krate":0,"index":5707},{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949047,"byte_end":8949056,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715},{"krate":0,"index":5716},{"krate":0,"index":5719}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950141,"byte_end":8950156,"line_start":92,"line_end":92,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5722}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950414,"byte_end":8950429,"line_start":101,"line_end":101,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954373,"byte_end":8954388,"line_start":114,"line_end":114,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5740}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954656,"byte_end":8954671,"line_start":124,"line_end":124,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5746}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955675,"byte_end":8955681,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955726,"byte_end":8955732,"line_start":158,"line_end":158,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955788,"byte_end":8955803,"line_start":159,"line_end":159,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955863,"byte_end":8955879,"line_start":160,"line_end":160,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955920,"byte_end":8955926,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5759},{"krate":0,"index":5760},{"krate":0,"index":5764},{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958971,"byte_end":8958986,"line_start":259,"line_end":259,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5771},{"krate":0,"index":5772}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959117,"byte_end":8959133,"line_start":267,"line_end":267,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5775},{"krate":0,"index":5776}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959267,"byte_end":8959283,"line_start":275,"line_end":275,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5779}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959405,"byte_end":8959411,"line_start":281,"line_end":281,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5782}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959495,"byte_end":8959501,"line_start":287,"line_end":287,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5785}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8965776,"byte_end":8965787,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5816},{"krate":0,"index":5817}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971714,"byte_end":8971725,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5820}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971811,"byte_end":8971822,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5822}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971955,"byte_end":8971966,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971991,"byte_end":8972002,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8972098,"byte_end":8972103,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5829},{"krate":0,"index":5830}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975664,"byte_end":8975673,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5861}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975853,"byte_end":8975862,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978031,"byte_end":8978039,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5872},{"krate":0,"index":5873}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979311,"byte_end":8979319,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5877}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980685,"byte_end":8980693,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5884},{"krate":0,"index":5885}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980952,"byte_end":8980960,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5889}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981263,"byte_end":8981271,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5892}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981385,"byte_end":8981391,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5895},{"krate":0,"index":5896},{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982958,"byte_end":8982964,"line_start":374,"line_end":374,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5905}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983203,"byte_end":8983206,"line_start":385,"line_end":385,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5908},{"krate":0,"index":5909}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983347,"byte_end":8983353,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983455,"byte_end":8983462,"line_start":403,"line_end":403,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5914}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983685,"byte_end":8983692,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983809,"byte_end":8983816,"line_start":418,"line_end":418,"column_start":23,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983846,"byte_end":8983853,"line_start":420,"line_end":420,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5919}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8984000,"byte_end":8984007,"line_start":426,"line_end":426,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5922},{"krate":0,"index":5923}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/yield_now.rs","byte_start":8999745,"byte_end":8999753,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6325},{"krate":0,"index":6326}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9006736,"byte_end":9006744,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6362},{"krate":0,"index":6364},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9014501,"byte_end":9014509,"line_start":439,"line_end":439,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9014648,"byte_end":9014656,"line_start":445,"line_end":445,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6379},{"krate":0,"index":6380}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9015621,"byte_end":9015629,"line_start":469,"line_end":469,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6383}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9015710,"byte_end":9015718,"line_start":475,"line_end":475,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6385}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9016585,"byte_end":9016593,"line_start":505,"line_end":505,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6389},{"krate":0,"index":6390}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9017355,"byte_end":9017361,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6393},{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9017924,"byte_end":9017927,"line_start":552,"line_end":552,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6397},{"krate":0,"index":6399},{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021372,"byte_end":9021380,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6425},{"krate":0,"index":6429},{"krate":0,"index":6432}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023156,"byte_end":9023164,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6438}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023372,"byte_end":9023380,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6442}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023701,"byte_end":9023716,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6446},{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024017,"byte_end":9024022,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6456}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024640,"byte_end":9024641,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024837,"byte_end":9024848,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6463}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024992,"byte_end":9025003,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6465}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9025150,"byte_end":9025161,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/clock.rs","byte_start":9028680,"byte_end":9028685,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6967},{"krate":0,"index":6968},{"krate":0,"index":6969},{"krate":0,"index":6970}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039034,"byte_end":9039044,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6529},{"krate":0,"index":6531},{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536},{"krate":0,"index":6537},{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056662,"byte_end":9056672,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056700,"byte_end":9056710,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6544}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056847,"byte_end":9056857,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6547},{"krate":0,"index":6548}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9057239,"byte_end":9057244,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6553},{"krate":0,"index":6554},{"krate":0,"index":6555},{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6558}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059371,"byte_end":9059376,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059506,"byte_end":9059509,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":6563}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059596,"byte_end":9059603,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6566},{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6569}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061705,"byte_end":9061710,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6585},{"krate":0,"index":6586},{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062688,"byte_end":9062693,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6589},{"krate":0,"index":6590}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9075743,"byte_end":9075754,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6605},{"krate":0,"index":6606},{"krate":0,"index":6607},{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9077732,"byte_end":9077750,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6610},{"krate":0,"index":6611}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9078322,"byte_end":9078340,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6613}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9082292,"byte_end":9082297,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6639},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6646},{"krate":0,"index":6647},{"krate":0,"index":6648},{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6652}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088265,"byte_end":9088270,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":6655}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088478,"byte_end":9088483,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088508,"byte_end":9088513,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/handle.rs","byte_start":9088890,"byte_end":9088896,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6667},{"krate":0,"index":6668},{"krate":0,"index":6669}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/handle.rs","byte_start":9089541,"byte_end":9089547,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6671}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/registration.rs","byte_start":9089992,"byte_end":9090004,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6686},{"krate":0,"index":6687},{"krate":0,"index":6688},{"krate":0,"index":6689},{"krate":0,"index":6690}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/registration.rs","byte_start":9090829,"byte_end":9090841,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6692}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/stack.rs","byte_start":9091125,"byte_end":9091130,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/stack.rs","byte_start":9091221,"byte_end":9091226,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6702},{"krate":0,"index":6703},{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707},{"krate":0,"index":6708},{"krate":0,"index":6709}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9067311,"byte_end":9067317,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6749}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9070964,"byte_end":9070970,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6756},{"krate":0,"index":6757}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9072959,"byte_end":9072965,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6760}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9073442,"byte_end":9073447,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6765},{"krate":0,"index":6766},{"krate":0,"index":6767},{"krate":0,"index":6768}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9075064,"byte_end":9075069,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6770}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095498,"byte_end":9095503,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9096218,"byte_end":9096223,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9096250,"byte_end":9096255,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6782}],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096961,"byte_end":9096968,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6795},{"krate":0,"index":6796},{"krate":0,"index":6797},{"krate":0,"index":6798}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100742,"byte_end":9100749,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6800}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100878,"byte_end":9100885,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6802}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101000,"byte_end":9101007,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101172,"byte_end":9101179,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6807}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101284,"byte_end":9101291,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6810}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101432,"byte_end":9101439,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6812},{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101600,"byte_end":9101607,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6815}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101714,"byte_end":9101721,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6817}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9104446,"byte_end":9104454,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6837},{"krate":0,"index":6838}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105749,"byte_end":9105757,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6843},{"krate":0,"index":6844}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108984,"byte_end":9108991,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":6866}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109120,"byte_end":9109127,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":6869},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109665,"byte_end":9109672,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6875},{"krate":0,"index":6876}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110473,"byte_end":9110480,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6880}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110624,"byte_end":9110631,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110668,"byte_end":9110673,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6883}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128858,"byte_end":9128866,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7148},{"krate":0,"index":7149},{"krate":0,"index":7150}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129681,"byte_end":9129689,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7153},{"krate":0,"index":7154}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/level.rs","byte_start":9120577,"byte_end":9120582,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6902},{"krate":0,"index":6904},{"krate":0,"index":6905},{"krate":0,"index":6906},{"krate":0,"index":6907},{"krate":0,"index":6908}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/level.rs","byte_start":9125334,"byte_end":9125339,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6911}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/mod.rs","byte_start":9112398,"byte_end":9112403,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938},{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6942},{"krate":0,"index":6944},{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/mod.rs","byte_start":9118111,"byte_end":9118115,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6952}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/bit.rs","byte_start":9130522,"byte_end":9130526,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191},{"krate":0,"index":7192},{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7195}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/bit.rs","byte_start":9132000,"byte_end":9132004,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7197}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/addr.rs","byte_start":9139223,"byte_end":9139230,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7216},{"krate":0,"index":7217},{"krate":0,"index":7218},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7221},{"krate":0,"index":7222},{"krate":0,"index":7223}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/generation.rs","byte_start":9142259,"byte_end":9142269,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":7238},{"krate":0,"index":7239}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9143408,"byte_end":9143413,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7260},{"krate":0,"index":7261},{"krate":0,"index":7263}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9143755,"byte_end":9143761,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7267},{"krate":0,"index":7268},{"krate":0,"index":7270},{"krate":0,"index":7273},{"krate":0,"index":7276},{"krate":0,"index":7279}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9147713,"byte_end":9147718,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7284}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9148024,"byte_end":9148030,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7288}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/shard.rs","byte_start":9150173,"byte_end":9150178,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":7302},{"krate":0,"index":7305},{"krate":0,"index":7306},{"krate":0,"index":7307},{"krate":0,"index":7308},{"krate":0,"index":7309}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/shard.rs","byte_start":9151857,"byte_end":9151862,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7312}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/slot.rs","byte_start":9152239,"byte_end":9152243,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7326},{"krate":0,"index":7327},{"krate":0,"index":7328},{"krate":0,"index":7329},{"krate":0,"index":7331}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/stack.rs","byte_start":9153214,"byte_end":9153227,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/stack.rs","byte_start":9154055,"byte_end":9154068,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7348}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133602,"byte_end":9133606,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133643,"byte_end":9133647,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133670,"byte_end":9133674,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367},{"krate":0,"index":7368}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9135189,"byte_end":9135193,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7371}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163381,"byte_end":163391,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163450,"byte_end":163460,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164749,"byte_end":164757,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164794,"byte_end":164802,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164856,"byte_end":164866,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":167870,"byte_end":167880,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":168125,"byte_end":168135,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7420}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":169218,"byte_end":169226,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":169425,"byte_end":169433,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/rand.rs","byte_start":179505,"byte_end":179513,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/wake.rs","byte_start":181375,"byte_end":181383,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12185,"byte_end":12191,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/mod.rs","byte_start":14302,"byte_end":14309,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":73}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12246,"byte_end":12252,"line_start":308,"line_end":308,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":77}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12263,"byte_end":12265,"line_start":310,"line_end":310,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":171}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12275,"byte_end":12278,"line_start":311,"line_end":311,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":302}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67507,"byte_end":67510,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2375}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67614,"byte_end":67617,"line_start":40,"line_end":40,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2606}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/mod.rs","byte_start":67681,"byte_end":67685,"line_start":45,"line_end":45,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":2751}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12310,"byte_end":12317,"line_start":316,"line_end":316,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":546}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12367,"byte_end":12374,"line_start":322,"line_end":322,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":552}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12425,"byte_end":12431,"line_start":327,"line_end":327,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3798}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/mod.rs","byte_start":8580382,"byte_end":8580386,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3859}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12462,"byte_end":12468,"line_start":331,"line_end":331,"column_start":13,"column_end":19},"ref_id":{"krate":0,"index":3980}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12497,"byte_end":12501,"line_start":335,"line_end":335,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4668}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737658,"byte_end":8737667,"line_start":426,"line_end":426,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":4682}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737682,"byte_end":8737686,"line_start":428,"line_end":428,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":4823}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/mod.rs","byte_start":8777286,"byte_end":8777291,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5221}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8737802,"byte_end":8737809,"line_start":436,"line_end":436,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":5361}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mod.rs","byte_start":8738101,"byte_end":8738106,"line_start":449,"line_end":449,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":5836}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12565,"byte_end":12569,"line_start":342,"line_end":342,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6300}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/lib.rs","byte_start":12623,"byte_end":12627,"line_start":347,"line_end":347,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":6491}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/mod.rs","byte_start":9026969,"byte_end":9026980,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":6494}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":25894,"byte_end":25903,"line_start":33,"line_end":33,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":25919,"byte_end":25928,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/macros/scoped_tls.rs","byte_start":26278,"byte_end":26283,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28039,"byte_end":28048,"line_start":21,"line_end":21,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":853},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":28211,"byte_end":28220,"line_start":28,"line_end":28,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/maybe_done.rs","byte_start":29407,"byte_end":29416,"line_start":62,"line_end":62,"column_start":30,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":853},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30170,"byte_end":30176,"line_start":13,"line_end":13,"column_start":19,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30390,"byte_end":30396,"line_start":23,"line_end":23,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/poll_fn.rs","byte_start":30538,"byte_end":30544,"line_start":29,"line_end":29,"column_start":23,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31081,"byte_end":31086,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/ready.rs","byte_start":31113,"byte_end":31118,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/future/try_join.rs","byte_start":32315,"byte_end":32323,"line_start":41,"line_end":41,"column_start":44,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":873},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":42107,"byte_end":42116,"line_start":19,"line_end":19,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":209},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44585,"byte_end":44588,"line_start":75,"line_end":75,"column_start":57,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":44748,"byte_end":44751,"line_start":83,"line_end":83,"column_start":26,"column_end":29},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_buf_read.rs","byte_start":45380,"byte_end":45386,"line_start":107,"line_end":107,"column_start":51,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":51312,"byte_end":51315,"line_start":151,"line_end":151,"column_start":51,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":51458,"byte_end":51461,"line_start":159,"line_end":159,"column_start":23,"column_end":26},"kind":{"Impl":{"id":16}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_read.rs","byte_start":52257,"byte_end":52263,"line_start":191,"line_end":191,"column_start":48,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54723,"byte_end":54726,"line_start":67,"line_end":67,"column_start":51,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":54869,"byte_end":54872,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_seek.rs","byte_start":55326,"byte_end":55332,"line_start":93,"line_end":93,"column_start":48,"column_end":54},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63209,"byte_end":63212,"line_start":172,"line_end":172,"column_start":53,"column_end":56},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63360,"byte_end":63363,"line_start":180,"line_end":180,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":63932,"byte_end":63935,"line_start":202,"line_end":202,"column_start":21,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":64443,"byte_end":64449,"line_start":221,"line_end":221,"column_start":25,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":64962,"byte_end":64968,"line_start":239,"line_end":239,"column_start":25,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":65484,"byte_end":65490,"line_start":257,"line_end":257,"column_start":25,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/async_write.rs","byte_start":66001,"byte_end":66007,"line_start":275,"line_end":275,"column_start":25,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":6550},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8095302,"byte_end":8095313,"line_start":17,"line_end":17,"column_start":16,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1127},"to":{"krate":0,"index":7227}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8096072,"byte_end":8096083,"line_start":48,"line_end":48,"column_start":18,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1127},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8096290,"byte_end":8096301,"line_start":58,"line_end":58,"column_start":6,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/scheduled_io.rs","byte_start":8098923,"byte_end":8098934,"line_start":132,"line_end":132,"column_start":15,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1127},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8084873,"byte_end":8084879,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8087740,"byte_end":8087746,"line_start":167,"line_end":167,"column_start":15,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1000},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8088114,"byte_end":8088120,"line_start":186,"line_end":186,"column_start":21,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8088256,"byte_end":8088262,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089405,"byte_end":8089411,"line_start":225,"line_end":225,"column_start":17,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1133},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089489,"byte_end":8089495,"line_start":231,"line_end":231,"column_start":21,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1133},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8089630,"byte_end":8089635,"line_start":239,"line_end":239,"column_start":6,"column_end":11},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/driver/mod.rs","byte_start":8091110,"byte_end":8091119,"line_start":289,"line_end":289,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8105585,"byte_end":8105596,"line_start":164,"line_end":164,"column_start":9,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8111785,"byte_end":8111796,"line_start":342,"line_end":342,"column_start":23,"column_end":34},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8112289,"byte_end":8112300,"line_start":364,"line_end":364,"column_start":24,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1153},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8113381,"byte_end":8113392,"line_start":410,"line_end":410,"column_start":46,"column_end":57},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/poll_evented.rs","byte_start":8113565,"byte_end":8113576,"line_start":416,"line_end":416,"column_start":27,"column_end":38},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8115711,"byte_end":8115723,"line_start":49,"line_end":49,"column_start":6,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125218,"byte_end":8125230,"line_start":288,"line_end":288,"column_start":22,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125255,"byte_end":8125267,"line_start":289,"line_end":289,"column_start":22,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/registration.rs","byte_start":8125286,"byte_end":8125298,"line_start":291,"line_end":291,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1157},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8136123,"byte_end":8136131,"line_start":63,"line_end":63,"column_start":9,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137048,"byte_end":8137057,"line_start":93,"line_end":93,"column_start":9,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137307,"byte_end":8137315,"line_start":101,"line_end":101,"column_start":34,"column_end":42},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1276},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8137870,"byte_end":8137879,"line_start":121,"line_end":121,"column_start":36,"column_end":45},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1279},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8138828,"byte_end":8138833,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139226,"byte_end":8139231,"line_start":166,"line_end":166,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139484,"byte_end":8139489,"line_start":174,"line_end":174,"column_start":18,"column_end":23},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1185},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139612,"byte_end":8139620,"line_start":180,"line_end":180,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139657,"byte_end":8139666,"line_start":181,"line_end":181,"column_start":31,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139703,"byte_end":8139711,"line_start":182,"line_end":182,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139748,"byte_end":8139757,"line_start":183,"line_end":183,"column_start":31,"column_end":40},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139800,"byte_end":8139808,"line_start":185,"line_end":185,"column_start":36,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/split.rs","byte_start":8139976,"byte_end":8139985,"line_start":191,"line_end":191,"column_start":36,"column_end":45},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1279},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/seek.rs","byte_start":8140675,"byte_end":8140679,"line_start":25,"line_end":25,"column_start":20,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1284},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8143596,"byte_end":8143608,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":180},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_buf_read_ext.rs","byte_start":8152629,"byte_end":8152630,"line_start":258,"line_end":258,"column_start":52,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1308},"to":{"krate":0,"index":1952}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8154553,"byte_end":8154562,"line_start":60,"line_end":60,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":209},"to":{"krate":0,"index":1960}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_read_ext.rs","byte_start":8181180,"byte_end":8181181,"line_start":807,"line_end":807,"column_start":46,"column_end":47},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1347},"to":{"krate":0,"index":1960}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8181853,"byte_end":8181862,"line_start":28,"line_end":28,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_seek_ext.rs","byte_start":8182732,"byte_end":8182733,"line_start":60,"line_end":60,"column_start":46,"column_end":47},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1358},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8184670,"byte_end":8184680,"line_start":62,"line_end":62,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":265},"to":{"krate":0,"index":1996}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/async_write_ext.rs","byte_start":8206759,"byte_end":8206760,"line_start":689,"line_end":689,"column_start":48,"column_end":49},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1391},"to":{"krate":0,"index":1996}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8208160,"byte_end":8208169,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":9357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8210348,"byte_end":8210357,"line_start":108,"line_end":108,"column_start":34,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":9357},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8211333,"byte_end":8211342,"line_start":134,"line_end":134,"column_start":37,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":9357},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8212173,"byte_end":8212182,"line_start":156,"line_end":156,"column_start":48,"column_end":57},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":9357},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_reader.rs","byte_start":8212693,"byte_end":8212702,"line_start":174,"line_end":174,"column_start":36,"column_end":45},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":9357},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8214209,"byte_end":8214218,"line_start":26,"line_end":26,"column_start":34,"column_end":43},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":9351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216055,"byte_end":8216064,"line_start":82,"line_end":82,"column_start":45,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":9351},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216206,"byte_end":8216215,"line_start":88,"line_end":88,"column_start":45,"column_end":54},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":9351},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8216927,"byte_end":8216936,"line_start":118,"line_end":118,"column_start":49,"column_end":58},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":9351},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8217466,"byte_end":8217475,"line_start":136,"line_end":136,"column_start":48,"column_end":57},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":9351},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_stream.rs","byte_start":8217954,"byte_end":8217963,"line_start":151,"line_end":151,"column_start":51,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9351},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8219917,"byte_end":8219926,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8222204,"byte_end":8222213,"line_start":117,"line_end":117,"column_start":36,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9280},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223103,"byte_end":8223112,"line_start":146,"line_end":146,"column_start":47,"column_end":56},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9280},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223594,"byte_end":8223603,"line_start":161,"line_end":161,"column_start":53,"column_end":62},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9280},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/buf_writer.rs","byte_start":8223890,"byte_end":8223899,"line_start":171,"line_end":171,"column_start":36,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9280},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8225068,"byte_end":8225073,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226213,"byte_end":8226218,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9231},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8226497,"byte_end":8226502,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9231},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/chain.rs","byte_start":8227019,"byte_end":8227024,"line_start":104,"line_end":104,"column_start":29,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9231},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/copy.rs","byte_start":8230054,"byte_end":8230058,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2031},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233173,"byte_end":8233178,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233387,"byte_end":8233392,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2047},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/empty.rs","byte_start":8233625,"byte_end":8233630,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2047},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/flush.rs","byte_start":8234395,"byte_end":8234400,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2050},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8235580,"byte_end":8235585,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8236295,"byte_end":8236300,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/lines.rs","byte_start":8237008,"byte_end":8237013,"line_start":94,"line_end":94,"column_start":49,"column_end":54},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9222},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read.rs","byte_start":8238411,"byte_end":8238415,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_buf.rs","byte_start":8239457,"byte_end":8239464,"line_start":27,"line_end":27,"column_start":23,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2067},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_exact.rs","byte_start":8240856,"byte_end":8240865,"line_start":42,"line_end":42,"column_start":20,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2078},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_line.rs","byte_start":8246926,"byte_end":8246934,"line_start":59,"line_end":59,"column_start":51,"column_end":59},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2168},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8248157,"byte_end":8248162,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1735},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_end.rs","byte_start":8249838,"byte_end":8249847,"line_start":92,"line_end":92,"column_start":20,"column_end":29},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2179},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_to_string.rs","byte_start":8251951,"byte_end":8251963,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2189},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/read_until.rs","byte_start":8254086,"byte_end":8254095,"line_start":63,"line_end":63,"column_start":51,"column_end":60},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2200},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/repeat.rs","byte_start":8255924,"byte_end":8255930,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2212},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/shutdown.rs","byte_start":8256867,"byte_end":8256875,"line_start":26,"line_end":26,"column_start":20,"column_end":28},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2216},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8258708,"byte_end":8258712,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2224},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/sink.rs","byte_start":8259222,"byte_end":8259226,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2224},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260191,"byte_end":8260196,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":8748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8260935,"byte_end":8260940,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":8748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/split.rs","byte_start":8261598,"byte_end":8261603,"line_start":92,"line_end":92,"column_start":49,"column_end":54},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":8748},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8275772,"byte_end":8275784,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":8700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8276289,"byte_end":8276301,"line_start":98,"line_end":98,"column_start":26,"column_end":38},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":8700},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/stream_reader.rs","byte_start":8277840,"byte_end":8277852,"line_start":151,"line_end":151,"column_start":29,"column_end":41},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":8700},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8262771,"byte_end":8262775,"line_start":29,"line_end":29,"column_start":20,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":8653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8264403,"byte_end":8264407,"line_start":78,"line_end":78,"column_start":34,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":8653},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/take.rs","byte_start":8265064,"byte_end":8265068,"line_start":100,"line_end":100,"column_start":40,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":8653},"to":{"krate":0,"index":180}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write.rs","byte_start":8266625,"byte_end":8266630,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2265},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_all.rs","byte_start":8267423,"byte_end":8267431,"line_start":25,"line_end":25,"column_start":20,"column_end":28},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2274},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/io/util/write_buf.rs","byte_start":8268931,"byte_end":8268939,"line_start":29,"line_end":29,"column_start":23,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2283},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":68641,"byte_end":68658,"line_start":22,"line_end":22,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":357},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69108,"byte_end":69118,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":1,"index":6695},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69158,"byte_end":69168,"line_start":46,"line_end":46,"column_start":36,"column_end":46},"kind":{"Impl":{"id":120}},"from":{"krate":1,"index":6695},"to":{"krate":0,"index":357}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69449,"byte_end":69461,"line_start":58,"line_end":58,"column_start":24,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":1,"index":6717},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69501,"byte_end":69513,"line_start":60,"line_end":60,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":1,"index":6717},"to":{"krate":0,"index":357}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69773,"byte_end":69785,"line_start":71,"line_end":71,"column_start":24,"column_end":36},"kind":{"Impl":{"id":123}},"from":{"krate":1,"index":6720},"to":{"krate":0,"index":313}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/addr.rs","byte_start":69825,"byte_end":69837,"line_start":73,"line_end":73,"column_start":36,"column_end":48},"kind":{"Impl":{"id":124}},"from":{"krate":1,"index":6720},"to":{"krate":0,"index":357}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8282688,"byte_end":8282699,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292627,"byte_end":8292638,"line_start":373,"line_end":373,"column_start":32,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2582},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8292953,"byte_end":8292964,"line_start":385,"line_end":385,"column_start":41,"column_end":52},"kind":{"Impl":{"id":127}},"from":{"krate":18,"index":1044},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293404,"byte_end":8293415,"line_start":399,"line_end":399,"column_start":36,"column_end":47},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2582},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293741,"byte_end":8293752,"line_start":411,"line_end":411,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2582},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/listener.rs","byte_start":8293968,"byte_end":8293979,"line_start":422,"line_end":422,"column_start":22,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2582},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8294811,"byte_end":8294819,"line_start":15,"line_end":15,"column_start":6,"column_end":14},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/incoming.rs","byte_start":8295457,"byte_end":8295465,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2584},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8296812,"byte_end":8296820,"line_start":37,"line_end":37,"column_start":6,"column_end":14},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8299082,"byte_end":8299090,"line_start":110,"line_end":110,"column_start":20,"column_end":28},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2590},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8299410,"byte_end":8299419,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2597},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8300232,"byte_end":8300240,"line_start":153,"line_end":153,"column_start":27,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2590},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/split.rs","byte_start":8300334,"byte_end":8300343,"line_start":159,"line_end":159,"column_start":27,"column_end":36},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2597},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8301818,"byte_end":8301827,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8324752,"byte_end":8324761,"line_start":771,"line_end":771,"column_start":39,"column_end":48},"kind":{"Impl":{"id":139}},"from":{"krate":18,"index":988},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325197,"byte_end":8325206,"line_start":785,"line_end":785,"column_start":34,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325559,"byte_end":8325568,"line_start":799,"line_end":799,"column_start":20,"column_end":29},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8325882,"byte_end":8325891,"line_start":813,"line_end":813,"column_start":21,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2604},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8326635,"byte_end":8326644,"line_start":842,"line_end":842,"column_start":21,"column_end":30},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2604},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/tcp/stream.rs","byte_start":8326858,"byte_end":8326867,"line_start":853,"line_end":853,"column_start":22,"column_end":31},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2604},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8327873,"byte_end":8327882,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2733},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341496,"byte_end":8341505,"line_start":372,"line_end":372,"column_start":39,"column_end":48},"kind":{"Impl":{"id":146}},"from":{"krate":18,"index":1102},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8341941,"byte_end":8341950,"line_start":386,"line_end":386,"column_start":34,"column_end":43},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2733},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8342270,"byte_end":8342279,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2733},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/socket.rs","byte_start":8342498,"byte_end":8342507,"line_start":409,"line_end":409,"column_start":22,"column_end":31},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2733},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344573,"byte_end":8344585,"line_start":50,"line_end":50,"column_start":23,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2745},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8344788,"byte_end":8344800,"line_start":59,"line_end":59,"column_start":16,"column_end":28},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2745},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8345327,"byte_end":8345335,"line_start":74,"line_end":74,"column_start":6,"column_end":14},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8346967,"byte_end":8346975,"line_start":109,"line_end":109,"column_start":6,"column_end":14},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348295,"byte_end":8348303,"line_start":138,"line_end":138,"column_start":27,"column_end":35},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2735},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/udp/split.rs","byte_start":8348394,"byte_end":8348402,"line_start":144,"line_end":144,"column_start":27,"column_end":35},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2740},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8349218,"byte_end":8349230,"line_start":20,"line_end":20,"column_start":6,"column_end":18},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8355853,"byte_end":8355865,"line_start":206,"line_end":206,"column_start":41,"column_end":53},"kind":{"Impl":{"id":157}},"from":{"krate":25,"index":181},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356307,"byte_end":8356319,"line_start":220,"line_end":220,"column_start":37,"column_end":49},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356648,"byte_end":8356660,"line_start":232,"line_end":232,"column_start":21,"column_end":33},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2988},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/datagram.rs","byte_start":8356785,"byte_end":8356797,"line_start":238,"line_end":238,"column_start":18,"column_end":30},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2988},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357155,"byte_end":8357163,"line_start":14,"line_end":14,"column_start":6,"column_end":14},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/incoming.rs","byte_start":8357895,"byte_end":8357903,"line_start":35,"line_end":35,"column_start":32,"column_end":40},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2990},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8360043,"byte_end":8360055,"line_start":55,"line_end":55,"column_start":6,"column_end":18},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364559,"byte_end":8364571,"line_start":181,"line_end":181,"column_start":32,"column_end":44},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2996},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8364887,"byte_end":8364899,"line_start":193,"line_end":193,"column_start":41,"column_end":53},"kind":{"Impl":{"id":165}},"from":{"krate":25,"index":185},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365341,"byte_end":8365353,"line_start":207,"line_end":207,"column_start":37,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2996},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365673,"byte_end":8365685,"line_start":219,"line_end":219,"column_start":21,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2996},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/listener.rs","byte_start":8365810,"byte_end":8365822,"line_start":225,"line_end":225,"column_start":18,"column_end":30},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2996},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8366814,"byte_end":8366822,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2998},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367142,"byte_end":8367151,"line_start":46,"line_end":46,"column_start":21,"column_end":30},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3005},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367635,"byte_end":8367643,"line_start":64,"line_end":64,"column_start":28,"column_end":36},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/split.rs","byte_start":8367739,"byte_end":8367748,"line_start":70,"line_end":70,"column_start":28,"column_end":37},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3005},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8368686,"byte_end":8368696,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372132,"byte_end":8372142,"line_start":122,"line_end":122,"column_start":39,"column_end":49},"kind":{"Impl":{"id":174}},"from":{"krate":25,"index":189},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372580,"byte_end":8372590,"line_start":136,"line_end":136,"column_start":35,"column_end":45},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8372903,"byte_end":8372913,"line_start":148,"line_end":148,"column_start":20,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3012},"to":{"krate":0,"index":209}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8373227,"byte_end":8373237,"line_start":162,"line_end":162,"column_start":21,"column_end":31},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3012},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8373724,"byte_end":8373734,"line_start":181,"line_end":181,"column_start":6,"column_end":16},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8375251,"byte_end":8375261,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/net/unix/stream.rs","byte_start":8375386,"byte_end":8375396,"line_start":232,"line_end":232,"column_start":18,"column_end":28},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3012},"to":{"krate":1,"index":8193}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":78673,"byte_end":78682,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":78977,"byte_end":78986,"line_start":20,"line_end":20,"column_start":19,"column_end":28},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_ptr.rs","byte_start":79135,"byte_end":79144,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":367},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79488,"byte_end":79497,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79522,"byte_end":79531,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":79541,"byte_end":79550,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":80036,"byte_end":80045,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u16.rs","byte_start":80330,"byte_end":80339,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80680,"byte_end":80689,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80714,"byte_end":80723,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80733,"byte_end":80742,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":80921,"byte_end":80930,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u32.rs","byte_start":81215,"byte_end":81224,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":403},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83339,"byte_end":83347,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83372,"byte_end":83380,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83390,"byte_end":83398,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83573,"byte_end":83581,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_u8.rs","byte_start":83865,"byte_end":83873,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84213,"byte_end":84224,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84249,"byte_end":84260,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84270,"byte_end":84281,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":84964,"byte_end":84975,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":85265,"byte_end":85276,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/atomic_usize.rs","byte_start":85440,"byte_end":85451,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/loom/std/unsafe_cell.rs","byte_start":85639,"byte_end":85649,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8379730,"byte_end":8379736,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3045},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8380542,"byte_end":8380548,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3045},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/either.rs","byte_start":8380762,"byte_end":8380768,"line_start":54,"line_end":54,"column_start":27,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3045},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":90758,"byte_end":90768,"line_start":38,"line_end":38,"column_start":6,"column_end":16},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":91033,"byte_end":91043,"line_start":50,"line_end":50,"column_start":15,"column_end":25},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3071},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":91502,"byte_end":91507,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":96232,"byte_end":96242,"line_start":193,"line_end":193,"column_start":18,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3071},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/thread.rs","byte_start":96351,"byte_end":96363,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3075},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89380,"byte_end":89384,"line_start":94,"line_end":94,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89387,"byte_end":89391,"line_start":94,"line_end":94,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89860,"byte_end":89863,"line_start":108,"line_end":108,"column_start":17,"column_end":20},"kind":{"Impl":{"id":214}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/park/mod.rs","byte_start":89952,"byte_end":89955,"line_start":114,"line_end":114,"column_start":17,"column_end":20},"kind":{"Impl":{"id":215}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/context.rs","byte_start":117985,"byte_end":117994,"line_start":59,"line_end":59,"column_start":19,"column_end":28},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8438839,"byte_end":8438853,"line_start":83,"line_end":83,"column_start":9,"column_end":23},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3129},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8442387,"byte_end":8442392,"line_start":192,"line_end":192,"column_start":28,"column_end":33},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3164},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8443079,"byte_end":8443093,"line_start":216,"line_end":216,"column_start":18,"column_end":32},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3129},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8443980,"byte_end":8443994,"line_start":248,"line_end":248,"column_start":30,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3129},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444160,"byte_end":8444167,"line_start":256,"line_end":256,"column_start":6,"column_end":13},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444625,"byte_end":8444632,"line_start":273,"line_end":273,"column_start":21,"column_end":28},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3637},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8444800,"byte_end":8444803,"line_start":281,"line_end":281,"column_start":19,"column_end":22},"kind":{"Impl":{"id":223}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":3601}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/basic_scheduler.rs","byte_start":8445901,"byte_end":8445907,"line_start":317,"line_end":317,"column_start":15,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3138},"to":{"krate":0,"index":829}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453275,"byte_end":8453281,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453306,"byte_end":8453312,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3229},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8453671,"byte_end":8453675,"line_start":74,"line_end":74,"column_start":30,"column_end":34},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/core.rs","byte_start":8454453,"byte_end":8454457,"line_start":97,"line_end":97,"column_start":30,"column_end":34},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8460800,"byte_end":8460809,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8463888,"byte_end":8463897,"line_start":133,"line_end":133,"column_start":23,"column_end":32},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3646},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464140,"byte_end":8464149,"line_start":142,"line_end":142,"column_start":21,"column_end":30},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3646},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464426,"byte_end":8464435,"line_start":151,"line_end":151,"column_start":28,"column_end":37},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3646},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/error.rs","byte_start":8464469,"byte_end":8464474,"line_start":153,"line_end":153,"column_start":30,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":1,"index":2472},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8465152,"byte_end":8465159,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8465636,"byte_end":8465643,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/harness.rs","byte_start":8467621,"byte_end":8467626,"line_start":90,"line_end":90,"column_start":51,"column_end":56},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3342},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480059,"byte_end":8480069,"line_start":84,"line_end":84,"column_start":31,"column_end":41},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480106,"byte_end":8480116,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480132,"byte_end":8480142,"line_start":87,"line_end":87,"column_start":9,"column_end":19},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480318,"byte_end":8480328,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8480355,"byte_end":8480365,"line_start":98,"line_end":98,"column_start":20,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8481507,"byte_end":8481517,"line_start":133,"line_end":133,"column_start":18,"column_end":28},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/join.rs","byte_start":8481783,"byte_end":8481793,"line_start":145,"line_end":145,"column_start":24,"column_end":34},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3648},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8483040,"byte_end":8483047,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8484578,"byte_end":8484585,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3416},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/raw.rs","byte_start":8484675,"byte_end":8484682,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3416},"to":{"krate":2,"index":1862}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8487364,"byte_end":8487369,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8496225,"byte_end":8496233,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8498110,"byte_end":8498115,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3465},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/state.rs","byte_start":8498274,"byte_end":8498282,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3652},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/waker.rs","byte_start":8500100,"byte_end":8500108,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3549},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8446920,"byte_end":8446924,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3583},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8446955,"byte_end":8446959,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3583},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447096,"byte_end":8447104,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3591},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447145,"byte_end":8447153,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3591},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447278,"byte_end":8447282,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":3601}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8447285,"byte_end":8447290,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":3601}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8449077,"byte_end":8449081,"line_start":120,"line_end":120,"column_start":18,"column_end":22},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8449973,"byte_end":8449977,"line_start":159,"line_end":159,"column_start":19,"column_end":23},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450146,"byte_end":8450154,"line_start":166,"line_end":166,"column_start":19,"column_end":27},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450440,"byte_end":8450444,"line_start":179,"line_end":179,"column_start":27,"column_end":31},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3583},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450684,"byte_end":8450688,"line_start":189,"line_end":189,"column_start":24,"column_end":28},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3583},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8450840,"byte_end":8450848,"line_start":195,"line_end":195,"column_start":24,"column_end":32},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3591},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/task/mod.rs","byte_start":8451064,"byte_end":8451068,"line_start":204,"line_end":204,"column_start":38,"column_end":42},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3583},"to":{"krate":0,"index":782}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/blocking/mod.rs","byte_start":119213,"byte_end":119225,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":121390,"byte_end":121397,"line_start":80,"line_end":80,"column_start":6,"column_end":13},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":129317,"byte_end":129324,"line_start":351,"line_end":351,"column_start":10,"column_end":17},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":129873,"byte_end":129880,"line_start":375,"line_end":375,"column_start":10,"column_end":17},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":130400,"byte_end":130407,"line_start":398,"line_end":398,"column_start":10,"column_end":17},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":134172,"byte_end":134179,"line_start":501,"line_end":501,"column_start":18,"column_end":25},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":582},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/builder.rs","byte_start":134258,"byte_end":134265,"line_start":507,"line_end":507,"column_start":21,"column_end":28},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":582},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/enter.rs","byte_start":139220,"byte_end":139225,"line_start":149,"line_end":149,"column_start":21,"column_end":26},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/enter.rs","byte_start":139355,"byte_end":139360,"line_start":155,"line_end":155,"column_start":15,"column_end":20},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":140283,"byte_end":140289,"line_start":33,"line_end":33,"column_start":6,"column_end":12},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":141673,"byte_end":141679,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143076,"byte_end":143091,"line_start":128,"line_end":128,"column_start":21,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143239,"byte_end":143254,"line_start":134,"line_end":134,"column_start":23,"column_end":38},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/handle.rs","byte_start":143412,"byte_end":143427,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":648},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/shell.rs","byte_start":145716,"byte_end":145721,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/shell.rs","byte_start":146323,"byte_end":146329,"line_start":52,"line_end":52,"column_start":15,"column_end":21},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3717},"to":{"krate":0,"index":829}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/spawner.rs","byte_start":146945,"byte_end":146952,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/runtime/mod.rs","byte_start":110062,"byte_end":110069,"line_start":306,"line_end":306,"column_start":6,"column_end":13},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":152718,"byte_end":152723,"line_start":89,"line_end":89,"column_start":27,"column_end":32},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":736},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":156824,"byte_end":156837,"line_start":209,"line_end":209,"column_start":27,"column_end":40},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":747},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":159193,"byte_end":159203,"line_start":292,"line_end":292,"column_start":28,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3788},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":159416,"byte_end":159426,"line_start":300,"line_end":300,"column_start":17,"column_end":27},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":160004,"byte_end":160010,"line_start":316,"line_end":316,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":7916},"to":{"krate":0,"index":3794}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/coop.rs","byte_start":160315,"byte_end":160316,"line_start":327,"line_end":327,"column_start":31,"column_end":32},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3797},"to":{"krate":0,"index":3794}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8583223,"byte_end":8583226,"line_start":34,"line_end":34,"column_start":18,"column_end":21},"kind":{"Impl":{"id":286}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":3820}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8583948,"byte_end":8583956,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8584046,"byte_end":8584054,"line_start":68,"line_end":68,"column_start":18,"column_end":26},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8586207,"byte_end":8586214,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3843},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/registry.rs","byte_start":8586322,"byte_end":8586329,"line_start":138,"line_end":138,"column_start":6,"column_end":13},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592401,"byte_end":8592410,"line_start":26,"line_end":26,"column_start":15,"column_end":24},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":3830}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592524,"byte_end":8592533,"line_start":32,"line_end":32,"column_start":18,"column_end":27},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":3888},"to":{"krate":0,"index":3820}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8592921,"byte_end":8592932,"line_start":51,"line_end":51,"column_start":15,"column_end":26},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3955},"to":{"krate":0,"index":3830}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8593218,"byte_end":8593228,"line_start":63,"line_end":63,"column_start":6,"column_end":16},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8597024,"byte_end":8597034,"line_start":190,"line_end":190,"column_start":18,"column_end":28},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3916},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8599383,"byte_end":8599389,"line_start":262,"line_end":262,"column_start":6,"column_end":12},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8599674,"byte_end":8599680,"line_start":273,"line_end":273,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8605894,"byte_end":8605900,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/signal/unix.rs","byte_start":8607758,"byte_end":8607764,"line_start":487,"line_end":487,"column_start":36,"column_end":42},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3972},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642305,"byte_end":8642314,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642460,"byte_end":8642469,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/all.rs","byte_start":8642508,"byte_end":8642517,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4567},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643468,"byte_end":8643477,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643623,"byte_end":8643632,"line_start":21,"line_end":21,"column_start":39,"column_end":48},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/any.rs","byte_start":8643671,"byte_end":8643680,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4578},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/chain.rs","byte_start":8644603,"byte_end":8644608,"line_start":17,"line_end":17,"column_start":12,"column_end":17},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":8130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/chain.rs","byte_start":8644788,"byte_end":8644793,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":8130},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646561,"byte_end":8646575,"line_start":36,"line_end":36,"column_start":34,"column_end":48},"kind":"SuperTrait","from":{"krate":0,"index":4129},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646594,"byte_end":8646601,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":8121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8646885,"byte_end":8646892,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":8121},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8647868,"byte_end":8647874,"line_start":94,"line_end":94,"column_start":39,"column_end":45},"kind":{"Impl":{"id":310}},"from":{"krate":5,"index":4553},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8647929,"byte_end":8647935,"line_start":96,"line_end":96,"column_start":51,"column_end":57},"kind":{"Impl":{"id":311}},"from":{"krate":5,"index":4553},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648324,"byte_end":8648327,"line_start":113,"line_end":113,"column_start":27,"column_end":30},"kind":{"Impl":{"id":312}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648373,"byte_end":8648376,"line_start":115,"line_end":115,"column_start":39,"column_end":42},"kind":{"Impl":{"id":313}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648759,"byte_end":8648762,"line_start":132,"line_end":132,"column_start":27,"column_end":30},"kind":{"Impl":{"id":314}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8648810,"byte_end":8648813,"line_start":134,"line_end":134,"column_start":39,"column_end":42},"kind":{"Impl":{"id":315}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8649328,"byte_end":8649334,"line_start":150,"line_end":150,"column_start":44,"column_end":50},"kind":{"Impl":{"id":316}},"from":{"krate":2,"index":29220},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8649423,"byte_end":8649429,"line_start":152,"line_end":152,"column_start":56,"column_end":62},"kind":{"Impl":{"id":317}},"from":{"krate":2,"index":29220},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650507,"byte_end":8650512,"line_start":191,"line_end":191,"column_start":32,"column_end":37},"kind":{"Impl":{"id":318}},"from":{"krate":16,"index":577},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650560,"byte_end":8650565,"line_start":193,"line_end":193,"column_start":44,"column_end":49},"kind":{"Impl":{"id":319}},"from":{"krate":16,"index":577},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8650965,"byte_end":8650973,"line_start":210,"line_end":210,"column_start":32,"column_end":40},"kind":{"Impl":{"id":320}},"from":{"krate":16,"index":356},"to":{"krate":0,"index":4058}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/collect.rs","byte_start":8651021,"byte_end":8651029,"line_start":212,"line_end":212,"column_start":44,"column_end":52},"kind":{"Impl":{"id":321}},"from":{"krate":16,"index":356},"to":{"krate":0,"index":4129}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652290,"byte_end":8652295,"line_start":12,"line_end":12,"column_start":19,"column_end":24},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4589},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652326,"byte_end":8652331,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4589},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652362,"byte_end":8652367,"line_start":14,"line_end":14,"column_start":25,"column_end":30},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4589},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/empty.rs","byte_start":8652910,"byte_end":8652915,"line_start":40,"line_end":40,"column_start":20,"column_end":25},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4589},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653529,"byte_end":8653535,"line_start":18,"line_end":18,"column_start":28,"column_end":34},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":8036},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653753,"byte_end":8653759,"line_start":29,"line_end":29,"column_start":13,"column_end":19},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":8036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter.rs","byte_start":8653878,"byte_end":8653884,"line_start":35,"line_end":35,"column_start":24,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":8036},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8654970,"byte_end":8654979,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":7991},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8655200,"byte_end":8655209,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":7991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/filter_map.rs","byte_start":8655331,"byte_end":8655340,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":7991},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fold.rs","byte_start":8656412,"byte_end":8656422,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":7979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fold.rs","byte_start":8656618,"byte_end":8656628,"line_start":29,"line_end":29,"column_start":27,"column_end":37},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":7979},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fuse.rs","byte_start":8657527,"byte_end":8657531,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":7923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/fuse.rs","byte_start":8657691,"byte_end":8657695,"line_start":27,"line_end":27,"column_start":20,"column_end":24},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":7923},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8658629,"byte_end":8658633,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4596},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/iter.rs","byte_start":8659295,"byte_end":8659299,"line_start":41,"line_end":41,"column_start":20,"column_end":24},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4596},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660004,"byte_end":8660007,"line_start":18,"line_end":18,"column_start":28,"column_end":31},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":7848},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660196,"byte_end":8660199,"line_start":27,"line_end":27,"column_start":13,"column_end":16},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":7848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/map.rs","byte_start":8660320,"byte_end":8660323,"line_start":33,"line_end":33,"column_start":27,"column_end":30},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":7848},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/merge.rs","byte_start":8661168,"byte_end":8661173,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":7799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/merge.rs","byte_start":8661427,"byte_end":8661432,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":7799},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663167,"byte_end":8663171,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4602},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663205,"byte_end":8663209,"line_start":16,"line_end":16,"column_start":22,"column_end":26},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/next.rs","byte_start":8663350,"byte_end":8663354,"line_start":22,"line_end":22,"column_start":46,"column_end":50},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4602},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8663841,"byte_end":8663845,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4610},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/once.rs","byte_start":8664472,"byte_end":8664476,"line_start":42,"line_end":42,"column_start":20,"column_end":24},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4610},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665011,"byte_end":8665018,"line_start":12,"line_end":12,"column_start":19,"column_end":26},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665049,"byte_end":8665056,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665087,"byte_end":8665094,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/pending.rs","byte_start":8665787,"byte_end":8665794,"line_start":44,"line_end":44,"column_start":20,"column_end":27},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4616},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8671459,"byte_end":8671468,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8678469,"byte_end":8678478,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4623},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/stream_map.rs","byte_start":8680017,"byte_end":8680026,"line_start":470,"line_end":470,"column_start":23,"column_end":32},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4623},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681242,"byte_end":8681246,"line_start":18,"line_end":18,"column_start":25,"column_end":29},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":7762},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681456,"byte_end":8681460,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":7762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip.rs","byte_start":8681593,"byte_end":8681597,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":7762},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8682823,"byte_end":8682832,"line_start":18,"line_end":18,"column_start":28,"column_end":37},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":7717},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8683053,"byte_end":8683062,"line_start":29,"line_end":29,"column_start":13,"column_end":22},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":7717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/skip_while.rs","byte_start":8683247,"byte_end":8683256,"line_start":38,"line_end":38,"column_start":24,"column_end":33},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":7717},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684605,"byte_end":8684612,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684646,"byte_end":8684653,"line_start":16,"line_end":16,"column_start":22,"column_end":29},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/try_next.rs","byte_start":8684860,"byte_end":8684867,"line_start":24,"line_end":24,"column_start":73,"column_end":80},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4635},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685477,"byte_end":8685481,"line_start":19,"line_end":19,"column_start":25,"column_end":29},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":7680},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685691,"byte_end":8685695,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":7680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take.rs","byte_start":8685828,"byte_end":8685832,"line_start":36,"line_end":36,"column_start":21,"column_end":25},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":7680},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687351,"byte_end":8687360,"line_start":19,"line_end":19,"column_start":28,"column_end":37},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":7631},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687620,"byte_end":8687629,"line_start":31,"line_end":31,"column_start":13,"column_end":22},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":7631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/take_while.rs","byte_start":8687822,"byte_end":8687831,"line_start":41,"line_end":41,"column_start":24,"column_end":33},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":7631},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/timeout.rs","byte_start":8721252,"byte_end":8721259,"line_start":23,"line_end":23,"column_start":17,"column_end":24},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":7622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/timeout.rs","byte_start":8721614,"byte_end":8721621,"line_start":37,"line_end":37,"column_start":28,"column_end":35},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":7622},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8618169,"byte_end":8618175,"line_start":81,"line_end":81,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":17,"index":68},"to":{"krate":0,"index":4531}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/stream/mod.rs","byte_start":8641927,"byte_end":8641929,"line_start":819,"line_end":819,"column_start":32,"column_end":34},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":4566},"to":{"krate":0,"index":4531}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8739717,"byte_end":8739724,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/barrier.rs","byte_start":8743004,"byte_end":8743021,"line_start":128,"line_end":128,"column_start":6,"column_end":23},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755778,"byte_end":8755784,"line_start":413,"line_end":413,"column_start":31,"column_end":37},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755821,"byte_end":8755827,"line_start":414,"line_end":414,"column_start":31,"column_end":37},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755865,"byte_end":8755873,"line_start":416,"line_end":416,"column_start":31,"column_end":39},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755910,"byte_end":8755918,"line_start":417,"line_end":417,"column_start":31,"column_end":39},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8755934,"byte_end":8755940,"line_start":419,"line_end":419,"column_start":9,"column_end":15},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8762905,"byte_end":8762911,"line_start":644,"line_end":644,"column_start":19,"column_end":25},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8763091,"byte_end":8763097,"line_start":653,"line_end":653,"column_start":18,"column_end":24},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8763251,"byte_end":8763259,"line_start":661,"line_end":661,"column_start":9,"column_end":17},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8764959,"byte_end":8764967,"line_start":717,"line_end":717,"column_start":9,"column_end":17},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":4706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8770614,"byte_end":8770622,"line_start":883,"line_end":883,"column_start":35,"column_end":43},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":4706},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8771043,"byte_end":8771051,"line_start":901,"line_end":901,"column_start":18,"column_end":26},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8771728,"byte_end":8771734,"line_start":925,"line_end":925,"column_start":18,"column_end":24},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772069,"byte_end":8772075,"line_start":937,"line_end":937,"column_start":24,"column_end":30},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":4703},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772219,"byte_end":8772227,"line_start":943,"line_end":943,"column_start":24,"column_end":32},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":4706},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8772358,"byte_end":8772362,"line_start":949,"line_end":949,"column_start":9,"column_end":13},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":4722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8773749,"byte_end":8773758,"line_start":991,"line_end":991,"column_start":13,"column_end":22},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":4731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774154,"byte_end":8774163,"line_start":1010,"line_end":1010,"column_start":22,"column_end":31},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":4731},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774604,"byte_end":8774613,"line_start":1025,"line_end":1025,"column_start":23,"column_end":32},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5950},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774886,"byte_end":8774895,"line_start":1034,"line_end":1034,"column_start":28,"column_end":37},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5950},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8774922,"byte_end":8774934,"line_start":1036,"line_end":1036,"column_start":23,"column_end":35},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5962},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/broadcast.rs","byte_start":8775276,"byte_end":8775288,"line_start":1046,"line_end":1046,"column_start":28,"column_end":40},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5962},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8779869,"byte_end":8779874,"line_start":77,"line_end":77,"column_start":9,"column_end":14},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":4841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8789856,"byte_end":8789862,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":4855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/block.rs","byte_start":8790344,"byte_end":8790350,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":4855},"to":{"krate":2,"index":2099}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8790988,"byte_end":8790994,"line_start":20,"line_end":20,"column_start":19,"column_end":25},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791126,"byte_end":8791132,"line_start":28,"line_end":28,"column_start":24,"column_end":30},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":4909},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8791539,"byte_end":8791547,"line_start":44,"line_end":44,"column_start":24,"column_end":32},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":4918},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8793319,"byte_end":8793327,"line_start":103,"line_end":103,"column_start":9,"column_end":17},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":4918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795755,"byte_end":8795763,"line_start":182,"line_end":182,"column_start":19,"column_end":27},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":4918},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8795823,"byte_end":8795831,"line_start":185,"line_end":185,"column_start":39,"column_end":47},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":4918},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/bounded.rs","byte_start":8796019,"byte_end":8796025,"line_start":194,"line_end":194,"column_start":9,"column_end":15},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":4909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8807415,"byte_end":8807417,"line_start":20,"line_end":20,"column_start":38,"column_end":40},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8807818,"byte_end":8807820,"line_start":38,"line_end":38,"column_start":38,"column_end":40},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8808127,"byte_end":8808136,"line_start":53,"line_end":53,"column_start":44,"column_end":53},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8808398,"byte_end":8808410,"line_start":62,"line_end":62,"column_start":44,"column_end":56},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6010},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8810105,"byte_end":8810109,"line_start":120,"line_end":120,"column_start":27,"column_end":31},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8810742,"byte_end":8810750,"line_start":144,"line_end":144,"column_start":24,"column_end":32},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":5028},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811016,"byte_end":8811020,"line_start":153,"line_end":153,"column_start":40,"column_end":44},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811069,"byte_end":8811073,"line_start":154,"line_end":154,"column_start":40,"column_end":44},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8811552,"byte_end":8811554,"line_start":178,"line_end":178,"column_start":12,"column_end":14},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812252,"byte_end":8812254,"line_start":204,"line_end":204,"column_start":9,"column_end":11},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812402,"byte_end":8812404,"line_start":210,"line_end":210,"column_start":9,"column_end":11},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":4983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812582,"byte_end":8812584,"line_start":216,"line_end":216,"column_start":22,"column_end":24},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8812984,"byte_end":8812986,"line_start":232,"line_end":232,"column_start":21,"column_end":23},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":4983},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8813395,"byte_end":8813397,"line_start":253,"line_end":253,"column_start":12,"column_end":14},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":4992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8816368,"byte_end":8816370,"line_start":341,"line_end":341,"column_start":21,"column_end":23},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":4992},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8816806,"byte_end":8816810,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8817274,"byte_end":8817278,"line_start":384,"line_end":384,"column_start":21,"column_end":25},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8817827,"byte_end":8817839,"line_start":401,"line_end":401,"column_start":32,"column_end":44},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5990},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/chan.rs","byte_start":8819329,"byte_end":8819340,"line_start":468,"line_end":468,"column_start":20,"column_end":31},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":437},"to":{"krate":0,"index":5006}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8822057,"byte_end":8822059,"line_start":56,"line_end":56,"column_start":9,"column_end":11},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8827763,"byte_end":8827765,"line_start":213,"line_end":213,"column_start":24,"column_end":26},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5140},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8828042,"byte_end":8828044,"line_start":222,"line_end":222,"column_start":9,"column_end":11},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/list.rs","byte_start":8831443,"byte_end":8831445,"line_start":333,"line_end":333,"column_start":24,"column_end":26},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5144},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832119,"byte_end":8832134,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5180},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832275,"byte_end":8832290,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5180},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8832748,"byte_end":8832765,"line_start":41,"line_end":41,"column_start":24,"column_end":41},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5189},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8833743,"byte_end":8833760,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836232,"byte_end":8836249,"line_start":151,"line_end":151,"column_start":35,"column_end":52},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5189},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/unbounded.rs","byte_start":8836415,"byte_end":8836430,"line_start":159,"line_end":159,"column_start":9,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837282,"byte_end":8837291,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837451,"byte_end":8837460,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6003},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837946,"byte_end":8837958,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6010},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8837991,"byte_end":8838003,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":6010},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838343,"byte_end":8838355,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":6010},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838584,"byte_end":8838593,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":6021},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8838723,"byte_end":8838732,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":6021},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839218,"byte_end":8839230,"line_start":82,"line_end":82,"column_start":23,"column_end":35},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6026},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839536,"byte_end":8839548,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6026},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839706,"byte_end":8839717,"line_start":103,"line_end":103,"column_start":6,"column_end":17},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839816,"byte_end":8839827,"line_start":109,"line_end":109,"column_start":23,"column_end":34},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6036},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8839957,"byte_end":8839968,"line_start":115,"line_end":115,"column_start":16,"column_end":27},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6036},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840472,"byte_end":8840488,"line_start":132,"line_end":132,"column_start":35,"column_end":51},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6046},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mpsc/error.rs","byte_start":8840525,"byte_end":8840541,"line_start":134,"line_end":134,"column_start":30,"column_end":46},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":6046},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845147,"byte_end":8845152,"line_start":115,"line_end":115,"column_start":25,"column_end":30},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":6057},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845197,"byte_end":8845202,"line_start":116,"line_end":116,"column_start":25,"column_end":30},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":6057},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845251,"byte_end":8845261,"line_start":117,"line_end":117,"column_start":29,"column_end":39},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845543,"byte_end":8845555,"line_start":127,"line_end":127,"column_start":23,"column_end":35},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6064},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8845698,"byte_end":8845710,"line_start":133,"line_end":133,"column_start":16,"column_end":28},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6064},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8846192,"byte_end":8846197,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847274,"byte_end":8847284,"line_start":184,"line_end":184,"column_start":22,"column_end":32},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847379,"byte_end":8847384,"line_start":190,"line_end":190,"column_start":21,"column_end":26},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":6057},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847468,"byte_end":8847473,"line_start":196,"line_end":196,"column_start":21,"column_end":26},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":6057},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847591,"byte_end":8847601,"line_start":205,"line_end":205,"column_start":23,"column_end":33},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847744,"byte_end":8847754,"line_start":212,"line_end":212,"column_start":26,"column_end":36},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8847906,"byte_end":8847916,"line_start":218,"line_end":218,"column_start":40,"column_end":50},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/mutex.rs","byte_start":8848077,"byte_end":8848087,"line_start":224,"line_end":224,"column_start":44,"column_end":54},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5258},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852055,"byte_end":8852063,"line_start":135,"line_end":135,"column_start":26,"column_end":34},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6081},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852096,"byte_end":8852104,"line_start":136,"line_end":136,"column_start":26,"column_end":34},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6081},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8852367,"byte_end":8852373,"line_start":154,"line_end":154,"column_start":6,"column_end":12},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8856381,"byte_end":8856387,"line_start":282,"line_end":282,"column_start":18,"column_end":24},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":6069},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8858125,"byte_end":8858133,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":6081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8858643,"byte_end":8858651,"line_start":352,"line_end":352,"column_start":17,"column_end":25},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":6081},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8863481,"byte_end":8863489,"line_start":474,"line_end":474,"column_start":15,"column_end":23},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":6081},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/notify.rs","byte_start":8866447,"byte_end":8866453,"line_start":539,"line_end":539,"column_start":35,"column_end":41},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":6074},"to":{"krate":0,"index":782}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868339,"byte_end":8868348,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6110},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868510,"byte_end":8868519,"line_start":60,"line_end":60,"column_start":32,"column_end":41},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6110},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868588,"byte_end":8868600,"line_start":64,"line_end":64,"column_start":27,"column_end":39},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6122},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8868899,"byte_end":8868911,"line_start":73,"line_end":73,"column_start":32,"column_end":44},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6122},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8870722,"byte_end":8870728,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876667,"byte_end":8876673,"line_start":351,"line_end":351,"column_start":18,"column_end":24},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":6098},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8876812,"byte_end":8876820,"line_start":359,"line_end":359,"column_start":9,"column_end":17},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":6104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881175,"byte_end":8881183,"line_start":507,"line_end":507,"column_start":18,"column_end":26},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":6104},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881330,"byte_end":8881338,"line_start":515,"line_end":515,"column_start":20,"column_end":28},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":6104},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8881801,"byte_end":8881806,"line_start":531,"line_end":531,"column_start":9,"column_end":14},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":5389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886011,"byte_end":8886016,"line_start":673,"line_end":673,"column_start":31,"column_end":36},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":5389},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886053,"byte_end":8886058,"line_start":674,"line_end":674,"column_start":31,"column_end":36},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":5389},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886083,"byte_end":8886088,"line_start":676,"line_end":676,"column_start":18,"column_end":23},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":5389},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886457,"byte_end":8886462,"line_start":694,"line_end":694,"column_start":36,"column_end":41},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":5389},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8886857,"byte_end":8886862,"line_start":709,"line_end":709,"column_start":6,"column_end":11},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":6135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/oneshot.rs","byte_start":8888575,"byte_end":8888580,"line_start":775,"line_end":775,"column_start":21,"column_end":26},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":6135},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8892058,"byte_end":8892067,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":5502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8901601,"byte_end":8901610,"line_start":348,"line_end":348,"column_start":21,"column_end":30},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":5502},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8901811,"byte_end":8901817,"line_start":356,"line_end":356,"column_start":6,"column_end":12},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":5514},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8902683,"byte_end":8902690,"line_start":385,"line_end":385,"column_start":17,"column_end":24},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":5508},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8903198,"byte_end":8903205,"line_start":404,"line_end":404,"column_start":10,"column_end":17},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":5508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8904004,"byte_end":8904011,"line_start":434,"line_end":434,"column_start":15,"column_end":22},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":5508},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905653,"byte_end":8905660,"line_start":471,"line_end":471,"column_start":22,"column_end":29},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5508},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905707,"byte_end":8905719,"line_start":475,"line_end":475,"column_start":6,"column_end":18},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905812,"byte_end":8905824,"line_start":481,"line_end":481,"column_start":23,"column_end":35},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":6148},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8905968,"byte_end":8905980,"line_start":487,"line_end":487,"column_start":28,"column_end":40},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":6148},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906027,"byte_end":8906042,"line_start":491,"line_end":491,"column_start":6,"column_end":21},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906664,"byte_end":8906679,"line_start":512,"line_end":512,"column_start":23,"column_end":38},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6141},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8906977,"byte_end":8906992,"line_start":521,"line_end":521,"column_start":28,"column_end":43},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6141},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/batch_semaphore.rs","byte_start":8907085,"byte_end":8907091,"line_start":526,"line_end":526,"column_start":35,"column_end":41},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":5514},"to":{"krate":0,"index":782}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8912360,"byte_end":8912369,"line_start":151,"line_end":151,"column_start":6,"column_end":15},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":5596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928441,"byte_end":8928450,"line_start":577,"line_end":577,"column_start":15,"column_end":24},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928529,"byte_end":8928538,"line_start":583,"line_end":583,"column_start":21,"column_end":30},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928916,"byte_end":8928925,"line_start":594,"line_end":594,"column_start":22,"column_end":31},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928950,"byte_end":8928959,"line_start":595,"line_end":595,"column_start":22,"column_end":31},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":5596},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8928997,"byte_end":8929003,"line_start":599,"line_end":599,"column_start":6,"column_end":12},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935409,"byte_end":8935415,"line_start":792,"line_end":792,"column_start":18,"column_end":24},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6153},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935488,"byte_end":8935494,"line_start":798,"line_end":798,"column_start":15,"column_end":21},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6153},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8935916,"byte_end":8935928,"line_start":814,"line_end":814,"column_start":6,"column_end":18},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936108,"byte_end":8936120,"line_start":824,"line_end":824,"column_start":23,"column_end":35},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6158},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936264,"byte_end":8936276,"line_start":830,"line_end":830,"column_start":28,"column_end":40},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6158},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936323,"byte_end":8936338,"line_start":834,"line_end":834,"column_start":6,"column_end":21},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8936868,"byte_end":8936883,"line_start":853,"line_end":853,"column_start":23,"column_end":38},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6163},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8937181,"byte_end":8937196,"line_start":862,"line_end":862,"column_start":28,"column_end":43},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6163},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8937234,"byte_end":8937240,"line_start":866,"line_end":866,"column_start":6,"column_end":12},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8942653,"byte_end":8942661,"line_start":1033,"line_end":1033,"column_start":6,"column_end":14},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8946324,"byte_end":8946332,"line_start":1171,"line_end":1171,"column_start":21,"column_end":29},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6176},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore_ll.rs","byte_start":8946685,"byte_end":8946696,"line_start":1187,"line_end":1187,"column_start":6,"column_end":17},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":6194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8949047,"byte_end":8949056,"line_start":53,"line_end":53,"column_start":6,"column_end":15},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":6202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950141,"byte_end":8950156,"line_start":92,"line_end":92,"column_start":10,"column_end":25},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":6206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/semaphore.rs","byte_start":8950414,"byte_end":8950429,"line_start":101,"line_end":101,"column_start":19,"column_end":34},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":6206},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954373,"byte_end":8954388,"line_start":114,"line_end":114,"column_start":13,"column_end":28},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":6243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8954656,"byte_end":8954671,"line_start":124,"line_end":124,"column_start":22,"column_end":37},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":6243},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955675,"byte_end":8955681,"line_start":157,"line_end":157,"column_start":25,"column_end":31},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":6218},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955726,"byte_end":8955732,"line_start":158,"line_end":158,"column_start":25,"column_end":31},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":6218},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955788,"byte_end":8955803,"line_start":159,"line_end":159,"column_start":29,"column_end":44},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":6225},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955863,"byte_end":8955879,"line_start":160,"line_end":160,"column_start":29,"column_end":45},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8955920,"byte_end":8955926,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":6218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8958971,"byte_end":8958986,"line_start":259,"line_end":259,"column_start":24,"column_end":39},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":6225},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959117,"byte_end":8959133,"line_start":267,"line_end":267,"column_start":24,"column_end":40},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959267,"byte_end":8959283,"line_start":275,"line_end":275,"column_start":27,"column_end":43},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":6234},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959405,"byte_end":8959411,"line_start":281,"line_end":281,"column_start":21,"column_end":27},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6218},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/rwlock.rs","byte_start":8959495,"byte_end":8959501,"line_start":287,"line_end":287,"column_start":21,"column_end":27},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":6218},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8965776,"byte_end":8965787,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":5802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971714,"byte_end":8971725,"line_start":280,"line_end":280,"column_start":18,"column_end":29},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971811,"byte_end":8971822,"line_start":286,"line_end":286,"column_start":21,"column_end":32},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971955,"byte_end":8971966,"line_start":292,"line_end":292,"column_start":22,"column_end":33},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8971991,"byte_end":8972002,"line_start":293,"line_end":293,"column_start":22,"column_end":33},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":5802},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/task/atomic_waker.rs","byte_start":8972098,"byte_end":8972103,"line_start":300,"line_end":300,"column_start":19,"column_end":24},"kind":{"Impl":{"id":538}},"from":{"krate":2,"index":7997},"to":{"krate":0,"index":5825}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975664,"byte_end":8975673,"line_start":108,"line_end":108,"column_start":42,"column_end":51},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6273},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8975853,"byte_end":8975862,"line_start":114,"line_end":114,"column_start":47,"column_end":56},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":6273},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8978031,"byte_end":8978039,"line_start":204,"line_end":204,"column_start":9,"column_end":17},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":6252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8979311,"byte_end":8979319,"line_start":248,"line_end":248,"column_start":16,"column_end":24},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980685,"byte_end":8980693,"line_start":292,"line_end":292,"column_start":42,"column_end":50},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6252},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8980952,"byte_end":8980960,"line_start":302,"line_end":302,"column_start":19,"column_end":27},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6252},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981263,"byte_end":8981271,"line_start":314,"line_end":314,"column_start":18,"column_end":26},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6252},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8981385,"byte_end":8981391,"line_start":320,"line_end":320,"column_start":9,"column_end":15},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8982958,"byte_end":8982964,"line_start":374,"line_end":374,"column_start":18,"column_end":24},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6259},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983203,"byte_end":8983206,"line_start":385,"line_end":385,"column_start":24,"column_end":27},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6265},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983347,"byte_end":8983353,"line_start":395,"line_end":395,"column_start":18,"column_end":24},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":6279},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983455,"byte_end":8983462,"line_start":403,"line_end":403,"column_start":6,"column_end":13},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":6288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983685,"byte_end":8983692,"line_start":412,"line_end":412,"column_start":30,"column_end":37},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":1588}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983809,"byte_end":8983816,"line_start":418,"line_end":418,"column_start":23,"column_end":30},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":1593}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8983846,"byte_end":8983853,"line_start":420,"line_end":420,"column_start":26,"column_end":33},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":6107}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/sync/watch.rs","byte_start":8984000,"byte_end":8984007,"line_start":426,"line_end":426,"column_start":26,"column_end":33},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":6288},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/yield_now.rs","byte_start":8999745,"byte_end":8999753,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6322},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9006736,"byte_end":9006744,"line_start":216,"line_end":216,"column_start":6,"column_end":14},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":6468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9014501,"byte_end":9014509,"line_start":439,"line_end":439,"column_start":21,"column_end":29},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9014648,"byte_end":9014656,"line_start":445,"line_end":445,"column_start":17,"column_end":25},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9015621,"byte_end":9015629,"line_start":469,"line_end":469,"column_start":18,"column_end":26},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9015710,"byte_end":9015718,"line_start":475,"line_end":475,"column_start":15,"column_end":23},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9016585,"byte_end":9016593,"line_start":505,"line_end":505,"column_start":28,"column_end":36},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7574},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9017355,"byte_end":9017361,"line_start":533,"line_end":533,"column_start":6,"column_end":12},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/local.rs","byte_start":9017924,"byte_end":9017927,"line_start":552,"line_end":552,"column_start":25,"column_end":28},"kind":{"Impl":{"id":563}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":3601}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9021372,"byte_end":9021380,"line_start":98,"line_end":98,"column_start":18,"column_end":26},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023156,"byte_end":9023164,"line_start":163,"line_end":163,"column_start":25,"column_end":33},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023372,"byte_end":9023380,"line_start":171,"line_end":171,"column_start":33,"column_end":41},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6420},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9023701,"byte_end":9023716,"line_start":186,"line_end":186,"column_start":40,"column_end":55},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7485},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024017,"byte_end":9024022,"line_start":196,"line_end":196,"column_start":26,"column_end":31},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6448},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024640,"byte_end":9024641,"line_start":220,"line_end":220,"column_start":37,"column_end":38},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6461},"to":{"krate":0,"index":6459}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024837,"byte_end":9024848,"line_start":228,"line_end":228,"column_start":21,"column_end":32},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9024992,"byte_end":9025003,"line_start":234,"line_end":234,"column_start":23,"column_end":34},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6479},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/task/task_local.rs","byte_start":9025150,"byte_end":9025161,"line_start":240,"line_end":240,"column_start":16,"column_end":27},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6479},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/clock.rs","byte_start":9028680,"byte_end":9028685,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9039034,"byte_end":9039044,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056662,"byte_end":9056672,"line_start":751,"line_end":751,"column_start":19,"column_end":29},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6976},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056700,"byte_end":9056710,"line_start":753,"line_end":753,"column_start":21,"column_end":31},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6976},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9056847,"byte_end":9056857,"line_start":760,"line_end":760,"column_start":34,"column_end":44},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6976},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9057239,"byte_end":9057244,"line_start":770,"line_end":770,"column_start":26,"column_end":31},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7001},"to":{"krate":0,"index":6920}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059371,"byte_end":9059376,"line_start":852,"line_end":852,"column_start":21,"column_end":26},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":7001},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059506,"byte_end":9059509,"line_start":861,"line_end":861,"column_start":6,"column_end":9},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay_queue.rs","byte_start":9059596,"byte_end":9059603,"line_start":867,"line_end":867,"column_start":9,"column_end":16},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9061705,"byte_end":9061710,"line_start":51,"line_end":51,"column_start":6,"column_end":11},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":7018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/delay.rs","byte_start":9062688,"byte_end":9062693,"line_start":81,"line_end":81,"column_start":17,"column_end":22},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7018},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9075743,"byte_end":9075754,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9077732,"byte_end":9077750,"line_start":94,"line_end":94,"column_start":19,"column_end":37},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":4716}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/atomic_stack.rs","byte_start":9078322,"byte_end":9078340,"line_start":117,"line_end":117,"column_start":15,"column_end":33},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":7026},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9082292,"byte_end":9082297,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":7030},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088265,"byte_end":9088270,"line_start":328,"line_end":328,"column_start":15,"column_end":20},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088478,"byte_end":9088483,"line_start":339,"line_end":339,"column_start":22,"column_end":27},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/entry.rs","byte_start":9088508,"byte_end":9088513,"line_start":340,"line_end":340,"column_start":22,"column_end":27},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7030},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/handle.rs","byte_start":9088890,"byte_end":9088896,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7054},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/handle.rs","byte_start":9089541,"byte_end":9089547,"line_start":34,"line_end":34,"column_start":21,"column_end":27},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7054},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/registration.rs","byte_start":9089992,"byte_end":9090004,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/registration.rs","byte_start":9090829,"byte_end":9090841,"line_start":49,"line_end":49,"column_start":15,"column_end":27},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7058},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/stack.rs","byte_start":9091125,"byte_end":9091130,"line_start":13,"line_end":13,"column_start":18,"column_end":23},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7062},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/stack.rs","byte_start":9091221,"byte_end":9091226,"line_start":19,"line_end":19,"column_start":23,"column_end":28},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7062},"to":{"krate":0,"index":6920}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9067311,"byte_end":9067317,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":7066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9070964,"byte_end":9070970,"line_start":229,"line_end":229,"column_start":18,"column_end":24},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":7066},"to":{"krate":0,"index":534}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9072959,"byte_end":9072965,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7066},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9073442,"byte_end":9073447,"line_start":322,"line_end":322,"column_start":6,"column_end":11},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/driver/mod.rs","byte_start":9075064,"byte_end":9075069,"line_start":384,"line_end":384,"column_start":21,"column_end":26},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6734},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9095498,"byte_end":9095503,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9096218,"byte_end":9096223,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":7075},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/error.rs","byte_start":9096250,"byte_end":9096255,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":7075},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9096961,"byte_end":9096968,"line_start":14,"line_end":14,"column_start":6,"column_end":13},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":7087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100742,"byte_end":9100749,"line_start":129,"line_end":129,"column_start":35,"column_end":42},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9100878,"byte_end":9100885,"line_start":135,"line_end":135,"column_start":35,"column_end":42},"kind":{"Impl":{"id":607}},"from":{"krate":1,"index":7602},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101000,"byte_end":9101007,"line_start":141,"line_end":141,"column_start":29,"column_end":36},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101172,"byte_end":9101179,"line_start":149,"line_end":149,"column_start":35,"column_end":42},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1948}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101284,"byte_end":9101291,"line_start":155,"line_end":155,"column_start":19,"column_end":26},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1920}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101432,"byte_end":9101439,"line_start":163,"line_end":163,"column_start":29,"column_end":36},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1920}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101600,"byte_end":9101607,"line_start":171,"line_end":171,"column_start":35,"column_end":42},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/instant.rs","byte_start":9101714,"byte_end":9101721,"line_start":177,"line_end":177,"column_start":21,"column_end":28},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":7087},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9104446,"byte_end":9104454,"line_start":88,"line_end":88,"column_start":6,"column_end":14},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":7110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/interval.rs","byte_start":9105749,"byte_end":9105757,"line_start":133,"line_end":133,"column_start":32,"column_end":40},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":7110},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9108984,"byte_end":9108991,"line_start":114,"line_end":114,"column_start":6,"column_end":13},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":7122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109120,"byte_end":9109127,"line_start":122,"line_end":122,"column_start":9,"column_end":16},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":7115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9109665,"byte_end":9109672,"line_start":143,"line_end":143,"column_start":20,"column_end":27},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":7115},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110473,"byte_end":9110480,"line_start":173,"line_end":173,"column_start":23,"column_end":30},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":7122},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110624,"byte_end":9110631,"line_start":179,"line_end":179,"column_start":28,"column_end":35},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":7122},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/timeout.rs","byte_start":9110668,"byte_end":9110673,"line_start":181,"line_end":181,"column_start":33,"column_end":38},"kind":{"Impl":{"id":621}},"from":{"krate":1,"index":2472},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9128858,"byte_end":9128866,"line_start":70,"line_end":70,"column_start":16,"column_end":24},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":7476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/throttle.rs","byte_start":9129681,"byte_end":9129689,"line_start":95,"line_end":95,"column_start":28,"column_end":36},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":7476},"to":{"krate":17,"index":68}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/level.rs","byte_start":9120577,"byte_end":9120582,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":6893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/level.rs","byte_start":9125334,"byte_end":9125339,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":6893},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/stack.rs","byte_start":9126455,"byte_end":9126462,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1843},"to":{"krate":0,"index":6920}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/mod.rs","byte_start":9112398,"byte_end":9112403,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":7164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/time/wheel/mod.rs","byte_start":9118111,"byte_end":9118115,"line_start":254,"line_end":254,"column_start":6,"column_end":10},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/bit.rs","byte_start":9130522,"byte_end":9130526,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/bit.rs","byte_start":9132000,"byte_end":9132004,"line_start":61,"line_end":61,"column_start":21,"column_end":25},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7372},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/addr.rs","byte_start":9139223,"byte_end":9139230,"line_start":76,"line_end":76,"column_start":6,"column_end":13},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7378},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/entry.rs","byte_start":9141865,"byte_end":9141872,"line_start":3,"line_end":3,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1843},"to":{"krate":0,"index":7227}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/generation.rs","byte_start":9142259,"byte_end":9142269,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9143408,"byte_end":9143413,"line_start":24,"line_end":24,"column_start":6,"column_end":11},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9143755,"byte_end":9143761,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9147713,"byte_end":9147718,"line_start":167,"line_end":167,"column_start":21,"column_end":26},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7250},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/page.rs","byte_start":9148024,"byte_end":9148030,"line_start":178,"line_end":178,"column_start":24,"column_end":30},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7252},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/shard.rs","byte_start":9150173,"byte_end":9150178,"line_start":38,"line_end":38,"column_start":16,"column_end":21},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/shard.rs","byte_start":9151857,"byte_end":9151862,"line_start":99,"line_end":99,"column_start":24,"column_end":29},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7296},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/slot.rs","byte_start":9152239,"byte_end":9152243,"line_start":10,"line_end":10,"column_start":16,"column_end":20},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/stack.rs","byte_start":9153214,"byte_end":9153227,"line_start":12,"line_end":12,"column_start":6,"column_end":19},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/stack.rs","byte_start":9154055,"byte_end":9154068,"line_start":47,"line_end":47,"column_start":21,"column_end":34},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7340},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133602,"byte_end":9133606,"line_start":56,"line_end":56,"column_start":31,"column_end":35},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7355},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133643,"byte_end":9133647,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7355},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9133670,"byte_end":9133674,"line_start":59,"line_end":59,"column_start":16,"column_end":20},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/slab/mod.rs","byte_start":9135189,"byte_end":9135193,"line_start":103,"line_end":103,"column_start":24,"column_end":28},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7355},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163381,"byte_end":163391,"line_start":23,"line_end":23,"column_start":31,"column_end":41},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":163450,"byte_end":163460,"line_start":24,"line_end":24,"column_start":31,"column_end":41},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164749,"byte_end":164757,"line_start":64,"line_end":64,"column_start":31,"column_end":39},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164794,"byte_end":164802,"line_start":65,"line_end":65,"column_start":31,"column_end":39},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":164856,"byte_end":164866,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":167870,"byte_end":167880,"line_start":167,"line_end":167,"column_start":30,"column_end":40},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":168125,"byte_end":168135,"line_start":177,"line_end":177,"column_start":19,"column_end":29},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":169218,"byte_end":169226,"line_start":220,"line_end":220,"column_start":9,"column_end":17},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/linked_list.rs","byte_start":169425,"byte_end":169433,"line_start":230,"line_end":230,"column_start":24,"column_end":32},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":788},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/rand.rs","byte_start":179505,"byte_end":179513,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":7421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/wake.rs","byte_start":181053,"byte_end":181057,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":829}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/wake.rs","byte_start":181060,"byte_end":181064,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":829}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-0.2.17/src/util/wake.rs","byte_start":181375,"byte_end":181383,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7430},"to":{"krate":2,"index":2023}}]}