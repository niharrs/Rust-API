{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","actix_rt","--edition=2018","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=6dfa6d811b387bfa","-C","extra-filename=-6dfa6d811b387bfa","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--extern","actix_macros=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libactix_macros-4ae89cd22c1ad79d.dylib","--extern","actix_threadpool=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libactix_threadpool-b6b9ab29bec6407b.rmeta","--extern","copyless=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libcopyless-b475e6bf4c7ccb4b.rmeta","--extern","futures_channel=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_channel-fbc4c5b7951ee90e.rmeta","--extern","futures_util=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libfutures_util-857658d1387707e6.rmeta","--extern","tokio=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtokio-1b4bba8565aaa5a8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libactix_rt-6dfa6d811b387bfa.rmeta"},"prelude":{"crate_id":{"name":"actix_rt","disambiguator":[4766953333425123755,15356319486629778721]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":15,"id":{"name":"actix_macros","disambiguator":[2226314921656121914,11656918768408292687]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":16,"id":{"name":"futures_channel","disambiguator":[7633196224784903794,4398443892668884006]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":17,"id":{"name":"futures_core","disambiguator":[7001366758905092501,11004721139566071535]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":18,"id":{"name":"futures_sink","disambiguator":[11960107017759325617,2870266462260277688]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":19,"id":{"name":"futures_util","disambiguator":[7253773932654137744,9358373392753907327]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":20,"id":{"name":"pin_utils","disambiguator":[3577977941322801162,15545228249838325296]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":21,"id":{"name":"proc_macro_hack","disambiguator":[15260283162016249445,12127011552314439639]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":22,"id":{"name":"futures_task","disambiguator":[15790074320622313768,1594389429335229326]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":23,"id":{"name":"slab","disambiguator":[1409043506054454837,8744282326915100185]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":24,"id":{"name":"futures_io","disambiguator":[7163970961465124453,2021316913371557222]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":25,"id":{"name":"futures_macro","disambiguator":[6862206004400524785,6552335620211743445]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":26,"id":{"name":"proc_macro_nested","disambiguator":[15319466095758472710,7897119793581254434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":27,"id":{"name":"memchr","disambiguator":[251563329699221058,3480720099078396615]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":28,"id":{"name":"copyless","disambiguator":[12157951720267335438,15167130515986958211]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":29,"id":{"name":"tokio","disambiguator":[11905398557701652019,15568126096425657729]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":30,"id":{"name":"pin_project_lite","disambiguator":[3029737169759291666,9942484439807821310]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":31,"id":{"name":"bytes","disambiguator":[3234461312631938355,4652367375173356794]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":32,"id":{"name":"mio","disambiguator":[11431926200436597215,5132575838010453719]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":33,"id":{"name":"net2","disambiguator":[9119776918725886975,8127876557544096078]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":34,"id":{"name":"libc","disambiguator":[12029950799728344980,14625873231468315695]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":35,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":36,"id":{"name":"iovec","disambiguator":[3662113506597968008,9055319988211572080]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":37,"id":{"name":"log","disambiguator":[16869437812774876011,6221816467677339912]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":38,"id":{"name":"mio_uds","disambiguator":[3651254062301955048,1922942977027289515]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":39,"id":{"name":"lazy_static","disambiguator":[2600192780033545957,15495159354165441647]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":40,"id":{"name":"fnv","disambiguator":[13771570177894503084,8684805612069036812]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":41,"id":{"name":"signal_hook_registry","disambiguator":[8401647546033715890,13156881933724841041]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","num":42,"id":{"name":"arc_swap","disambiguator":[11698414955222306728,13245458730901588314]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":43,"id":{"name":"actix_threadpool","disambiguator":[75998248851185577,5019932387139405270]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":44,"id":{"name":"derive_more","disambiguator":[12989028637410131112,5785344772663389842]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":45,"id":{"name":"parking_lot","disambiguator":[1886584365741908314,3797908362010502810]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":46,"id":{"name":"lock_api","disambiguator":[4526667931791535599,10308972330018173726]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":47,"id":{"name":"scopeguard","disambiguator":[11328402355430066916,14574540355421811731]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":48,"id":{"name":"parking_lot_core","disambiguator":[3781888568254282981,15506348519709363603]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":49,"id":{"name":"smallvec","disambiguator":[18220833423010831279,12014837108768649592]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":50,"id":{"name":"threadpool","disambiguator":[16696919940350350290,5185029835912489036]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","num":51,"id":{"name":"num_cpus","disambiguator":[16153084193657012538,15039448752341399261]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":6},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":227,"byte_end":231,"line_start":6,"line_end":6,"column_start":24,"column_end":28},"alias_span":null,"name":"main","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":7},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":233,"byte_end":237,"line_start":6,"line_end":6,"column_start":30,"column_end":34},"alias_span":null,"name":"test","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":316,"byte_end":323,"line_start":13,"line_end":13,"column_start":24,"column_end":31},"alias_span":null,"name":"Arbiter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":158},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":349,"byte_end":356,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":358,"byte_end":370,"line_start":14,"line_end":14,"column_start":34,"column_end":46},"alias_span":null,"name":"SystemRunner","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":396,"byte_end":403,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Runtime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":427,"byte_end":433,"line_start":16,"line_end":16,"column_start":23,"column_end":29},"alias_span":null,"name":"System","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":43,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":459,"byte_end":475,"line_start":19,"line_end":19,"column_start":9,"column_end":25},"alias_span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":479,"byte_end":487,"line_start":19,"line_end":19,"column_start":29,"column_end":37},"name":"blocking","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":926,"byte_end":927,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":249}},{"kind":"Use","ref_id":{"krate":29,"index":3803},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":962,"byte_end":968,"line_start":43,"line_end":43,"column_start":28,"column_end":34},"alias_span":null,"name":"ctrl_c","value":"","parent":{"krate":0,"index":248}},{"kind":"Use","ref_id":{"krate":29,"index":2733},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1037,"byte_end":1046,"line_start":48,"line_end":48,"column_start":25,"column_end":34},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":29,"index":2582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1073,"byte_end":1084,"line_start":49,"line_end":49,"column_start":26,"column_end":37},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":29,"index":2604},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1086,"byte_end":1095,"line_start":49,"line_end":49,"column_start":39,"column_end":48},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":252}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":926,"byte_end":927,"line_start":41,"line_end":41,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":252}},{"kind":"Use","ref_id":{"krate":29,"index":7087},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1328,"byte_end":1335,"line_start":62,"line_end":62,"column_start":26,"column_end":33},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":6582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1363,"byte_end":1372,"line_start":63,"line_end":63,"column_start":27,"column_end":36},"alias_span":null,"name":"delay_for","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":6581},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1374,"byte_end":1385,"line_start":63,"line_end":63,"column_start":38,"column_end":49},"alias_span":null,"name":"delay_until","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":7018},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1387,"byte_end":1392,"line_start":63,"line_end":63,"column_start":51,"column_end":56},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":6834},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1421,"byte_end":1429,"line_start":64,"line_end":64,"column_start":27,"column_end":35},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":6835},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1431,"byte_end":1442,"line_start":64,"line_end":64,"column_start":37,"column_end":48},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":7110},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1444,"byte_end":1452,"line_start":64,"line_end":64,"column_start":50,"column_end":58},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":6861},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1481,"byte_end":1488,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":29,"index":7115},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1490,"byte_end":1497,"line_start":65,"line_end":65,"column_start":36,"column_end":43},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":263}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":0,"byte_end":1501,"line_start":1,"line_end":66,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":141},{"krate":0,"index":185},{"krate":0,"index":197},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":252},{"krate":0,"index":263}],"decl_id":null,"docs":" A runtime implementation that runs everything on the current thread.\n","sig":null,"attributes":[{"value":"! A runtime implementation that runs everything on the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":0,"byte_end":72,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"deny(rust_2018_idioms, warnings)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":73,"byte_end":109,"line_start":2,"line_end":2,"column_start":1,"column_end":37}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":110,"byte_end":144,"line_start":3,"line_end":3,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":296},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3282,"byte_end":3289,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Arbiter","qualname":"::arbiter::Arbiter","value":"Arbiter {  }","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"decl_id":null,"docs":" Arbiters provide an asynchronous execution environment for actors, functions\n and futures. When an Arbiter is created, it spawns a new OS thread, and\n hosts an event loop. Some Arbiter functions execute on the current thread.\n","sig":null,"attributes":[{"value":"/ Arbiters provide an asynchronous execution environment for actors, functions","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3035,"byte_end":3115,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ and futures. When an Arbiter is created, it spawns a new OS thread, and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3116,"byte_end":3191,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ hosts an event loop. Some Arbiter functions execute on the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3192,"byte_end":3270,"line_start":52,"line_end":52,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4104,"byte_end":4111,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"current","qualname":"<Arbiter>::current","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Returns the current thread's arbiter's address. If no Arbiter is present, then this\n function will panic!\n","sig":null,"attributes":[{"value":"/ Returns the current thread's arbiter's address. If no Arbiter is present, then this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3976,"byte_end":4063,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ function will panic!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4068,"byte_end":4092,"line_start":84,"line_end":84,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4347,"byte_end":4357,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"is_running","qualname":"<Arbiter>::is_running","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current arbiter is running.\n","sig":null,"attributes":[{"value":"/ Check if current arbiter is running.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4295,"byte_end":4335,"line_start":92,"line_end":92,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4482,"byte_end":4486,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"stop","qualname":"<Arbiter>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop arbiter from continuing it's event loop.\n","sig":null,"attributes":[{"value":"/ Stop arbiter from continuing it's event loop.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4421,"byte_end":4470,"line_start":97,"line_end":97,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4693,"byte_end":4696,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Arbiter>::new","value":"fn () -> Arbiter","parent":null,"children":[],"decl_id":null,"docs":" Spawn new thread and run event loop in spawned thread.\n Returns address of newly created arbiter.\n","sig":null,"attributes":[{"value":"/ Spawn new thread and run event loop in spawned thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4573,"byte_end":4631,"line_start":102,"line_end":102,"column_start":5,"column_end":63}},{"value":"/ Returns address of newly created arbiter.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":4636,"byte_end":4681,"line_start":103,"line_end":103,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7123,"byte_end":7128,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Arbiter>::spawn","value":"fn <F> (future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for spawning futures on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Spawn a future on the current thread. This does not create a new Arbiter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":6933,"byte_end":7009,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ or Arbiter address, it is simply a helper for spawning futures on the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7014,"byte_end":7095,"line_start":175,"line_end":175,"column_start":5,"column_end":86}},{"value":"/ thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7100,"byte_end":7111,"line_start":176,"line_end":176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8022,"byte_end":8030,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"spawn_fn","qualname":"<Arbiter>::spawn_fn","value":"fn <F, R> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Executes a future on the current thread. This does not create a new Arbiter\n or Arbiter address, it is simply a helper for executing futures on the current\n thread.\n","sig":null,"attributes":[{"value":"/ Executes a future on the current thread. This does not create a new Arbiter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7828,"byte_end":7907,"line_start":197,"line_end":197,"column_start":5,"column_end":84}},{"value":"/ or Arbiter address, it is simply a helper for executing futures on the current","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7912,"byte_end":7994,"line_start":198,"line_end":198,"column_start":5,"column_end":87}},{"value":"/ thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":7999,"byte_end":8010,"line_start":199,"line_end":199,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8272,"byte_end":8276,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"send","qualname":"<Arbiter>::send","value":"fn <F> (&self, future: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a future to the Arbiter's thread, and spawn it.\n","sig":null,"attributes":[{"value":"/ Send a future to the Arbiter's thread, and spawn it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8204,"byte_end":8260,"line_start":208,"line_end":208,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8618,"byte_end":8625,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"exec_fn","qualname":"<Arbiter>::exec_fn","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread, and execute it. Any result from the function\n is discarded.\n","sig":null,"attributes":[{"value":"/ Send a function to the Arbiter's thread, and execute it. Any result from the function","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8495,"byte_end":8584,"line_start":218,"line_end":218,"column_start":5,"column_end":94}},{"value":"/ is discarded.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8589,"byte_end":8606,"line_start":219,"line_end":219,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9087,"byte_end":9091,"line_start":234,"line_end":234,"column_start":12,"column_end":16},"name":"exec","qualname":"<Arbiter>::exec","value":"fn <F, R> (&self, f: F) -> impl Future<Output = Result<R, Canceled>>","parent":null,"children":[],"decl_id":null,"docs":" Send a function to the Arbiter's thread. This function will be executed asynchronously.\n A future is created, and when resolved will contain the result of the function sent\n to the Arbiters thread.\n","sig":null,"attributes":[{"value":"/ Send a function to the Arbiter's thread. This function will be executed asynchronously.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8860,"byte_end":8951,"line_start":231,"line_end":231,"column_start":5,"column_end":96}},{"value":"/ A future is created, and when resolved will contain the result of the function sent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":8956,"byte_end":9043,"line_start":232,"line_end":232,"column_start":5,"column_end":92}},{"value":"/ to the Arbiters thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9048,"byte_end":9075,"line_start":233,"line_end":233,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9572,"byte_end":9580,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"set_item","qualname":"<Arbiter>::set_item","value":"fn <T> (item: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set item to arbiter storage\n","sig":null,"attributes":[{"value":"/ Set item to arbiter storage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9529,"byte_end":9560,"line_start":250,"line_end":250,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9764,"byte_end":9777,"line_start":256,"line_end":256,"column_start":12,"column_end":25},"name":"contains_item","qualname":"<Arbiter>::contains_item","value":"fn <T> () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if arbiter storage contains item\n","sig":null,"attributes":[{"value":"/ Check if arbiter storage contains item","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9710,"byte_end":9752,"line_start":255,"line_end":255,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":10030,"byte_end":10038,"line_start":263,"line_end":263,"column_start":12,"column_end":20},"name":"get_item","qualname":"<Arbiter>::get_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[{"value":"/ Get a reference to a type previously inserted on this arbiter's storage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9895,"byte_end":9971,"line_start":260,"line_end":260,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9976,"byte_end":9979,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Panics is item is not inserted","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":9984,"byte_end":10018,"line_start":262,"line_end":262,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":10550,"byte_end":10562,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"get_mut_item","qualname":"<Arbiter>::get_mut_item","value":"fn <T, F, R> (mut f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a type previously inserted on this arbiter's storage.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a type previously inserted on this arbiter's storage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":10407,"byte_end":10491,"line_start":277,"line_end":277,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":10496,"byte_end":10499,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Panics is item is not inserted","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":10504,"byte_end":10538,"line_start":279,"line_end":279,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11206,"byte_end":11210,"line_start":302,"line_end":302,"column_start":12,"column_end":16},"name":"join","qualname":"<Arbiter>::join","value":"fn (&mut self) -> thread::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Wait for the event loop to stop by joining the underlying thread (if have Some).\n","sig":null,"attributes":[{"value":"/ Wait for the event loop to stop by joining the underlying thread (if have Some).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11110,"byte_end":11194,"line_start":301,"line_end":301,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11515,"byte_end":11525,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"local_join","qualname":"<Arbiter>::local_join","value":"fn () -> impl Future<Output = ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that will be completed once all currently spawned futures\n have completed.\n","sig":null,"attributes":[{"value":"/ Returns a future that will be completed once all currently spawned futures","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11401,"byte_end":11479,"line_start":310,"line_end":310,"column_start":5,"column_end":83}},{"value":"/ have completed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11484,"byte_end":11503,"line_start":311,"line_end":311,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15719,"byte_end":15726,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" Builder struct for a actix runtime.","sig":null,"attributes":[{"value":"/ Builder struct for a actix runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15491,"byte_end":15530,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15531,"byte_end":15534,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Either use `Builder::build` to create a system and start actors.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15535,"byte_end":15603,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ Alternatively, use `Builder::run` to start the tokio runtime and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15604,"byte_end":15672,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ run a function in its context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15673,"byte_end":15707,"line_start":17,"line_end":17,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16146,"byte_end":16150,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"name","qualname":"<Builder>::name","value":"fn <T> (mut self, name: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the name of the System.\n","sig":null,"attributes":[{"value":"/ Sets the name of the System.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16102,"byte_end":16134,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16456,"byte_end":16469,"line_start":44,"line_end":44,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<Builder>::stop_on_panic","value":"fn (mut self, stop_on_panic: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the option 'stop_on_panic' which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.","sig":null,"attributes":[{"value":"/ Sets the option 'stop_on_panic' which controls whether the System is stopped when an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16266,"byte_end":16354,"line_start":40,"line_end":40,"column_start":5,"column_end":93}},{"value":"/ uncaught panic is thrown from a worker thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16359,"byte_end":16409,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16414,"byte_end":16417,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16422,"byte_end":16444,"line_start":43,"line_end":43,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16683,"byte_end":16688,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (self) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new System.","sig":null,"attributes":[{"value":"/ Create new System.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16579,"byte_end":16601,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16606,"byte_end":16609,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":16614,"byte_end":16671,"line_start":51,"line_end":51,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":17198,"byte_end":17201,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder>::run","value":"fn <F> (self, f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":17012,"byte_end":17079,"line_start":63,"line_end":63,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":17084,"byte_end":17124,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":17129,"byte_end":17186,"line_start":65,"line_end":65,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19691,"byte_end":19703,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"SystemRunner","qualname":"::builder::SystemRunner","value":"SystemRunner {  }","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"decl_id":null,"docs":" Helper object that runs System's event loop\n","sig":null,"attributes":[{"value":"/ Helper object that runs System's event loop","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19574,"byte_end":19621,"line_start":147,"line_end":147,"column_start":1,"column_end":48}},{"value":"must_use = \"SystemRunner must be run\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19622,"byte_end":19662,"line_start":148,"line_end":148,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19916,"byte_end":19919,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"run","qualname":"<SystemRunner>::run","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start event loop and will finish once the\n `System::stop()` function is called.\n","sig":null,"attributes":[{"value":"/ This function will start event loop and will finish once the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19795,"byte_end":19859,"line_start":157,"line_end":157,"column_start":5,"column_end":69}},{"value":"/ `System::stop()` function is called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19864,"byte_end":19904,"line_start":158,"line_end":158,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":20613,"byte_end":20621,"line_start":182,"line_end":182,"column_start":12,"column_end":20},"name":"block_on","qualname":"<SystemRunner>::block_on","value":"fn <F, O> (&mut self, fut: F) -> O","parent":null,"children":[],"decl_id":null,"docs":" Execute a future and wait for result.\n","sig":null,"attributes":[{"value":"/ Execute a future and wait for result.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":20560,"byte_end":20601,"line_start":181,"line_end":181,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":331},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21142,"byte_end":21149,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"decl_id":null,"docs":" Single-threaded runtime provides a way to start reactor\n and runtime on the current thread.","sig":null,"attributes":[{"value":"/ Single-threaded runtime provides a way to start reactor","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":20925,"byte_end":20984,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/ and runtime on the current thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":20985,"byte_end":21023,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21024,"byte_end":21027,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21028,"byte_end":21087,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21088,"byte_end":21091,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21092,"byte_end":21113,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21343,"byte_end":21346,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Runtime>::new","value":"fn () -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new runtime initialized with default configuration values.\n","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21221,"byte_end":21254,"line_start":18,"line_end":18,"column_start":5,"column_end":38}},{"value":"/ Returns a new runtime initialized with default configuration values.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21259,"byte_end":21331,"line_start":19,"line_end":19,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22412,"byte_end":22417,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Runtime>::spawn","value":"fn <F> (&self, future: F) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the single-threaded runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the single-threaded runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21617,"byte_end":21669,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21674,"byte_end":21677,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21682,"byte_end":21741,"line_start":35,"line_end":35,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21746,"byte_end":21749,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21754,"byte_end":21775,"line_start":37,"line_end":37,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21780,"byte_end":21783,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21788,"byte_end":21802,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21807,"byte_end":21810,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21815,"byte_end":21833,"line_start":41,"line_end":41,"column_start":5,"column_end":23}},{"value":"/ # use futures::{future, Future, Stream};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21838,"byte_end":21882,"line_start":42,"line_end":42,"column_start":5,"column_end":49}},{"value":"/ use actix_rt::Runtime;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21887,"byte_end":21913,"line_start":43,"line_end":43,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21918,"byte_end":21921,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21926,"byte_end":21942,"line_start":45,"line_end":45,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21947,"byte_end":21972,"line_start":46,"line_end":46,"column_start":5,"column_end":30}},{"value":"/ let mut rt = Runtime::new().unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21977,"byte_end":22018,"line_start":47,"line_end":47,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22023,"byte_end":22026,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22031,"byte_end":22069,"line_start":49,"line_end":49,"column_start":5,"column_end":43}},{"value":"/ rt.spawn(future::lazy(|_| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22074,"byte_end":22105,"line_start":50,"line_end":50,"column_start":5,"column_end":36}},{"value":"/     println!(\"running on the runtime\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22110,"byte_end":22153,"line_start":51,"line_end":51,"column_start":5,"column_end":48}},{"value":"/ }));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22158,"byte_end":22166,"line_start":52,"line_end":52,"column_start":5,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22171,"byte_end":22178,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22183,"byte_end":22205,"line_start":54,"line_end":54,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22210,"byte_end":22217,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22222,"byte_end":22225,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22230,"byte_end":22242,"line_start":57,"line_end":57,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22247,"byte_end":22250,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function panics if the spawn fails. Failure occurs if the executor","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22255,"byte_end":22330,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ is currently at capacity and is unable to spawn a new future.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22335,"byte_end":22400,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23443,"byte_end":23451,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Runtime>::block_on","value":"fn <F> (&mut self, f: F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided future, blocking the current thread until the future\n completes.","sig":null,"attributes":[{"value":"/ Runs the provided future, blocking the current thread until the future","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22570,"byte_end":22644,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ completes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22649,"byte_end":22663,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22668,"byte_end":22671,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function can be used to synchronously block the current thread","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22676,"byte_end":22747,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ until the provided `future` has resolved either successfully or with an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22752,"byte_end":22827,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ error. The result of the future is then returned from this function","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22832,"byte_end":22903,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ call.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22908,"byte_end":22917,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22922,"byte_end":22925,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that this function will **also** execute any spawned futures on the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":22930,"byte_end":23006,"line_start":77,"line_end":77,"column_start":5,"column_end":81}},{"value":"/ current thread, but will **not** block until these other spawned futures","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23011,"byte_end":23087,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ have completed. Once the function returns, any uncompleted futures","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23092,"byte_end":23162,"line_start":79,"line_end":79,"column_start":5,"column_end":75}},{"value":"/ remain pending in the `Runtime` instance. These futures will not run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23167,"byte_end":23239,"line_start":80,"line_end":80,"column_start":5,"column_end":77}},{"value":"/ until `block_on` or `run` is called again.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23244,"byte_end":23290,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23295,"byte_end":23298,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The caller is responsible for ensuring that other spawned futures","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23303,"byte_end":23372,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ complete execution by calling `block_on` or `run`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":23377,"byte_end":23431,"line_start":84,"line_end":84,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":23984,"byte_end":23990,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"System","qualname":"::system::System","value":"System {  }","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340}],"decl_id":null,"docs":" System is a runtime manager.\n","sig":null,"attributes":[{"value":"/ System is a runtime manager.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":23916,"byte_end":23948,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24811,"byte_end":24818,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"builder","qualname":"<System>::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a new system with a customized tokio runtime.","sig":null,"attributes":[{"value":"/ Build a new system with a customized tokio runtime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24625,"byte_end":24680,"line_start":44,"line_end":44,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24685,"byte_end":24688,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This allows to customize the runtime. See struct level docs on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24693,"byte_end":24759,"line_start":46,"line_end":46,"column_start":5,"column_end":71}},{"value":"/ `Builder` for more information.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24764,"byte_end":24799,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25010,"byte_end":25013,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<System>::new","value":"fn <T> (name: T) -> SystemRunner","parent":null,"children":[],"decl_id":null,"docs":" Create new system.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24868,"byte_end":24901,"line_start":52,"line_end":52,"column_start":5,"column_end":38}},{"value":"/ Create new system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24906,"byte_end":24928,"line_start":53,"line_end":53,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24933,"byte_end":24936,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not create tokio runtime","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24941,"byte_end":24998,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25282,"byte_end":25294,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"run_in_tokio","qualname":"<System>::run_in_tokio","value":"fn <T> (name: T, local: &LocalSet) -> impl Future<Output = io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Create new system using provided tokio Handle.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25112,"byte_end":25145,"line_start":60,"line_end":60,"column_start":5,"column_end":38}},{"value":"/ Create new system using provided tokio Handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25150,"byte_end":25200,"line_start":61,"line_end":61,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25205,"byte_end":25208,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method panics if it can not spawn system arbiter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25213,"byte_end":25270,"line_start":63,"line_end":63,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25569,"byte_end":25576,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"current","qualname":"<System>::current","value":"fn () -> System","parent":null,"children":[],"decl_id":null,"docs":" Get current running system.\n","sig":null,"attributes":[{"value":"/ Get current running system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25526,"byte_end":25557,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25837,"byte_end":25843,"line_start":83,"line_end":83,"column_start":12,"column_end":18},"name":"is_set","qualname":"<System>::is_set","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if current system is set, i.e., as already been started.\n","sig":null,"attributes":[{"value":"/ Check if current system is set, i.e., as already been started.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25759,"byte_end":25825,"line_start":82,"line_end":82,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25982,"byte_end":25993,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_current","qualname":"<System>::set_current","value":"fn (sys: System) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set current running system.\n","sig":null,"attributes":[{"value":"/ Set current running system.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":25920,"byte_end":25951,"line_start":87,"line_end":87,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26154,"byte_end":26166,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"with_current","qualname":"<System>::with_current","value":"fn <F, R> (f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Execute function with system reference.\n","sig":null,"attributes":[{"value":"/ Execute function with system reference.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26099,"byte_end":26142,"line_start":95,"line_end":95,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26421,"byte_end":26423,"line_start":107,"line_end":107,"column_start":12,"column_end":14},"name":"id","qualname":"<System>::id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System id\n","sig":null,"attributes":[{"value":"/ System id","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26396,"byte_end":26409,"line_start":106,"line_end":106,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26500,"byte_end":26504,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"stop","qualname":"<System>::stop","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system\n","sig":null,"attributes":[{"value":"/ Stop the system","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26469,"byte_end":26488,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26616,"byte_end":26630,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"stop_with_code","qualname":"<System>::stop_with_code","value":"fn (&self, code: i32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stop the system with a particular exit code.\n","sig":null,"attributes":[{"value":"/ Stop the system with a particular exit code.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26556,"byte_end":26604,"line_start":116,"line_end":116,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26984,"byte_end":26997,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"stop_on_panic","qualname":"<System>::stop_on_panic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return status of 'stop_on_panic' option which controls whether the System is stopped when an\n uncaught panic is thrown from a worker thread.\n","sig":null,"attributes":[{"value":"/ Return status of 'stop_on_panic' option which controls whether the System is stopped when an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26821,"byte_end":26917,"line_start":125,"line_end":125,"column_start":5,"column_end":101}},{"value":"/ uncaught panic is thrown from a worker thread.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":26922,"byte_end":26972,"line_start":126,"line_end":126,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27083,"byte_end":27090,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"arbiter","qualname":"<System>::arbiter","value":"fn (&self) -> &Arbiter","parent":null,"children":[],"decl_id":null,"docs":" System arbiter\n","sig":null,"attributes":[{"value":"/ System arbiter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27053,"byte_end":27071,"line_start":131,"line_end":131,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27331,"byte_end":27334,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"run","qualname":"<System>::run","value":"fn <F> (f: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" This function will start tokio runtime and will finish once the\n `System::stop()` message get called.\n Function `f` get called within tokio runtime context.\n","sig":null,"attributes":[{"value":"/ This function will start tokio runtime and will finish once the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27145,"byte_end":27212,"line_start":136,"line_end":136,"column_start":5,"column_end":72}},{"value":"/ `System::stop()` message get called.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27217,"byte_end":27257,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/ Function `f` get called within tokio runtime context.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":27262,"byte_end":27319,"line_start":138,"line_end":138,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":619,"byte_end":624,"line_start":26,"line_end":26,"column_start":8,"column_end":13},"name":"spawn","qualname":"::spawn","value":"fn <F> (f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Spawns a future on the current arbiter.","sig":null,"attributes":[{"value":"/ Spawns a future on the current arbiter.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":490,"byte_end":533,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":534,"byte_end":537,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":538,"byte_end":550,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":551,"byte_end":554,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function panics if actix system is not running.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":555,"byte_end":611,"line_start":25,"line_end":25,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":248},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":844,"byte_end":850,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"name":"signal","qualname":"::signal","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251}],"decl_id":null,"docs":" Asynchronous signal handling\n","sig":null,"attributes":[{"value":"/ Asynchronous signal handling","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":803,"byte_end":835,"line_start":37,"line_end":37,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":249},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":882,"byte_end":886,"line_start":40,"line_end":40,"column_start":13,"column_end":17},"name":"unix","qualname":"::signal::unix","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":250}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(unix)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":857,"byte_end":869,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":252},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1007,"byte_end":1010,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"net","qualname":"::net","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":262}],"decl_id":null,"docs":" TCP/UDP/Unix bindings\n","sig":null,"attributes":[{"value":"/ TCP/UDP/Unix bindings","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":973,"byte_end":998,"line_start":46,"line_end":46,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1296,"byte_end":1300,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"time","qualname":"::time","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":269},{"krate":0,"index":273}],"decl_id":null,"docs":" Utilities for tracking time.\n","sig":null,"attributes":[{"value":"/ Utilities for tracking time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/lib.rs","byte_start":1255,"byte_end":1287,"line_start":60,"line_end":60,"column_start":1,"column_end":33}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":2663,"byte_end":2677,"line_start":39,"line_end":39,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3406,"byte_end":3413,"line_start":58,"line_end":58,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3519,"byte_end":3526,"line_start":64,"line_end":64,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3590,"byte_end":3597,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":110},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11833,"byte_end":11850,"line_start":325,"line_end":325,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":12216,"byte_end":12233,"line_start":338,"line_end":338,"column_start":17,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":13558,"byte_end":13571,"line_start":381,"line_end":381,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":13818,"byte_end":13831,"line_start":391,"line_end":391,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":15042,"byte_end":15043,"line_start":426,"line_end":426,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15943,"byte_end":15950,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":18519,"byte_end":18536,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19776,"byte_end":19788,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21207,"byte_end":21214,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24189,"byte_end":24195,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":2663,"byte_end":2677,"line_start":39,"line_end":39,"column_start":21,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":43},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3406,"byte_end":3413,"line_start":58,"line_end":58,"column_start":16,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3519,"byte_end":3526,"line_start":64,"line_end":64,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":296},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":3590,"byte_end":3597,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":11833,"byte_end":11850,"line_start":325,"line_end":325,"column_start":15,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":12216,"byte_end":12233,"line_start":338,"line_end":338,"column_start":17,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":13558,"byte_end":13571,"line_start":381,"line_end":381,"column_start":6,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":13818,"byte_end":13831,"line_start":391,"line_end":391,"column_start":17,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":314},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":14969,"byte_end":14973,"line_start":422,"line_end":422,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/arbiter.rs","byte_start":15042,"byte_end":15043,"line_start":426,"line_end":426,"column_start":20,"column_end":21},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":139},"to":{"krate":0,"index":136}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":15943,"byte_end":15950,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":18519,"byte_end":18536,"line_start":116,"line_end":116,"column_start":6,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/builder.rs","byte_start":19776,"byte_end":19788,"line_start":156,"line_end":156,"column_start":6,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/runtime.rs","byte_start":21207,"byte_end":21214,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-rt-1.1.0/src/system.rs","byte_start":24189,"byte_end":24195,"line_start":27,"line_end":27,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}}]}