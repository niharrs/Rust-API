{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","multipart","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"buf_redux\"","--cfg","feature=\"httparse\"","--cfg","feature=\"quick-error\"","--cfg","feature=\"safemem\"","--cfg","feature=\"server\"","--cfg","feature=\"twoway\"","-C","metadata=f19e07e43c8bce19","-C","extra-filename=-f19e07e43c8bce19","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--extern","buf_redux=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libbuf_redux-cac3db24aa0526bf.rmeta","--extern","httparse=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libhttparse-ca3b6391a76b35eb.rmeta","--extern","log=/Users/niharika/Downloads/webapp/target/rls/debug/deps/liblog-c7000d2d14d5ad2d.rmeta","--extern","mime=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmime-4bcd907d27faa33b.rmeta","--extern","mime_guess=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmime_guess-b75ff8108e04106c.rmeta","--extern","quick_error=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libquick_error-6498e701c0525987.rmeta","--extern","rand=/Users/niharika/Downloads/webapp/target/rls/debug/deps/librand-55d1e61bdeb8256c.rmeta","--extern","safemem=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libsafemem-05afe1e67ecdf7ae.rmeta","--extern","tempdir=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtempdir-12a34af78faef3bd.rmeta","--extern","twoway=/Users/niharika/Downloads/webapp/target/rls/debug/deps/libtwoway-19dcf401ea11aeb4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libmultipart-f19e07e43c8bce19.rmeta"},"prelude":{"crate_id":{"name":"multipart","disambiguator":[142602255080917473,11527933970332747308]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":15,"id":{"name":"log","disambiguator":[4182403544997039219,3902972590327265701]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[11229901903850725548,355329447717717977]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":17,"id":{"name":"mime","disambiguator":[9428476456840635348,252029802438455508]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":18,"id":{"name":"log","disambiguator":[14896893500616131323,7160311259850525268]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":19,"id":{"name":"mime_guess","disambiguator":[7092363709981696177,16127837089669869573]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":20,"id":{"name":"phf","disambiguator":[16157394961988888779,12254035875982817605]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":21,"id":{"name":"phf_shared","disambiguator":[5539017563744219326,4384428055495456311]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":22,"id":{"name":"siphasher","disambiguator":[13244180610795657715,1517184657197814650]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":23,"id":{"name":"unicase","disambiguator":[8220914980775285962,14943316591771972626]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":24,"id":{"name":"rand","disambiguator":[401229892863399027,11615991344118427746]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[12029950799728344980,14625873231468315695]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":26,"id":{"name":"tempdir","disambiguator":[16014864400651558636,4388245583694098577]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":27,"id":{"name":"remove_dir_all","disambiguator":[6262462615558667739,6291728195263297403]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":28,"id":{"name":"quick_error","disambiguator":[2741943052307312893,4980094121673606774]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","num":29,"id":{"name":"safemem","disambiguator":[456100582191563404,1235882266400426106]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","num":30,"id":{"name":"buf_redux","disambiguator":[6751178577212372387,11149667933638291427]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","num":31,"id":{"name":"memchr","disambiguator":[251563329699221058,3480720099078396615]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","num":32,"id":{"name":"httparse","disambiguator":[1072596477946577553,5637016322384974722]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","num":33,"id":{"name":"twoway","disambiguator":[16527566382071759367,14261494804641068354]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":344,"byte_end":3940,"line_start":7,"line_end":128,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":447},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4830,"byte_end":4842,"line_start":27,"line_end":27,"column_start":23,"column_end":35},"alias_span":null,"name":"FieldHeaders","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4844,"byte_end":4858,"line_start":27,"line_end":27,"column_start":37,"column_end":51},"alias_span":null,"name":"MultipartField","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4860,"byte_end":4873,"line_start":27,"line_end":27,"column_start":53,"column_end":66},"alias_span":null,"name":"MultipartData","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4875,"byte_end":4884,"line_start":27,"line_end":27,"column_start":68,"column_end":77},"alias_span":null,"name":"ReadEntry","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4886,"byte_end":4901,"line_start":27,"line_end":27,"column_start":79,"column_end":94},"alias_span":null,"name":"ReadEntryResult","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":540},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4956,"byte_end":4963,"line_start":31,"line_end":31,"column_start":22,"column_end":29},"alias_span":null,"name":"Entries","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4965,"byte_end":4975,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"alias_span":null,"name":"SaveResult","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4977,"byte_end":4987,"line_start":31,"line_end":31,"column_start":43,"column_end":53},"alias_span":null,"name":"SavedField","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":30,"index":95},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":51863,"byte_end":51872,"line_start":9,"line_end":9,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":200}},{"kind":"Use","ref_id":{"krate":26,"index":20},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":51892,"byte_end":51899,"line_start":11,"line_end":11,"column_start":18,"column_end":25},"alias_span":null,"name":"TempDir","value":"","parent":{"krate":0,"index":200}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":344,"byte_end":3940,"line_start":7,"line_end":128,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":410}],"decl_id":null,"docs":" Client- and server-side abstractions for HTTP `multipart/form-data` requests.","sig":null,"attributes":[{"value":"! Client- and server-side abstractions for HTTP `multipart/form-data` requests.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":344,"byte_end":425,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":426,"byte_end":429,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ### Features:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":430,"byte_end":447,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"! This documentation is built with all features enabled.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":448,"byte_end":506,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":507,"byte_end":510,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! * `client`: The client-side abstractions for generating multipart requests.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":511,"byte_end":590,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":591,"byte_end":594,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * `server`: The server-side abstractions for parsing multipart requests.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":595,"byte_end":671,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":672,"byte_end":675,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! * `mock`: Provides mock implementations of core `client` and `server` traits for debugging","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":676,"byte_end":770,"line_start":16,"line_end":16,"column_start":1,"column_end":95}},{"value":"! or non-standard use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":771,"byte_end":795,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":796,"byte_end":799,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! * `hyper`: Integration with the [Hyper](https://crates.io/crates/hyper) HTTP library","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":800,"byte_end":888,"line_start":19,"line_end":19,"column_start":1,"column_end":89}},{"value":"! for client and/or server depending on which other feature flags are set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":889,"byte_end":965,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":966,"byte_end":969,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! * `iron`: Integration with the [Iron](http://crates.io/crates/iron) web application","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":970,"byte_end":1057,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"! framework. See the [`server::iron`](server/iron/index.html) module for more information.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1058,"byte_end":1150,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! * `nickel` (returning in 0.14!): Integration with the [Nickel](https://crates.io/crates/nickel)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1155,"byte_end":1254,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"! web application framework. See the [`server::nickel`](server/nickel/index.html) module for more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1255,"byte_end":1354,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"! information.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1355,"byte_end":1371,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1372,"byte_end":1375,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! * `tiny_http`: Integration with the [`tiny_http`](https://crates.io/crates/tiny_http)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1376,"byte_end":1465,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"! crate. See the [`server::tiny_http`](server/tiny_http/index.html) module for more information.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1466,"byte_end":1564,"line_start":30,"line_end":30,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1565,"byte_end":1568,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! ### Note: Work in Progress","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1569,"byte_end":1599,"line_start":32,"line_end":32,"column_start":1,"column_end":31}},{"value":"! I have left a number of Request-for-Comments (RFC) questions on various APIs and other places","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1600,"byte_end":1697,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! in the code as there are some cases where I'm not sure what the desirable behavior is.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1698,"byte_end":1788,"line_start":34,"line_end":34,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! I have opened an issue as a place to collect responses and discussions for these questions","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1793,"byte_end":1887,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"! [on Github](https://github.com/abonander/multipart/issues/96). Please quote the RFC-statement","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1888,"byte_end":1985,"line_start":37,"line_end":37,"column_start":1,"column_end":98}},{"value":"! (and/or link to its source line) and provide your feedback there.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":1986,"byte_end":2055,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":2243,"byte_end":2265,"line_start":43,"line_end":43,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":65},{"krate":0,"index":200},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":406}],"decl_id":null,"docs":" The server-side abstraction for multipart requests. Enabled with the `server` feature.","sig":null,"attributes":[{"value":"cfg(feature = \"server\")","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":3644,"byte_end":3670,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"! The server-side abstraction for multipart requests. Enabled with the `server` feature.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4285,"byte_end":4375,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4376,"byte_end":4379,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Use this when you are implementing an HTTP server and want to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4380,"byte_end":4445,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"! to accept, parse, and serve HTTP `multipart/form-data` requests (file uploads).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4446,"byte_end":4529,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4530,"byte_end":4533,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! See the `Multipart` struct for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4534,"byte_end":4579,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5297,"byte_end":5303,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"ArcStr","qualname":"::server::ArcStr","value":"Arc<String>","parent":null,"children":[],"decl_id":null,"docs":" Default typedef for shared strings.","sig":null,"attributes":[{"value":"/ Default typedef for shared strings.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":4991,"byte_end":5030,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5031,"byte_end":5034,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Enable the `use_arc_str` feature to use `Arc<str>` instead, which saves an indirection but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5035,"byte_end":5129,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ cannot be constructed in Rust versions older than 1.21 (the `From<String>` impl was stabilized","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5130,"byte_end":5228,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ in that release).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5229,"byte_end":5250,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"cfg(not (feature = \"use_arc_str\"))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":5251,"byte_end":5287,"line_start":38,"line_end":38,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14689,"byte_end":14703,"line_start":35,"line_end":35,"column_start":12,"column_end":26},"name":"BoundaryReader","qualname":"::server::boundary::BoundaryReader","value":"BoundaryReader {  }","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" A struct implementing `Read` and `BufRead` that will yield bytes until it sees a given sequence.\n","sig":null,"attributes":[{"value":"/ A struct implementing `Read` and `BufRead` that will yield bytes until it sees a given sequence.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14560,"byte_end":14660,"line_start":33,"line_end":33,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14889,"byte_end":14900,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<BoundaryReader<R>>::from_reader","value":"fn <B> (reader: R, boundary: B) -> BoundaryReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Internal API\n","sig":null,"attributes":[{"value":"/ Internal API","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14861,"byte_end":14877,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":17107,"byte_end":17123,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"set_min_buf_size","qualname":"<BoundaryReader<R>>::set_min_buf_size","value":"fn (&mut self, min_buf_size: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":17397,"byte_end":17413,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"consume_boundary","qualname":"<BoundaryReader<R>>::consume_boundary","value":"fn (&mut self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":447},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34926,"byte_end":34938,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"FieldHeaders","qualname":"::server::field::FieldHeaders","value":"FieldHeaders { name, filename, content_type }","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"decl_id":null,"docs":" The headers that (may) appear before a `multipart/form-data` field.","sig":null,"attributes":[{"value":"/ The headers that (may) appear before a `multipart/form-data` field.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34596,"byte_end":34667,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34668,"byte_end":34671,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ### Warning: Values are Client-Provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34672,"byte_end":34715,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ Everything in this struct are values from the client and should be considered **untrustworthy**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34716,"byte_end":34816,"line_start":112,"line_end":112,"column_start":1,"column_end":101}},{"value":"/ This crate makes no effort to validate or sanitize any client inputs.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34817,"byte_end":34890,"line_start":113,"line_end":113,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":448},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34989,"byte_end":34993,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"name","qualname":"::server::field::FieldHeaders::name","value":"std::sync::Arc<std::string::String>","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" The field's name from the form.\n","sig":null,"attributes":[{"value":"/ The field's name from the form.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":34945,"byte_end":34980,"line_start":116,"line_end":116,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35176,"byte_end":35184,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"filename","qualname":"::server::field::FieldHeaders::filename","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" The filename of this entry, if supplied. This is not guaranteed to match the original file\n or even to be a valid filename for the current platform.\n","sig":null,"attributes":[{"value":"/ The filename of this entry, if supplied. This is not guaranteed to match the original file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35008,"byte_end":35102,"line_start":119,"line_end":119,"column_start":5,"column_end":99}},{"value":"/ or even to be a valid filename for the current platform.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35107,"byte_end":35167,"line_start":120,"line_end":120,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":450},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35647,"byte_end":35659,"line_start":129,"line_end":129,"column_start":9,"column_end":21},"name":"content_type","qualname":"::server::field::FieldHeaders::content_type","value":"std::option::Option<mime::Mime>","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" The MIME type (`Content-Type` value) of this file, if supplied by the client.","sig":null,"attributes":[{"value":"/ The MIME type (`Content-Type` value) of this file, if supplied by the client.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35207,"byte_end":35288,"line_start":123,"line_end":123,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35293,"byte_end":35296,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ If this is not supplied, the content-type of the field should default to `text/plain` as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35301,"byte_end":35393,"line_start":125,"line_end":125,"column_start":5,"column_end":97}},{"value":"/ per [IETF RFC 7578, section 4.4](https://tools.ietf.org/html/rfc7578#section-4.4), but this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35398,"byte_end":35493,"line_start":126,"line_end":126,"column_start":5,"column_end":100}},{"value":"/ should not be implicitly trusted. This crate makes no attempt to identify or validate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35498,"byte_end":35587,"line_start":127,"line_end":127,"column_start":5,"column_end":94}},{"value":"/ the content-type of the actual field data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35592,"byte_end":35638,"line_start":128,"line_end":128,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":455},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":38812,"byte_end":38826,"line_start":211,"line_end":211,"column_start":12,"column_end":26},"name":"MultipartField","qualname":"::server::field::MultipartField","value":"MultipartField { headers, data }","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"decl_id":null,"docs":" A field in a multipart request with its associated headers and data.\n","sig":null,"attributes":[{"value":"/ A field in a multipart request with its associated headers and data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":38711,"byte_end":38783,"line_start":209,"line_end":209,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":457},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39187,"byte_end":39194,"line_start":217,"line_end":217,"column_start":9,"column_end":16},"name":"headers","qualname":"::server::field::MultipartField::headers","value":"server::field::FieldHeaders","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" The headers for this field, including the name, filename, and content-type, if provided.","sig":null,"attributes":[{"value":"/ The headers for this field, including the name, filename, and content-type, if provided.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":38847,"byte_end":38939,"line_start":212,"line_end":212,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":38944,"byte_end":38947,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Values are Client-Provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":38952,"byte_end":38995,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"/ Everything in this struct are values from the client and should be considered **untrustworthy**.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39000,"byte_end":39100,"line_start":215,"line_end":215,"column_start":5,"column_end":105}},{"value":"/ This crate makes no effort to validate or sanitize any client inputs.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39105,"byte_end":39178,"line_start":216,"line_end":216,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":458},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39245,"byte_end":39249,"line_start":220,"line_end":220,"column_start":9,"column_end":13},"name":"data","qualname":"::server::field::MultipartField::data","value":"server::field::MultipartData<M>","parent":{"krate":0,"index":455},"children":[],"decl_id":null,"docs":" The field's data.\n","sig":null,"attributes":[{"value":"/ The field's data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39215,"byte_end":39236,"line_start":219,"line_end":219,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39889,"byte_end":39896,"line_start":233,"line_end":233,"column_start":12,"column_end":19},"name":"is_text","qualname":"<MultipartField<M>>::is_text","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this field has no content-type or the content-type is `text/...`.","sig":null,"attributes":[{"value":"/ Returns `true` if this field has no content-type or the content-type is `text/...`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39315,"byte_end":39402,"line_start":224,"line_end":224,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39407,"byte_end":39410,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This typically means it can be read to a string, but it could still be using an unsupported","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39415,"byte_end":39510,"line_start":226,"line_end":226,"column_start":5,"column_end":100}},{"value":"/ character encoding, so decoding to `String` needs to ensure that the data is valid UTF-8.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39515,"byte_end":39608,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39613,"byte_end":39616,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note also that the field contents may be too large to reasonably fit in memory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39621,"byte_end":39704,"line_start":229,"line_end":229,"column_start":5,"column_end":88}},{"value":"/ The `.save()` adapter can be used to enforce a size limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39709,"byte_end":39771,"line_start":230,"line_end":230,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39776,"byte_end":39779,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Detecting character encodings by any means is (currently) beyond the scope of this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39784,"byte_end":39877,"line_start":232,"line_end":232,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40061,"byte_end":40071,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"next_entry","qualname":"<MultipartField<M>>::next_entry","value":"fn (self) -> ReadEntryResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry in the request.\n","sig":null,"attributes":[{"value":"/ Read the next entry in the request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40010,"byte_end":40049,"line_start":237,"line_end":237,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40368,"byte_end":40386,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"next_entry_inplace","qualname":"<MultipartField<M>>::next_entry_inplace","value":"fn (&mut self) -> io::Result<Option<&mut Self>>","parent":null,"children":[],"decl_id":null,"docs":" Update `self` as the next entry.","sig":null,"attributes":[{"value":"/ Update `self` as the next entry.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40157,"byte_end":40193,"line_start":242,"line_end":242,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40198,"byte_end":40201,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(Some(self))` if another entry was read, `Ok(None)` if the end of the body was","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40206,"byte_end":40299,"line_start":244,"line_end":244,"column_start":5,"column_end":98}},{"value":"/ reached, and `Err(e)` for any errors that occur.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40304,"byte_end":40356,"line_start":245,"line_end":245,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41105,"byte_end":41118,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"MultipartData","qualname":"::server::field::MultipartData","value":"MultipartData {  }","parent":null,"children":[{"krate":0,"index":464}],"decl_id":null,"docs":" The data of a field in a `multipart/form-data` request.","sig":null,"attributes":[{"value":"/ The data of a field in a `multipart/form-data` request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40930,"byte_end":40989,"line_start":266,"line_end":266,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40990,"byte_end":40993,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/ You can read it to EOF, or use the `save()` adaptor to save it to disk/memory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":40994,"byte_end":41076,"line_start":268,"line_end":268,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41703,"byte_end":41707,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"save","qualname":"<MultipartData<M>>::save","value":"fn (&mut self) -> SaveBuilder<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a builder type which can save the field with or without a size limit.\n","sig":null,"attributes":[{"value":"/ Get a builder type which can save the field with or without a size limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41614,"byte_end":41691,"line_start":281,"line_end":281,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41851,"byte_end":41861,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<MultipartData<M>>::into_inner","value":"fn (self) -> M","parent":null,"children":[],"decl_id":null,"docs":" Take the inner `Multipart` or `&mut Multipart`\n","sig":null,"attributes":[{"value":"/ Take the inner `Multipart` or `&mut Multipart`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41789,"byte_end":41839,"line_start":286,"line_end":286,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42267,"byte_end":42283,"line_start":297,"line_end":297,"column_start":12,"column_end":28},"name":"set_min_buf_size","qualname":"<MultipartData<M>>::set_min_buf_size","value":"fn (&mut self, min_buf_size: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum buffer size that `BufRead::fill_buf(self)` will return\n until the end of the stream is reached. Set this as small as you can tolerate\n to minimize `read()` calls (`read()` won't be called again until the buffer\n is smaller than this).","sig":null,"attributes":[{"value":"/ Set the minimum buffer size that `BufRead::fill_buf(self)` will return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41928,"byte_end":42002,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/ until the end of the stream is reached. Set this as small as you can tolerate","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42007,"byte_end":42088,"line_start":292,"line_end":292,"column_start":5,"column_end":86}},{"value":"/ to minimize `read()` calls (`read()` won't be called again until the buffer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42093,"byte_end":42172,"line_start":293,"line_end":293,"column_start":5,"column_end":84}},{"value":"/ is smaller than this).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42177,"byte_end":42203,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42208,"byte_end":42211,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This value is reset between fields.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42216,"byte_end":42255,"line_start":296,"line_end":296,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44382,"byte_end":44391,"line_start":360,"line_end":360,"column_start":11,"column_end":20},"name":"ReadEntry","qualname":"::server::field::ReadEntry","value":"ReadEntry: PrivReadEntry + Sized","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" Common trait for `Multipart` and `&mut Multipart`\n","sig":null,"attributes":[{"value":"/ Common trait for `Multipart` and `&mut Multipart`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44318,"byte_end":44371,"line_start":359,"line_end":359,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44488,"byte_end":44498,"line_start":362,"line_end":362,"column_start":8,"column_end":18},"name":"read_entry","qualname":"::server::field::ReadEntry::read_entry","value":"fn (mut self) -> ReadEntryResult<Self>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Attempt to read the next entry in the multipart stream.\n","sig":null,"attributes":[{"value":"/ Attempt to read the next entry in the multipart stream.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44421,"byte_end":44480,"line_start":361,"line_end":361,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45738,"byte_end":45752,"line_start":396,"line_end":396,"column_start":8,"column_end":22},"name":"read_entry_mut","qualname":"::server::field::ReadEntry::read_entry_mut","value":"fn (&mut self) -> ReadEntryResult<&mut Self>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Equivalent to `read_entry()` but takes `&mut self`\n","sig":null,"attributes":[{"value":"/ Equivalent to `read_entry()` but takes `&mut self`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45676,"byte_end":45730,"line_start":395,"line_end":395,"column_start":5,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":162},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45940,"byte_end":45953,"line_start":404,"line_end":404,"column_start":11,"column_end":24},"name":"PrivReadEntry","qualname":"::server::field::PrivReadEntry","value":"PrivReadEntry","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169}],"decl_id":null,"docs":" Public trait but not re-exported.\n","sig":null,"attributes":[{"value":"/ Public trait but not re-exported.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45892,"byte_end":45929,"line_start":403,"line_end":403,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":163},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45965,"byte_end":45971,"line_start":405,"line_end":405,"column_start":10,"column_end":16},"name":"Source","qualname":"::server::field::PrivReadEntry::Source","value":"type Source: BufRead;","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45990,"byte_end":46000,"line_start":407,"line_end":407,"column_start":8,"column_end":18},"name":"source_mut","qualname":"::server::field::PrivReadEntry::source_mut","value":"fn (&mut self) -> &mut Self::Source","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46042,"byte_end":46058,"line_start":409,"line_end":409,"column_start":8,"column_end":24},"name":"set_min_buf_size","qualname":"::server::field::PrivReadEntry::set_min_buf_size","value":"fn (&mut self, min_buf_size: usize) -> ()","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46203,"byte_end":46219,"line_start":413,"line_end":413,"column_start":8,"column_end":24},"name":"consume_boundary","qualname":"::server::field::PrivReadEntry::consume_boundary","value":"fn (&mut self) -> io::Result<bool>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":" Consume the next boundary.\n Returns `true` if a field should follow, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Consume the next boundary.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46097,"byte_end":46127,"line_start":411,"line_end":411,"column_start":5,"column_end":35}},{"value":"/ Returns `true` if a field should follow, `false` otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46132,"byte_end":46195,"line_start":412,"line_end":412,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46260,"byte_end":46272,"line_start":415,"line_end":415,"column_start":8,"column_end":20},"name":"read_headers","qualname":"::server::field::PrivReadEntry::read_headers","value":"fn (&mut self) -> Result<FieldHeaders, io::Error>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":46458,"byte_end":46472,"line_start":420,"line_end":420,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::server::field::PrivReadEntry::read_to_string","value":"fn (&mut self) -> io::Result<String>","parent":{"krate":0,"index":162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":180},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47307,"byte_end":47312,"line_start":450,"line_end":450,"column_start":5,"column_end":10},"name":"Entry","qualname":"::server::field::ReadEntryResult::Entry","value":"ReadEntryResult::Entry(Entry)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" The next entry was found.\n","sig":null,"attributes":[{"value":"/ The next entry was found.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47273,"byte_end":47302,"line_start":449,"line_end":449,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":183},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47365,"byte_end":47368,"line_start":452,"line_end":452,"column_start":5,"column_end":8},"name":"End","qualname":"::server::field::ReadEntryResult::End","value":"ReadEntryResult::End(M)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" No  more entries could be read.\n","sig":null,"attributes":[{"value":"/ No  more entries could be read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47325,"byte_end":47360,"line_start":451,"line_end":451,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47404,"byte_end":47409,"line_start":454,"line_end":454,"column_start":5,"column_end":10},"name":"Error","qualname":"::server::field::ReadEntryResult::Error","value":"ReadEntryResult::Error(M, io::Error)","parent":{"krate":0,"index":177},"children":[],"decl_id":null,"docs":" An error occurred.\n","sig":null,"attributes":[{"value":"/ An error occurred.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47377,"byte_end":47399,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":177},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47210,"byte_end":47225,"line_start":448,"line_end":448,"column_start":10,"column_end":25},"name":"ReadEntryResult","qualname":"::server::field::ReadEntryResult","value":"ReadEntryResult::{Entry, End, Error}","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186}],"decl_id":null,"docs":" Ternary result type returned by `ReadEntry::next_entry()`,\n `Multipart::into_entry()` and `MultipartField::next_entry()`.\n","sig":null,"attributes":[{"value":"/ Ternary result type returned by `ReadEntry::next_entry()`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47072,"byte_end":47134,"line_start":446,"line_end":446,"column_start":1,"column_end":63}},{"value":"/ `Multipart::into_entry()` and `MultipartField::next_entry()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47135,"byte_end":47200,"line_start":447,"line_end":447,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47678,"byte_end":47689,"line_start":463,"line_end":463,"column_start":12,"column_end":23},"name":"into_result","qualname":"<ReadEntryResult<M, Entry>>::into_result","value":"fn (self) -> io::Result<Option<Entry>>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` into `Result<Option<Entry>>` as follows:","sig":null,"attributes":[{"value":"/ Convert `self` into `Result<Option<Entry>>` as follows:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47486,"byte_end":47545,"line_start":458,"line_end":458,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47550,"byte_end":47553,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ * `Entry(entry) -> Ok(Some(entry))`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47558,"byte_end":47597,"line_start":460,"line_end":460,"column_start":5,"column_end":44}},{"value":"/ * `End(_) -> Ok(None)`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47602,"byte_end":47628,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/ * `Error(_, err) -> Err(err)`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47633,"byte_end":47666,"line_start":462,"line_end":462,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48017,"byte_end":48023,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ReadEntryResult<M, Entry>>::unwrap","value":"fn (self) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47936,"byte_end":48005,"line_start":471,"line_end":471,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48372,"byte_end":48378,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"expect","qualname":"<ReadEntryResult<M, Entry>>::expect","value":"fn (self, msg: &str) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`\n with the given message. Adds the error's message in the `Error` case.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48214,"byte_end":48282,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/ with the given message. Adds the error's message in the `Error` case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48287,"byte_end":48360,"line_start":478,"line_end":478,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48656,"byte_end":48666,"line_start":486,"line_end":486,"column_start":12,"column_end":22},"name":"expect_alt","qualname":"<ReadEntryResult<M, Entry>>::expect_alt","value":"fn (self, end_msg: &str, err_msg: &str) -> Entry","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.\n If this is `End`, panics with `end_msg`; if `Error`, panics with `err_msg`\n as well as the error's message.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap `Entry`, panicking if this is `End` or `Error`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48452,"byte_end":48521,"line_start":483,"line_end":483,"column_start":5,"column_end":74}},{"value":"/ If this is `End`, panics with `end_msg`; if `Error`, panics with `err_msg`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48526,"byte_end":48604,"line_start":484,"line_end":484,"column_start":5,"column_end":83}},{"value":"/ as well as the error's message.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48609,"byte_end":48644,"line_start":485,"line_end":485,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48983,"byte_end":48993,"line_start":495,"line_end":495,"column_start":12,"column_end":22},"name":"unwrap_opt","qualname":"<ReadEntryResult<M, Entry>>::unwrap_opt","value":"fn (self) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":48899,"byte_end":48971,"line_start":494,"line_end":494,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":49259,"byte_end":49269,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"expect_opt","qualname":"<ReadEntryResult<M, Entry>>::expect_opt","value":"fn (self, msg: &str) -> Option<Entry>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case\n with the given message as well as the error's message.\n","sig":null,"attributes":[{"value":"/ Attempt to unwrap as `Option<Entry>`, panicking in the `Error` case","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":49113,"byte_end":49184,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ with the given message as well as the error's message.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":49189,"byte_end":49247,"line_start":500,"line_end":500,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":200},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"save","qualname":"::server::save","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":220},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":503},{"krate":0,"index":519},{"krate":0,"index":518},{"krate":0,"index":516},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":235},{"krate":0,"index":243},{"krate":0,"index":254},{"krate":0,"index":265},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":538},{"krate":0,"index":287},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":540},{"krate":0,"index":544},{"krate":0,"index":318},{"krate":0,"index":546},{"krate":0,"index":553},{"krate":0,"index":328},{"krate":0,"index":339},{"krate":0,"index":555},{"krate":0,"index":566},{"krate":0,"index":341},{"krate":0,"index":343},{"krate":0,"index":345},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":579},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":582},{"krate":0,"index":595},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":379}],"decl_id":null,"docs":" Utilities for saving request entries to the filesystem.\n","sig":null,"attributes":[{"value":"! Utilities for saving request entries to the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":51775,"byte_end":51834,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56848,"byte_end":56859,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"SaveBuilder","qualname":"::server::save::SaveBuilder","value":"SaveBuilder {  }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" A builder for saving a file or files to the local filesystem.","sig":null,"attributes":[{"value":"/ A builder for saving a file or files to the local filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53212,"byte_end":53277,"line_start":70,"line_end":70,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53278,"byte_end":53281,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ### `OpenOptions`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53282,"byte_end":53303,"line_start":72,"line_end":72,"column_start":1,"column_end":22}},{"value":"/ This builder holds an instance of `std::fs::OpenOptions` which is used","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53304,"byte_end":53378,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ when creating the new file(s).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53379,"byte_end":53413,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53414,"byte_end":53417,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ By default, the open options are set with `.write(true).create_new(true)`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53418,"byte_end":53496,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ so if the file already exists then an error will be thrown. This is to avoid accidentally","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53497,"byte_end":53590,"line_start":77,"line_end":77,"column_start":1,"column_end":94}},{"value":"/ overwriting files from other requests.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53591,"byte_end":53633,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53634,"byte_end":53637,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ If you want to modify the options used to open the save file, you can use","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53638,"byte_end":53715,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"/ `mod_open_opts()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53716,"byte_end":53738,"line_start":81,"line_end":81,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53739,"byte_end":53742,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ### File Size and Count Limits","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53743,"byte_end":53777,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/ You can set a size limit for individual fields with `size_limit()`, which takes either `u64`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53778,"byte_end":53874,"line_start":84,"line_end":84,"column_start":1,"column_end":97}},{"value":"/ or `Option<u64>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53875,"byte_end":53896,"line_start":85,"line_end":85,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53897,"byte_end":53900,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ You can also set the maximum number of fields to process with `count_limit()`, which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53901,"byte_end":53989,"line_start":87,"line_end":87,"column_start":1,"column_end":89}},{"value":"/ takes either `u32` or `Option<u32>`. This only has an effect when using","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":53990,"byte_end":54065,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ `SaveBuilder<[&mut] Multipart>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54066,"byte_end":54102,"line_start":89,"line_end":89,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54103,"byte_end":54106,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ By default, these limits are set conservatively to limit the maximum memory and disk space","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54107,"byte_end":54201,"line_start":91,"line_end":91,"column_start":1,"column_end":95}},{"value":"/ usage of a single request. You should set `count_limit` specifically for each request endpoint","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54202,"byte_end":54300,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/ based on the number of fields you're expecting (exactly to that number if you're not expecting","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54301,"byte_end":54399,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/ duplicate fields).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54400,"byte_end":54422,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54423,"byte_end":54426,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ### Memory Threshold and Text Policy","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54427,"byte_end":54467,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/ By default, small fields (a few kilobytes or smaller) will be read directly to memory","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54468,"byte_end":54557,"line_start":97,"line_end":97,"column_start":1,"column_end":90}},{"value":"/ without creating a file. This behavior is controlled by the `memory_threshold()` setter. You can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54558,"byte_end":54658,"line_start":98,"line_end":98,"column_start":1,"column_end":101}},{"value":"/ *roughly* tune the maximum memory a single request uses by tuning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54659,"byte_end":54728,"line_start":99,"line_end":99,"column_start":1,"column_end":70}},{"value":"/ `count_limit * memory_threshold`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54729,"byte_end":54765,"line_start":100,"line_end":100,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54766,"byte_end":54769,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ If a field appears to contain text data (its content-type is `text/*` or it doesn't declare","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54770,"byte_end":54865,"line_start":102,"line_end":102,"column_start":1,"column_end":96}},{"value":"/ one), `SaveBuilder` can read it to a string instead of saving the raw bytes as long as it falls","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54866,"byte_end":54965,"line_start":103,"line_end":103,"column_start":1,"column_end":100}},{"value":"/ below the set `memory_threshold`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":54966,"byte_end":55003,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55004,"byte_end":55007,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ By default, the behavior is to attempt to validate the data as UTF-8, falling back to saving","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55008,"byte_end":55104,"line_start":106,"line_end":106,"column_start":1,"column_end":97}},{"value":"/ just the bytes if the validation fails at any point. You can restore/ensure this behavior","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55105,"byte_end":55198,"line_start":107,"line_end":107,"column_start":1,"column_end":94}},{"value":"/ with the `try_text()` modifier.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55199,"byte_end":55234,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55235,"byte_end":55238,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can use the `force_text()` modifier to make the save operation return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55239,"byte_end":55331,"line_start":110,"line_end":110,"column_start":1,"column_end":93}},{"value":"/ an error when UTF-8 decoding fails, though this only holds true while the size is below","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55332,"byte_end":55423,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"/ `memory_threshold`. The `ignore_text()` modifier turns off UTF-8 validation altogether.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55424,"byte_end":55515,"line_start":112,"line_end":112,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55516,"byte_end":55519,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ UTF-8 validation is performed incrementally (after every `BufRead::fill_buf()` call)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55520,"byte_end":55608,"line_start":114,"line_end":114,"column_start":1,"column_end":89}},{"value":"/ to hopefully maximize throughput, instead of blocking while the field is read to completion","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55609,"byte_end":55704,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/ and performing validation over the entire result at the end. (RFC: this could be a lot of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55705,"byte_end":55798,"line_start":116,"line_end":116,"column_start":1,"column_end":94}},{"value":"/ unnecessary work if most fields end up being written to the filesystem, however, but this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55799,"byte_end":55892,"line_start":117,"line_end":117,"column_start":1,"column_end":94}},{"value":"/ can be turned off with `ignore_text()` if it fits the use-case.)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55893,"byte_end":55961,"line_start":118,"line_end":118,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55962,"byte_end":55965,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ### Warning: Do **not** trust user input!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":55966,"byte_end":56011,"line_start":120,"line_end":120,"column_start":1,"column_end":46}},{"value":"/ It is a serious security risk to create files or directories with paths based on user input.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56012,"byte_end":56108,"line_start":121,"line_end":121,"column_start":1,"column_end":97}},{"value":"/ A malicious user could craft a path which can be used to overwrite important files, such as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56109,"byte_end":56204,"line_start":122,"line_end":122,"column_start":1,"column_end":96}},{"value":"/ web templates, static assets, Javascript files, database files, configuration files, etc.,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56205,"byte_end":56299,"line_start":123,"line_end":123,"column_start":1,"column_end":95}},{"value":"/ if they are writable by the server process.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56300,"byte_end":56347,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56348,"byte_end":56351,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This can be mitigated somewhat by setting filesystem permissions as","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56352,"byte_end":56423,"line_start":126,"line_end":126,"column_start":1,"column_end":72}},{"value":"/ conservatively as possible and running the server under its own user with restricted","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56424,"byte_end":56512,"line_start":127,"line_end":127,"column_start":1,"column_end":89}},{"value":"/ permissions, but you should still not use user input directly as filesystem paths.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56513,"byte_end":56599,"line_start":128,"line_end":128,"column_start":1,"column_end":87}},{"value":"/ If it is truly necessary, you should sanitize user input such that it cannot cause a path to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56600,"byte_end":56699,"line_start":129,"line_end":129,"column_start":1,"column_end":100}},{"value":"/ misinterpreted by the OS. Such functionality is outside the scope of this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56700,"byte_end":56784,"line_start":130,"line_end":130,"column_start":1,"column_end":85}},{"value":"must_use = \"nothing saved to the filesystem yet\"","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":56785,"byte_end":56836,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57204,"byte_end":57207,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<SaveBuilder<S>>::new","value":"fn (savable: S) -> SaveBuilder<S>","parent":null,"children":[],"decl_id":null,"docs":" Implementation detail but not problematic to have accessible.\n","sig":null,"attributes":[{"value":"/ Implementation detail but not problematic to have accessible.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57108,"byte_end":57173,"line_start":143,"line_end":143,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58055,"byte_end":58065,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<SaveBuilder<S>>::size_limit","value":"fn <L> (mut self, limit: L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of bytes to write out *per file*.","sig":null,"attributes":[{"value":"/ Set the maximum number of bytes to write out *per file*.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57893,"byte_end":57953,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57958,"byte_end":57961,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Can be `u64` or `Option<u64>`. If `None` or `u64::MAX`, clears the limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57966,"byte_end":58043,"line_start":165,"line_end":165,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58415,"byte_end":58428,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"mod_open_opts","qualname":"<SaveBuilder<S>>::mod_open_opts","value":"fn <F> (mut self, opts_fn: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modify the `OpenOptions` used to open any files for writing.","sig":null,"attributes":[{"value":"/ Modify the `OpenOptions` used to open any files for writing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58202,"byte_end":58266,"line_start":171,"line_end":171,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58271,"byte_end":58274,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The `write` flag will be reset to `true` after the closure returns. (It'd be pretty","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58279,"byte_end":58366,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ pointless otherwise, right?)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58371,"byte_end":58403,"line_start":174,"line_end":174,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58853,"byte_end":58869,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"memory_threshold","qualname":"<SaveBuilder<S>>::memory_threshold","value":"fn (self, memory_threshold: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the threshold at which to switch from copying a field into memory to copying\n it to disk.","sig":null,"attributes":[{"value":"/ Set the threshold at which to switch from copying a field into memory to copying","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58588,"byte_end":58672,"line_start":181,"line_end":181,"column_start":5,"column_end":89}},{"value":"/ it to disk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58677,"byte_end":58692,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58697,"byte_end":58700,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If `0`, forces fields to save directly to the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58705,"byte_end":58766,"line_start":184,"line_end":184,"column_start":5,"column_end":66}},{"value":"/ If `u64::MAX`, effectively forces fields to always save to memory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58771,"byte_end":58841,"line_start":185,"line_end":185,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59341,"byte_end":59349,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"try_text","qualname":"<SaveBuilder<S>>::try_text","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When encountering a field that is apparently text, try to read it to a string or fall\n back to binary otherwise.","sig":null,"attributes":[{"value":"/ When encountering a field that is apparently text, try to read it to a string or fall","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":58962,"byte_end":59051,"line_start":190,"line_end":190,"column_start":5,"column_end":94}},{"value":"/ back to binary otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59056,"byte_end":59085,"line_start":191,"line_end":191,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59090,"byte_end":59093,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ If set for an individual field (`SaveBuilder<&mut MultipartData<_>>`), will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59098,"byte_end":59177,"line_start":193,"line_end":193,"column_start":5,"column_end":84}},{"value":"/ always attempt to decode text regardless of the field's `Content-Type`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59182,"byte_end":59257,"line_start":194,"line_end":194,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59262,"byte_end":59265,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Has no effect once `memory_threshold` has been reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59270,"byte_end":59329,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59803,"byte_end":59813,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"force_text","qualname":"<SaveBuilder<S>>::force_text","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When encountering a field that is apparently text, read it to a string or return an error.","sig":null,"attributes":[{"value":"/ When encountering a field that is apparently text, read it to a string or return an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59431,"byte_end":59525,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59530,"byte_end":59533,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ If set for an individual field (`SaveBuilder<&mut MultipartData<_>>`), will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59538,"byte_end":59617,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/ always attempt to decode text regardless of the field's `Content-Type`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59622,"byte_end":59697,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59702,"byte_end":59705,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ (RFC: should this continue to validate UTF-8 when writing to the filesystem?)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59710,"byte_end":59791,"line_start":206,"line_end":206,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59966,"byte_end":59977,"line_start":212,"line_end":212,"column_start":12,"column_end":23},"name":"ignore_text","qualname":"<SaveBuilder<S>>::ignore_text","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Don't try to read or validate any field data as UTF-8.\n","sig":null,"attributes":[{"value":"/ Don't try to read or validate any field data as UTF-8.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":59896,"byte_end":59954,"line_start":211,"line_end":211,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60301,"byte_end":60312,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"count_limit","qualname":"<SaveBuilder<M>>::count_limit","value":"fn <L> (mut self, count_limit: L) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of fields to process.","sig":null,"attributes":[{"value":"/ Set the maximum number of fields to process.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60151,"byte_end":60199,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60204,"byte_end":60207,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Can be `u32` or `Option<u32>`. If `None` or `u32::MAX`, clears the limit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60212,"byte_end":60289,"line_start":221,"line_end":221,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60871,"byte_end":60875,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"temp","qualname":"<SaveBuilder<M>>::temp","value":"fn (self) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using a new temporary directory prefixed with\n `multipart-rs` in the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save all fields in the request using a new temporary directory prefixed with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60462,"byte_end":60542,"line_start":227,"line_end":227,"column_start":5,"column_end":85}},{"value":"/ `multipart-rs` in the OS temporary directory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60547,"byte_end":60596,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60601,"byte_end":60604,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ For more options, create a `TempDir` yourself and pass it to `with_temp_dir()` instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60609,"byte_end":60700,"line_start":230,"line_end":230,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60705,"byte_end":60708,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60713,"byte_end":60752,"line_start":232,"line_end":232,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60757,"byte_end":60760,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ### Note: Temporary","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60765,"byte_end":60788,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/ See `SaveDir` for more info (the type of `Entries::save_dir`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60793,"byte_end":60859,"line_start":235,"line_end":235,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61379,"byte_end":61395,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"temp_with_prefix","qualname":"<SaveBuilder<M>>::temp_with_prefix","value":"fn (self, prefix: &str) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using a new temporary directory with the given string\n as a prefix in the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save all fields in the request using a new temporary directory with the given string","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60965,"byte_end":61053,"line_start":240,"line_end":240,"column_start":5,"column_end":93}},{"value":"/ as a prefix in the OS temporary directory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61058,"byte_end":61104,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61109,"byte_end":61112,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ For more options, create a `TempDir` yourself and pass it to `with_temp_dir()` instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61117,"byte_end":61208,"line_start":243,"line_end":243,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61213,"byte_end":61216,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61221,"byte_end":61260,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61265,"byte_end":61268,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ### Note: Temporary","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61273,"byte_end":61296,"line_start":247,"line_end":247,"column_start":5,"column_end":28}},{"value":"/ See `SaveDir` for more info (the type of `Entries::save_dir`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61301,"byte_end":61367,"line_start":248,"line_end":248,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61808,"byte_end":61821,"line_start":261,"line_end":261,"column_start":12,"column_end":25},"name":"with_temp_dir","qualname":"<SaveBuilder<M>>::with_temp_dir","value":"fn (self, tempdir: TempDir) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save all fields in the request using the given `TempDir`.","sig":null,"attributes":[{"value":"/ Save all fields in the request using the given `TempDir`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61600,"byte_end":61661,"line_start":256,"line_end":256,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61666,"byte_end":61669,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61674,"byte_end":61713,"line_start":258,"line_end":258,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61718,"byte_end":61721,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The `TempDir` is returned in the result under `Entries::save_dir`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61726,"byte_end":61796,"line_start":260,"line_end":260,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62173,"byte_end":62181,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<SaveBuilder<M>>::with_dir","value":"fn <P> (self, dir: P) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Save the file fields in the request to a new permanent directory with the given path.","sig":null,"attributes":[{"value":"/ Save the file fields in the request to a new permanent directory with the given path.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":61947,"byte_end":62036,"line_start":265,"line_end":265,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62041,"byte_end":62044,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Any nonexistent directories in the path will be created.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62049,"byte_end":62109,"line_start":267,"line_end":267,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62114,"byte_end":62117,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ See `with_entries()` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62122,"byte_end":62161,"line_start":269,"line_end":269,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62914,"byte_end":62926,"line_start":287,"line_end":287,"column_start":12,"column_end":24},"name":"with_entries","qualname":"<SaveBuilder<M>>::with_entries","value":"fn (self, mut entries: Entries) -> EntriesSaveResult<M>","parent":null,"children":[],"decl_id":null,"docs":" Commence the save operation using the existing `Entries` instance.","sig":null,"attributes":[{"value":"/ Commence the save operation using the existing `Entries` instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62385,"byte_end":62455,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62460,"byte_end":62463,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ May be used to resume a saving operation after handling an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62468,"byte_end":62537,"line_start":280,"line_end":280,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62542,"byte_end":62545,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If `count_limit` is set, only reads that many fields before returning an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62550,"byte_end":62633,"line_start":282,"line_end":282,"column_start":5,"column_end":88}},{"value":"/ If you wish to resume from `PartialReason::CountLimit`, simply remove some entries.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62638,"byte_end":62725,"line_start":283,"line_end":283,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62730,"byte_end":62733,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note that `PartialReason::CountLimit` will still be returned if the number of fields","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62738,"byte_end":62826,"line_start":285,"line_end":285,"column_start":5,"column_end":93}},{"value":"/ reaches `u32::MAX`, but this would be an extremely degenerate case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":62831,"byte_end":62902,"line_start":286,"line_end":286,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65387,"byte_end":65391,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"temp","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::temp","value":"fn (&mut self) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with a random name in the\n OS temporary directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with a random name in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65216,"byte_end":65291,"line_start":355,"line_end":355,"column_start":5,"column_end":80}},{"value":"/ OS temporary directory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65296,"byte_end":65323,"line_start":356,"line_end":356,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65328,"byte_end":65331,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65336,"byte_end":65375,"line_start":358,"line_end":358,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65694,"byte_end":65707,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"with_filename","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_filename","value":"fn (&mut self, filename: &str) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with the given name in\n the OS temporary directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with the given name in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65522,"byte_end":65594,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ the OS temporary directory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65599,"byte_end":65630,"line_start":365,"line_end":365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65635,"byte_end":65638,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65643,"byte_end":65682,"line_start":367,"line_end":367,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66061,"byte_end":66069,"line_start":379,"line_end":379,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_dir","value":"fn <P> (&mut self, dir: P) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with a random alphanumeric name\n in the given directory.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with a random alphanumeric name","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65884,"byte_end":65965,"line_start":375,"line_end":375,"column_start":5,"column_end":86}},{"value":"/ in the given directory.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65970,"byte_end":65997,"line_start":376,"line_end":376,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66002,"byte_end":66005,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ See `with_path()` for more details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66010,"byte_end":66049,"line_start":378,"line_end":378,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66737,"byte_end":66746,"line_start":393,"line_end":393,"column_start":12,"column_end":21},"name":"with_path","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::with_path","value":"fn <P> (&mut self, path: P) -> FieldSaveResult","parent":null,"children":[],"decl_id":null,"docs":" Save the field data, potentially using a file with the given path.","sig":null,"attributes":[{"value":"/ Save the field data, potentially using a file with the given path.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66221,"byte_end":66291,"line_start":384,"line_end":384,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66296,"byte_end":66299,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Creates any missing directories in the path (RFC: skip this step?).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66304,"byte_end":66375,"line_start":386,"line_end":386,"column_start":5,"column_end":76}},{"value":"/ Uses the contained `OpenOptions` to create the file.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66380,"byte_end":66436,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/ Truncates the file to the given `size_limit`, if set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66441,"byte_end":66498,"line_start":388,"line_end":388,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66503,"byte_end":66506,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The no directories or files will be created until the set `memory_threshold` is reached.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66511,"byte_end":66603,"line_start":390,"line_end":390,"column_start":5,"column_end":97}},{"value":"/ If `size_limit` is set and less than or equal to `memory_threshold`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66608,"byte_end":66680,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ then the disk will never be touched.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":66685,"byte_end":66725,"line_start":392,"line_end":392,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":68211,"byte_end":68219,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"write_to","qualname":"<SaveBuilder<&'m mut MultipartData<M>>>::write_to","value":"fn <W> (&mut self, mut dest: W) -> SaveResult<u64, u64>","parent":null,"children":[],"decl_id":null,"docs":" Write out the field data to `dest`, truncating if a limit was set.","sig":null,"attributes":[{"value":"/ Write out the field data to `dest`, truncating if a limit was set.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":67912,"byte_end":67982,"line_start":428,"line_end":428,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":67987,"byte_end":67990,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Returns the number of bytes copied, and whether or not the limit was reached","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":67995,"byte_end":68075,"line_start":430,"line_end":430,"column_start":5,"column_end":85}},{"value":"/ (tested by `MultipartFile::fill_buf().is_empty()` so no bytes are consumed).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":68080,"byte_end":68160,"line_start":431,"line_end":431,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":68165,"byte_end":68168,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Retries on interrupts.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":68173,"byte_end":68199,"line_start":433,"line_end":433,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70351,"byte_end":70361,"line_start":490,"line_end":490,"column_start":12,"column_end":22},"name":"SavedField","qualname":"::server::save::SavedField","value":"SavedField { headers, data }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524}],"decl_id":null,"docs":" A field that has been saved (to memory or disk) from a multipart request.\n","sig":null,"attributes":[{"value":"/ A field that has been saved (to memory or disk) from a multipart request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70245,"byte_end":70322,"line_start":488,"line_end":488,"column_start":1,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70421,"byte_end":70428,"line_start":492,"line_end":492,"column_start":9,"column_end":16},"name":"headers","qualname":"::server::save::SavedField::headers","value":"server::field::FieldHeaders","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" The headers of the field that was saved.\n","sig":null,"attributes":[{"value":"/ The headers of the field that was saved.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70368,"byte_end":70412,"line_start":491,"line_end":491,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70521,"byte_end":70525,"line_start":494,"line_end":494,"column_start":9,"column_end":13},"name":"data","qualname":"::server::save::SavedField::data","value":"server::save::SavedData","parent":{"krate":0,"index":522},"children":[],"decl_id":null,"docs":" The data of the field which may reside in memory or on disk.\n","sig":null,"attributes":[{"value":"/ The data of the field which may reside in memory or on disk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70448,"byte_end":70512,"line_start":493,"line_end":493,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":528},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70676,"byte_end":70680,"line_start":501,"line_end":501,"column_start":5,"column_end":9},"name":"Text","qualname":"::server::save::SavedData::Text","value":"SavedData::Text(String)","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Validated UTF-8 text data.\n","sig":null,"attributes":[{"value":"/ Validated UTF-8 text data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70641,"byte_end":70671,"line_start":500,"line_end":500,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":531},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70715,"byte_end":70720,"line_start":503,"line_end":503,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::server::save::SavedData::Bytes","value":"SavedData::Bytes(Vec<u8>)","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" Binary data.\n","sig":null,"attributes":[{"value":"/ Binary data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70694,"byte_end":70710,"line_start":502,"line_end":502,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":534},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70818,"byte_end":70822,"line_start":505,"line_end":505,"column_start":5,"column_end":9},"name":"File","qualname":"::server::save::SavedData::File","value":"SavedData::File(PathBuf, u64)","parent":{"krate":0,"index":527},"children":[],"decl_id":null,"docs":" A path to a file on the filesystem and its size as written by `multipart`.\n","sig":null,"attributes":[{"value":"/ A path to a file on the filesystem and its size as written by `multipart`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70735,"byte_end":70813,"line_start":504,"line_end":504,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":527},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70625,"byte_end":70634,"line_start":499,"line_end":499,"column_start":10,"column_end":19},"name":"SavedData","qualname":"::server::save::SavedData","value":"SavedData::{Text, Bytes, File}","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534}],"decl_id":null,"docs":" A saved field's data container (in memory or on disk)\n","sig":null,"attributes":[{"value":"/ A saved field's data container (in memory or on disk)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70541,"byte_end":70598,"line_start":497,"line_end":497,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71011,"byte_end":71019,"line_start":512,"line_end":512,"column_start":12,"column_end":20},"name":"readable","qualname":"<SavedData>::readable","value":"fn (&self) -> io::Result<DataReader>","parent":null,"children":[],"decl_id":null,"docs":" Get an adapter for this data which implements `Read`.","sig":null,"attributes":[{"value":"/ Get an adapter for this data which implements `Read`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70862,"byte_end":70919,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70924,"byte_end":70927,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ If the data is in a file, the file is opened in read-only mode.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70932,"byte_end":70999,"line_start":511,"line_end":511,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71534,"byte_end":71538,"line_start":526,"line_end":526,"column_start":12,"column_end":16},"name":"size","qualname":"<SavedData>::size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the data, in memory or on disk.","sig":null,"attributes":[{"value":"/ Get the size of the data, in memory or on disk.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71355,"byte_end":71406,"line_start":522,"line_end":522,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71411,"byte_end":71414,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ #### Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71419,"byte_end":71432,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ The size on disk may not match the size of the file if it is externally modified.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71437,"byte_end":71522,"line_start":525,"line_end":525,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71851,"byte_end":71860,"line_start":537,"line_end":537,"column_start":12,"column_end":21},"name":"is_memory","qualname":"<SavedData>::is_memory","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data is known to be in memory (`Text | Bytes`)\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data is known to be in memory (`Text | Bytes`)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":71767,"byte_end":71839,"line_start":536,"line_end":536,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":302},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72588,"byte_end":72593,"line_start":571,"line_end":571,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::server::save::DataReader::Bytes","value":"DataReader::Bytes(&'a [u8])","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" In-memory data source (`SavedData::Bytes | Text`)\n","sig":null,"attributes":[{"value":"/ In-memory data source (`SavedData::Bytes | Text`)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72530,"byte_end":72583,"line_start":570,"line_end":570,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72657,"byte_end":72661,"line_start":573,"line_end":573,"column_start":5,"column_end":9},"name":"File","qualname":"::server::save::DataReader::File","value":"DataReader::File(BufReader<File>)","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" On-disk data source (`SavedData::File`)\n","sig":null,"attributes":[{"value":"/ On-disk data source (`SavedData::File`)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72609,"byte_end":72652,"line_start":572,"line_end":572,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":300},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72509,"byte_end":72519,"line_start":569,"line_end":569,"column_start":10,"column_end":20},"name":"DataReader","qualname":"::server::save::DataReader","value":"DataReader::{Bytes, File}","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":305}],"decl_id":null,"docs":" A `Read` (and `BufRead`) adapter for `SavedData`\n","sig":null,"attributes":[{"value":"/ A `Read` (and `BufRead`) adapter for `SavedData`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72447,"byte_end":72499,"line_start":568,"line_end":568,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":540},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73513,"byte_end":73520,"line_start":609,"line_end":609,"column_start":12,"column_end":19},"name":"Entries","qualname":"::server::save::Entries","value":"Entries { fields, save_dir }","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"decl_id":null,"docs":" A result of `Multipart::save()`.\n","sig":null,"attributes":[{"value":"/ A result of `Multipart::save()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73448,"byte_end":73484,"line_start":607,"line_end":607,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":541},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73996,"byte_end":74002,"line_start":618,"line_end":618,"column_start":9,"column_end":15},"name":"fields","qualname":"::server::save::Entries::fields","value":"std::collections::HashMap<std::sync::Arc<std::string::String>, std::vec::Vec<server::save::SavedField>>","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" The fields of the multipart request, mapped by field name -> value.","sig":null,"attributes":[{"value":"/ The fields of the multipart request, mapped by field name -> value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73527,"byte_end":73598,"line_start":610,"line_end":610,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73603,"byte_end":73606,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ A field name may have multiple actual fields associated with it, but the most","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73611,"byte_end":73692,"line_start":612,"line_end":612,"column_start":5,"column_end":86}},{"value":"/ common case is a single field.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73697,"byte_end":73731,"line_start":613,"line_end":613,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73736,"byte_end":73739,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Each vector is guaranteed not to be empty unless externally modified.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":73744,"byte_end":73817,"line_start":615,"line_end":615,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":542},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74114,"byte_end":74122,"line_start":620,"line_end":620,"column_start":9,"column_end":17},"name":"save_dir","qualname":"::server::save::Entries::save_dir","value":"server::save::SaveDir","parent":{"krate":0,"index":540},"children":[],"decl_id":null,"docs":" The directory that the entries in `fields` were saved into.\n","sig":null,"attributes":[{"value":"/ The directory that the entries in `fields` were saved into.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74042,"byte_end":74105,"line_start":619,"line_end":619,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74241,"byte_end":74244,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"new","qualname":"<Entries>::new","value":"fn (save_dir: SaveDir) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Entries` with the given `SaveDir`\n","sig":null,"attributes":[{"value":"/ Create a new `Entries` with the given `SaveDir`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74178,"byte_end":74229,"line_start":625,"line_end":625,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74471,"byte_end":74479,"line_start":635,"line_end":635,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Entries>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `fields` is empty, `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `fields` is empty, `false` otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74400,"byte_end":74459,"line_start":634,"line_end":634,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74862,"byte_end":74874,"line_start":646,"line_end":646,"column_start":12,"column_end":24},"name":"fields_count","qualname":"<Entries>::fields_count","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of actual fields contained within this `Entries`.","sig":null,"attributes":[{"value":"/ The number of actual fields contained within this `Entries`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74539,"byte_end":74603,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74608,"byte_end":74611,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Effectively `self.fields.values().map(Vec::len).sum()` but maintained separately.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74616,"byte_end":74701,"line_start":641,"line_end":641,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74706,"byte_end":74709,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74714,"byte_end":74725,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ This will be incorrect if `fields` is modified externally. Call `recount_fields()`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74730,"byte_end":74816,"line_start":644,"line_end":644,"column_start":5,"column_end":91}},{"value":"/ to get the correct count.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74821,"byte_end":74850,"line_start":645,"line_end":645,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":75021,"byte_end":75035,"line_start":651,"line_end":651,"column_start":12,"column_end":26},"name":"recount_fields","qualname":"<Entries>::recount_fields","value":"fn (&mut self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Sum the number of fields in this `Entries` and then return the updated value.\n","sig":null,"attributes":[{"value":"/ Sum the number of fields in this `Entries` and then return the updated value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74928,"byte_end":75009,"line_start":650,"line_end":650,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":75957,"byte_end":75968,"line_start":674,"line_end":674,"column_start":12,"column_end":23},"name":"print_debug","qualname":"<Entries>::print_debug","value":"fn (&self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Print all fields and their contents to stdout. Mostly for testing purposes.\n","sig":null,"attributes":[{"value":"/ Print all fields and their contents to stdout. Mostly for testing purposes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":75866,"byte_end":75945,"line_start":673,"line_end":673,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":76222,"byte_end":76233,"line_start":681,"line_end":681,"column_start":12,"column_end":23},"name":"write_debug","qualname":"<Entries>::write_debug","value":"fn <W> (&self, mut writer: W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write all fields and their contents to the given output. Mostly for testing purposes.\n","sig":null,"attributes":[{"value":"/ Write all fields and their contents to the given output. Mostly for testing purposes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":76121,"byte_end":76210,"line_start":680,"line_end":680,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77023,"byte_end":77027,"line_start":702,"line_end":702,"column_start":5,"column_end":9},"name":"Temp","qualname":"::server::save::SaveDir::Temp","value":"SaveDir::Temp(TempDir)","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" This directory is temporary and will be deleted, along with its contents, when this wrapper\n is dropped.\n","sig":null,"attributes":[{"value":"/ This directory is temporary and will be deleted, along with its contents, when this wrapper","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":76903,"byte_end":76998,"line_start":700,"line_end":700,"column_start":5,"column_end":100}},{"value":"/ is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77003,"byte_end":77018,"line_start":701,"line_end":701,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":550},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77269,"byte_end":77273,"line_start":707,"line_end":707,"column_start":5,"column_end":9},"name":"Perm","qualname":"::server::save::SaveDir::Perm","value":"SaveDir::Perm(PathBuf)","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" This directory is permanent and will be left on the filesystem when this wrapper is dropped.","sig":null,"attributes":[{"value":"/ This directory is permanent and will be left on the filesystem when this wrapper is dropped.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77042,"byte_end":77138,"line_start":703,"line_end":703,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77143,"byte_end":77146,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ **N.B.** If this directory is in the OS temporary directory then it may still be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77151,"byte_end":77235,"line_start":705,"line_end":705,"column_start":5,"column_end":89}},{"value":"/ deleted at any time.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77240,"byte_end":77264,"line_start":706,"line_end":706,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":546},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":76889,"byte_end":76896,"line_start":699,"line_end":699,"column_start":10,"column_end":17},"name":"SaveDir","qualname":"::server::save::SaveDir","value":"SaveDir::{Temp, Perm}","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":550}],"decl_id":null,"docs":" The save directory for `Entries`. May be temporary (delete-on-drop) or permanent.\n","sig":null,"attributes":[{"value":"/ The save directory for `Entries`. May be temporary (delete-on-drop) or permanent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":76777,"byte_end":76862,"line_start":697,"line_end":697,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77384,"byte_end":77391,"line_start":712,"line_end":712,"column_start":12,"column_end":19},"name":"as_path","qualname":"<SaveDir>::as_path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Get the path of this directory, either temporary or permanent.\n","sig":null,"attributes":[{"value":"/ Get the path of this directory, either temporary or permanent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77306,"byte_end":77372,"line_start":711,"line_end":711,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77670,"byte_end":77682,"line_start":721,"line_end":721,"column_start":12,"column_end":24},"name":"is_temporary","qualname":"<SaveDir>::is_temporary","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this is a temporary directory which will be deleted on-drop.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this is a temporary directory which will be deleted on-drop.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77576,"byte_end":77658,"line_start":720,"line_end":720,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77964,"byte_end":77973,"line_start":731,"line_end":731,"column_start":12,"column_end":21},"name":"into_path","qualname":"<SaveDir>::into_path","value":"fn (self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the `PathBuf` from `self`; if this is a temporary directory,\n it will be converted to a permanent one.\n","sig":null,"attributes":[{"value":"/ Unwrap the `PathBuf` from `self`; if this is a temporary directory,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77832,"byte_end":77903,"line_start":729,"line_end":729,"column_start":5,"column_end":76}},{"value":"/ it will be converted to a permanent one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77908,"byte_end":77952,"line_start":730,"line_end":730,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78724,"byte_end":78728,"line_start":750,"line_end":750,"column_start":12,"column_end":16},"name":"keep","qualname":"<SaveDir>::keep","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If this `SaveDir` is temporary, convert it to permanent.\n This is a no-op if it already is permanent.","sig":null,"attributes":[{"value":"/ If this `SaveDir` is temporary, convert it to permanent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78154,"byte_end":78214,"line_start":740,"line_end":740,"column_start":5,"column_end":65}},{"value":"/ This is a no-op if it already is permanent.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78219,"byte_end":78266,"line_start":741,"line_end":741,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78271,"byte_end":78274,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Potential Data Loss","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78279,"byte_end":78315,"line_start":743,"line_end":743,"column_start":5,"column_end":41}},{"value":"/ Even though this will prevent deletion on-drop, the temporary folder on most OSes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78320,"byte_end":78405,"line_start":744,"line_end":744,"column_start":5,"column_end":90}},{"value":"/ (where this directory is created by default) can be automatically cleared by the OS at any","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78410,"byte_end":78504,"line_start":745,"line_end":745,"column_start":5,"column_end":99}},{"value":"/ time, usually on reboot or when free space is low.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78509,"byte_end":78563,"line_start":746,"line_end":746,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78568,"byte_end":78571,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ It is recommended that you relocate the files from a request which you want to keep to a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78576,"byte_end":78668,"line_start":748,"line_end":748,"column_start":5,"column_end":97}},{"value":"/ permanent folder on the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78673,"byte_end":78712,"line_start":749,"line_end":749,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79429,"byte_end":79435,"line_start":766,"line_end":766,"column_start":12,"column_end":18},"name":"delete","qualname":"<SaveDir>::delete","value":"fn (self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Delete this directory and its contents, regardless of its permanence.","sig":null,"attributes":[{"value":"/ Delete this directory and its contents, regardless of its permanence.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":78949,"byte_end":79022,"line_start":758,"line_end":758,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79027,"byte_end":79030,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ### Warning: Potential Data Loss","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79035,"byte_end":79071,"line_start":760,"line_end":760,"column_start":5,"column_end":41}},{"value":"/ This is very likely irreversible, depending on the OS implementation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79076,"byte_end":79149,"line_start":761,"line_end":761,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79154,"byte_end":79157,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ Files deleted programmatically are deleted directly from disk, as compared to most file","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79162,"byte_end":79253,"line_start":763,"line_end":763,"column_start":5,"column_end":96}},{"value":"/ manager applications which use a staging area from which deleted files can be safely","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79258,"byte_end":79346,"line_start":764,"line_end":764,"column_start":5,"column_end":93}},{"value":"/ recovered (i.e. Windows' Recycle Bin, OS X's Trash Can, etc.).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79351,"byte_end":79417,"line_start":765,"line_end":765,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79966,"byte_end":79976,"line_start":787,"line_end":787,"column_start":5,"column_end":15},"name":"CountLimit","qualname":"::server::save::PartialReason::CountLimit","value":"PartialReason::CountLimit","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The count limit for files in the request was hit.","sig":null,"attributes":[{"value":"/ The count limit for files in the request was hit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79834,"byte_end":79887,"line_start":784,"line_end":784,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79892,"byte_end":79895,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ The associated file has not been saved to the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79900,"byte_end":79961,"line_start":786,"line_end":786,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80103,"byte_end":80112,"line_start":791,"line_end":791,"column_start":5,"column_end":14},"name":"SizeLimit","qualname":"::server::save::PartialReason::SizeLimit","value":"PartialReason::SizeLimit","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" The size limit for an individual file was hit.","sig":null,"attributes":[{"value":"/ The size limit for an individual file was hit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79982,"byte_end":80032,"line_start":788,"line_end":788,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80037,"byte_end":80040,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ The file was partially written to the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80045,"byte_end":80098,"line_start":790,"line_end":790,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80166,"byte_end":80173,"line_start":793,"line_end":793,"column_start":5,"column_end":12},"name":"IoError","qualname":"::server::save::PartialReason::IoError","value":"PartialReason::IoError(io::Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An error occurred during the operation.\n","sig":null,"attributes":[{"value":"/ An error occurred during the operation.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80118,"byte_end":80161,"line_start":792,"line_end":792,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80284,"byte_end":80293,"line_start":795,"line_end":795,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::server::save::PartialReason::Utf8Error","value":"PartialReason::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":555},"children":[],"decl_id":null,"docs":" An error returned from validating a field as UTF-8 due to `SaveBuilder::force_text()`\n","sig":null,"attributes":[{"value":"/ An error returned from validating a field as UTF-8 due to `SaveBuilder::force_text()`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80190,"byte_end":80279,"line_start":794,"line_end":794,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":555},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79814,"byte_end":79827,"line_start":783,"line_end":783,"column_start":10,"column_end":23},"name":"PartialReason","qualname":"::server::save::PartialReason","value":"PartialReason::{CountLimit, SizeLimit, IoError, Utf8Error}","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":563}],"decl_id":null,"docs":" The reason the save operation quit partway through.\n","sig":null,"attributes":[{"value":"/ The reason the save operation quit partway through.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79732,"byte_end":79787,"line_start":781,"line_end":781,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80637,"byte_end":80647,"line_start":812,"line_end":812,"column_start":12,"column_end":22},"name":"unwrap_err","qualname":"<PartialReason>::unwrap_err","value":"fn (self) -> io::Error","parent":null,"children":[],"decl_id":null,"docs":" Return `io::Error` in the `IoError` case or panic otherwise.\n","sig":null,"attributes":[{"value":"/ Return `io::Error` in the `IoError` case or panic otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80561,"byte_end":80625,"line_start":811,"line_end":811,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80848,"byte_end":80858,"line_start":818,"line_end":818,"column_start":12,"column_end":22},"name":"expect_err","qualname":"<PartialReason>::expect_err","value":"fn (self, msg: &str) -> io::Error","parent":null,"children":[],"decl_id":null,"docs":" Return `io::Error` in the `IoError` case or panic with the given\n message otherwise.\n","sig":null,"attributes":[{"value":"/ Return `io::Error` in the `IoError` case or panic with the given","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80741,"byte_end":80809,"line_start":816,"line_end":816,"column_start":5,"column_end":73}},{"value":"/ message otherwise.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80814,"byte_end":80836,"line_start":817,"line_end":817,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81185,"byte_end":81202,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"PartialSavedField","qualname":"::server::save::PartialSavedField","value":"PartialSavedField { source, dest }","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"decl_id":null,"docs":" The field that was being read when the save operation quit.","sig":null,"attributes":[{"value":"/ The field that was being read when the save operation quit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81023,"byte_end":81086,"line_start":826,"line_end":826,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81087,"byte_end":81090,"line_start":827,"line_end":827,"column_start":1,"column_end":4}},{"value":"/ May be partially saved to the filesystem if `dest` is `Some`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81091,"byte_end":81156,"line_start":828,"line_end":828,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":570},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81325,"byte_end":81331,"line_start":834,"line_end":834,"column_start":9,"column_end":15},"name":"source","qualname":"::server::save::PartialSavedField::source","value":"server::field::MultipartField<M>","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" The field that was being read.","sig":null,"attributes":[{"value":"/ The field that was being read.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81223,"byte_end":81257,"line_start":831,"line_end":831,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81262,"byte_end":81265,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ May be partially read if `dest` is `Some`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81270,"byte_end":81316,"line_start":833,"line_end":833,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":571},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81424,"byte_end":81428,"line_start":836,"line_end":836,"column_start":9,"column_end":13},"name":"dest","qualname":"::server::save::PartialSavedField::dest","value":"std::option::Option<server::save::SavedData>","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" The data from the saving operation, if it got that far.\n","sig":null,"attributes":[{"value":"/ The data from the saving operation, if it got that far.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81356,"byte_end":81415,"line_start":835,"line_end":835,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":575},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81704,"byte_end":81718,"line_start":845,"line_end":845,"column_start":12,"column_end":26},"name":"PartialEntries","qualname":"::server::save::PartialEntries","value":"PartialEntries { entries, partial }","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" The partial result type for `Multipart::save*()`.","sig":null,"attributes":[{"value":"/ The partial result type for `Multipart::save*()`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81452,"byte_end":81505,"line_start":839,"line_end":839,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81506,"byte_end":81509,"line_start":840,"line_end":840,"column_start":1,"column_end":4}},{"value":"/ Contains the successfully saved entries as well as the partially","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81510,"byte_end":81578,"line_start":841,"line_end":841,"column_start":1,"column_end":69}},{"value":"/ saved file that was in the process of being read when the error occurred,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81579,"byte_end":81656,"line_start":842,"line_end":842,"column_start":1,"column_end":78}},{"value":"/ if applicable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81657,"byte_end":81675,"line_start":843,"line_end":843,"column_start":1,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":577},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81793,"byte_end":81800,"line_start":847,"line_end":847,"column_start":9,"column_end":16},"name":"entries","qualname":"::server::save::PartialEntries::entries","value":"server::save::Entries","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" The entries that were saved successfully.\n","sig":null,"attributes":[{"value":"/ The entries that were saved successfully.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81739,"byte_end":81784,"line_start":846,"line_end":846,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":578},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81930,"byte_end":81937,"line_start":850,"line_end":850,"column_start":9,"column_end":16},"name":"partial","qualname":"::server::save::PartialEntries::partial","value":"std::option::Option<server::save::PartialSavedField<M>>","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" The field that was in the process of being read. `None` if the error\n occurred between entries.\n","sig":null,"attributes":[{"value":"/ The field that was in the process of being read. `None` if the error","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81815,"byte_end":81887,"line_start":848,"line_end":848,"column_start":5,"column_end":77}},{"value":"/ occurred between entries.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":81892,"byte_end":81921,"line_start":849,"line_end":849,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82338,"byte_end":82350,"line_start":865,"line_end":865,"column_start":12,"column_end":24},"name":"keep_partial","qualname":"<PartialEntries<M>>::keep_partial","value":"fn (mut self) -> Entries","parent":null,"children":[],"decl_id":null,"docs":" If `partial` is present and contains a `SavedFile` then just\n add it to the `Entries` instance and return it.","sig":null,"attributes":[{"value":"/ If `partial` is present and contains a `SavedFile` then just","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82156,"byte_end":82220,"line_start":861,"line_end":861,"column_start":5,"column_end":69}},{"value":"/ add it to the `Entries` instance and return it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82225,"byte_end":82276,"line_start":862,"line_end":862,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82281,"byte_end":82284,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Otherwise, returns `self.entries`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82289,"byte_end":82326,"line_start":864,"line_end":864,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82796,"byte_end":82800,"line_start":880,"line_end":880,"column_start":5,"column_end":9},"name":"Full","qualname":"::server::save::SaveResult::Full","value":"SaveResult::Full(Success)","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" The operation was a total success. Contained is the complete result.\n","sig":null,"attributes":[{"value":"/ The operation was a total success. Contained is the complete result.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82719,"byte_end":82791,"line_start":879,"line_end":879,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82921,"byte_end":82928,"line_start":883,"line_end":883,"column_start":5,"column_end":12},"name":"Partial","qualname":"::server::save::SaveResult::Partial","value":"SaveResult::Partial(Partial, PartialReason)","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" The operation quit partway through. Included is the partial\n result along with the reason.\n","sig":null,"attributes":[{"value":"/ The operation quit partway through. Included is the partial","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82815,"byte_end":82878,"line_start":881,"line_end":881,"column_start":5,"column_end":68}},{"value":"/ result along with the reason.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82883,"byte_end":82916,"line_start":882,"line_end":882,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83041,"byte_end":83046,"line_start":885,"line_end":885,"column_start":5,"column_end":10},"name":"Error","qualname":"::server::save::SaveResult::Error","value":"SaveResult::Error(io::Error)","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":" An error occurred at the start of the operation, before anything was done.\n","sig":null,"attributes":[{"value":"/ An error occurred at the start of the operation, before anything was done.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82958,"byte_end":83036,"line_start":884,"line_end":884,"column_start":5,"column_end":83}}]},{"kind":"Enum","id":{"krate":0,"index":582},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82684,"byte_end":82694,"line_start":878,"line_end":878,"column_start":10,"column_end":20},"name":"SaveResult","qualname":"::server::save::SaveResult","value":"SaveResult::{Full, Partial, Error}","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":592}],"decl_id":null,"docs":" The ternary result type used for the `SaveBuilder<_>` API.\n","sig":null,"attributes":[{"value":"/ The ternary result type used for the `SaveBuilder<_>` API.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82595,"byte_end":82657,"line_start":876,"line_end":876,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":354},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83126,"byte_end":83143,"line_start":889,"line_end":889,"column_start":10,"column_end":27},"name":"EntriesSaveResult","qualname":"::server::save::EntriesSaveResult","value":"SaveResult<Entries, PartialEntries<M>>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand result for methods that return `Entries`\n","sig":null,"attributes":[{"value":"/ Shorthand result for methods that return `Entries`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83062,"byte_end":83116,"line_start":888,"line_end":888,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83476,"byte_end":83491,"line_start":896,"line_end":896,"column_start":10,"column_end":25},"name":"FieldSaveResult","qualname":"::server::save::FieldSaveResult","value":"SaveResult<SavedData, SavedData>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand result for methods that return `FieldData`s.","sig":null,"attributes":[{"value":"/ Shorthand result for methods that return `FieldData`s.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83190,"byte_end":83248,"line_start":891,"line_end":891,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83249,"byte_end":83252,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ The `MultipartData` is not provided here because it is not necessary to return","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83253,"byte_end":83335,"line_start":893,"line_end":893,"column_start":1,"column_end":83}},{"value":"/ a borrow when the owned version is probably in the same scope. This hopefully","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83336,"byte_end":83417,"line_start":894,"line_end":894,"column_start":1,"column_end":82}},{"value":"/ saves some headache with the borrow-checker.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83418,"byte_end":83466,"line_start":895,"line_end":895,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83679,"byte_end":83691,"line_start":901,"line_end":901,"column_start":12,"column_end":24},"name":"into_entries","qualname":"<EntriesSaveResult<M>>::into_entries","value":"fn (self) -> Option<Entries>","parent":null,"children":[],"decl_id":null,"docs":" Take the `Entries` from `self`, if applicable, and discarding\n the error, if any.\n","sig":null,"attributes":[{"value":"/ Take the `Entries` from `self`, if applicable, and discarding","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83575,"byte_end":83640,"line_start":899,"line_end":899,"column_start":5,"column_end":70}},{"value":"/ the error, if any.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83645,"byte_end":83667,"line_start":900,"line_end":900,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84011,"byte_end":84016,"line_start":911,"line_end":911,"column_start":12,"column_end":17},"name":"okish","qualname":"<SaveResult<S, P>>::okish","value":"fn (self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Convert `self` to `Option<S>`; there may still have been an error.\n","sig":null,"attributes":[{"value":"/ Convert `self` to `Option<S>`; there may still have been an error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83929,"byte_end":83999,"line_start":910,"line_end":910,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84197,"byte_end":84200,"line_start":917,"line_end":917,"column_start":12,"column_end":15},"name":"map","qualname":"<SaveResult<S, P>>::map","value":"fn <T, Map> (self, map: Map) -> SaveResult<T, T>","parent":null,"children":[],"decl_id":null,"docs":" Map the `Full` or `Partial` values to a new type, retaining the reason\n in the `Partial` case.\n","sig":null,"attributes":[{"value":"/ Map the `Full` or `Partial` values to a new type, retaining the reason","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84080,"byte_end":84154,"line_start":915,"line_end":915,"column_start":5,"column_end":79}},{"value":"/ in the `Partial` case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84159,"byte_end":84185,"line_start":916,"line_end":916,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84538,"byte_end":84551,"line_start":926,"line_end":926,"column_start":12,"column_end":25},"name":"into_opt_both","qualname":"<SaveResult<S, P>>::into_opt_both","value":"fn (self) -> (Option<S>, Option<io::Error>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose `self` to `(Option<S>, Option<io::Error>)`\n","sig":null,"attributes":[{"value":"/ Decompose `self` to `(Option<S>, Option<io::Error>)`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84470,"byte_end":84526,"line_start":925,"line_end":925,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84964,"byte_end":84975,"line_start":936,"line_end":936,"column_start":12,"column_end":23},"name":"into_result","qualname":"<SaveResult<S, P>>::into_result","value":"fn (self) -> io::Result<S>","parent":null,"children":[],"decl_id":null,"docs":" Map `self` to an `io::Result`, discarding the error in the `Partial` case.\n","sig":null,"attributes":[{"value":"/ Map `self` to an `io::Result`, discarding the error in the `Partial` case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":84874,"byte_end":84952,"line_start":935,"line_end":935,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85710,"byte_end":85728,"line_start":952,"line_end":952,"column_start":12,"column_end":30},"name":"into_result_strict","qualname":"<SaveResult<S, P>>::into_result_strict","value":"fn (self) -> io::Result<S>","parent":null,"children":[],"decl_id":null,"docs":" Pessimistic version of `into_result()` which will return an error even\n for the `Partial` case.","sig":null,"attributes":[{"value":"/ Pessimistic version of `into_result()` which will return an error even","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85180,"byte_end":85254,"line_start":944,"line_end":944,"column_start":5,"column_end":79}},{"value":"/ for the `Partial` case.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85259,"byte_end":85286,"line_start":945,"line_end":945,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85291,"byte_end":85294,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ ### Note: Possible Storage Leak","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85299,"byte_end":85334,"line_start":947,"line_end":947,"column_start":5,"column_end":40}},{"value":"/ It's generally not a good idea to ignore the `Partial` case, as there may still be a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85339,"byte_end":85427,"line_start":948,"line_end":948,"column_start":5,"column_end":93}},{"value":"/ partially written file on-disk. If you're not using a temporary directory","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85432,"byte_end":85509,"line_start":949,"line_end":949,"column_start":5,"column_end":82}},{"value":"/ (OS-managed or via `TempDir`) then partially written files will remain on-disk until","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85514,"byte_end":85602,"line_start":950,"line_end":950,"column_start":5,"column_end":93}},{"value":"/ explicitly removed which could result in excessive disk usage if not monitored closely.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":85607,"byte_end":85698,"line_start":951,"line_end":951,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6437,"byte_end":6446,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"Multipart","qualname":"::server::Multipart","value":"Multipart {  }","parent":null,"children":[{"krate":0,"index":384}],"decl_id":null,"docs":" The server-side implementation of `multipart/form-data` requests.","sig":null,"attributes":[{"value":"/ The server-side implementation of `multipart/form-data` requests.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6276,"byte_end":6345,"line_start":91,"line_end":91,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6346,"byte_end":6349,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Implements `Borrow<R>` to allow access to the request body, if desired.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6350,"byte_end":6425,"line_start":93,"line_end":93,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6706,"byte_end":6718,"line_start":102,"line_end":102,"column_start":12,"column_end":24},"name":"from_request","qualname":"<Multipart<()>>::from_request","value":"fn <R> (req: R) -> Result<Multipart<R::Body>, R>","parent":null,"children":[],"decl_id":null,"docs":" If the given `HttpRequest` is a multipart/form-data POST request,\n return the request body wrapped in the multipart reader. Otherwise,\n returns the original request.\n","sig":null,"attributes":[{"value":"/ If the given `HttpRequest` is a multipart/form-data POST request,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6511,"byte_end":6580,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ return the request body wrapped in the multipart reader. Otherwise,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6585,"byte_end":6656,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ returns the original request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6661,"byte_end":6694,"line_start":101,"line_end":101,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7659,"byte_end":7668,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"with_body","qualname":"<Multipart<R>>::with_body","value":"fn <Bnd> (body: R, boundary: Bnd) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Multipart` with the given body reader and boundary.","sig":null,"attributes":[{"value":"/ Construct a new `Multipart` with the given body reader and boundary.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7132,"byte_end":7204,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7209,"byte_end":7212,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ## Note: `boundary`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7217,"byte_end":7240,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/ This will prepend the requisite `--` to the boundary string as documented in","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7245,"byte_end":7325,"line_start":117,"line_end":117,"column_start":5,"column_end":85}},{"value":"/ [IETF RFC 1341, Section 7.2.1: \"Multipart: the common syntax\"][rfc1341-7.2.1].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7330,"byte_end":7412,"line_start":118,"line_end":118,"column_start":5,"column_end":87}},{"value":"/ Simply pass the value of the `boundary` key from the `Content-Type` header in the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7417,"byte_end":7502,"line_start":119,"line_end":119,"column_start":5,"column_end":90}},{"value":"/ request (or use `Multipart::from_request()`, if supported).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7507,"byte_end":7570,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7575,"byte_end":7578,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [rfc1341-7.2.1]: https://tools.ietf.org/html/rfc1341#page-30","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7583,"byte_end":7647,"line_start":122,"line_end":122,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8299,"byte_end":8309,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"read_entry","qualname":"<Multipart<R>>::read_entry","value":"fn (&mut self) -> io::Result<Option<MultipartField<&mut Self>>>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry from this multipart request, returning a struct with the field's name and\n data. See `MultipartField` for more info.","sig":null,"attributes":[{"value":"/ Read the next entry from this multipart request, returning a struct with the field's name and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7933,"byte_end":8030,"line_start":133,"line_end":133,"column_start":5,"column_end":102}},{"value":"/ data. See `MultipartField` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8035,"byte_end":8080,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8085,"byte_end":8088,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ## Warning: Risk of Data Loss","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8093,"byte_end":8126,"line_start":136,"line_end":136,"column_start":5,"column_end":38}},{"value":"/ If the previously returned entry had contents of type `MultipartField::File`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8131,"byte_end":8212,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/ calling this again will discard any unread contents of that entry.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8217,"byte_end":8287,"line_start":138,"line_end":138,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8586,"byte_end":8596,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"into_entry","qualname":"<Multipart<R>>::into_entry","value":"fn (self) -> ReadEntryResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read the next entry from this multipart request, returning a struct with the field's name and\n data. See `MultipartField` for more info.\n","sig":null,"attributes":[{"value":"/ Read the next entry from this multipart request, returning a struct with the field's name and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8427,"byte_end":8524,"line_start":143,"line_end":143,"column_start":5,"column_end":102}},{"value":"/ data. See `MultipartField` for more info.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8529,"byte_end":8574,"line_start":144,"line_end":144,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8989,"byte_end":9002,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"foreach_entry","qualname":"<Multipart<R>>::foreach_entry","value":"fn <F> (&mut self, mut foreach: F) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Call `f` for each entry in the multipart request.\n \n This is a substitute for Rust not supporting streaming iterators (where the return value\n from `next()` borrows the iterator for a bound lifetime).","sig":null,"attributes":[{"value":"/ Call `f` for each entry in the multipart request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8667,"byte_end":8720,"line_start":149,"line_end":149,"column_start":5,"column_end":58}},{"value":"/ ","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8725,"byte_end":8729,"line_start":150,"line_end":150,"column_start":5,"column_end":9}},{"value":"/ This is a substitute for Rust not supporting streaming iterators (where the return value","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8734,"byte_end":8826,"line_start":151,"line_end":151,"column_start":5,"column_end":97}},{"value":"/ from `next()` borrows the iterator for a bound lifetime).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8831,"byte_end":8892,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8897,"byte_end":8900,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` when all fields have been read, or the first error.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":8905,"byte_end":8977,"line_start":154,"line_end":154,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9500,"byte_end":9504,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"save","qualname":"<Multipart<R>>::save","value":"fn (&mut self) -> SaveBuilder<&mut Self>","parent":null,"children":[],"decl_id":null,"docs":" Get a builder type for saving the files in this request to the filesystem.","sig":null,"attributes":[{"value":"/ Get a builder type for saving the files in this request to the filesystem.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9322,"byte_end":9400,"line_start":165,"line_end":165,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9405,"byte_end":9408,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ See [`SaveBuilder`](save/struct.SaveBuilder.html) for more information.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9413,"byte_end":9488,"line_start":167,"line_end":167,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10423,"byte_end":10434,"line_start":202,"line_end":202,"column_start":11,"column_end":22},"name":"HttpRequest","qualname":"::server::HttpRequest","value":"HttpRequest","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" A server-side HTTP request that may or may not be multipart.","sig":null,"attributes":[{"value":"/ A server-side HTTP request that may or may not be multipart.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10237,"byte_end":10301,"line_start":198,"line_end":198,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10302,"byte_end":10305,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ May be implemented by mutable references if providing the request or body by-value is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10306,"byte_end":10395,"line_start":200,"line_end":200,"column_start":1,"column_end":90}},{"value":"/ undesirable.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10396,"byte_end":10412,"line_start":201,"line_end":201,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":407},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10480,"byte_end":10484,"line_start":204,"line_end":204,"column_start":10,"column_end":14},"name":"Body","qualname":"::server::HttpRequest::Body","value":"type Body: Read;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" The body of this request.\n","sig":null,"attributes":[{"value":"/ The body of this request.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10441,"byte_end":10470,"line_start":203,"line_end":203,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10814,"byte_end":10832,"line_start":210,"line_end":210,"column_start":8,"column_end":26},"name":"multipart_boundary","qualname":"::server::HttpRequest::multipart_boundary","value":"fn (&self) -> Option<&str>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Get the boundary string of this request if it is a POST request\n with the `Content-Type` header set to `multipart/form-data`.","sig":null,"attributes":[{"value":"/ Get the boundary string of this request if it is a POST request","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10496,"byte_end":10563,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"/ with the `Content-Type` header set to `multipart/form-data`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10568,"byte_end":10632,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10637,"byte_end":10640,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ The boundary string should be supplied as an extra value of the `Content-Type` header, e.g.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10645,"byte_end":10740,"line_start":208,"line_end":208,"column_start":5,"column_end":100}},{"value":"/ `Content-Type: multipart/form-data; boundary={boundary}`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10745,"byte_end":10806,"line_start":209,"line_end":209,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10910,"byte_end":10914,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"body","qualname":"::server::HttpRequest::body","value":"fn (self) -> Self::Body","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Return the request body for reading.\n","sig":null,"attributes":[{"value":"/ Return the request body for reading.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":10862,"byte_end":10902,"line_start":212,"line_end":212,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14823,"byte_end":14837,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21067,"byte_end":21081,"line_start":231,"line_end":231,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21172,"byte_end":21186,"line_start":237,"line_end":237,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21532,"byte_end":21546,"line_start":250,"line_end":250,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":32998,"byte_end":33012,"line_start":52,"line_end":52,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35683,"byte_end":35695,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":36463,"byte_end":36474,"line_start":157,"line_end":157,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39291,"byte_end":39305,"line_start":223,"line_end":223,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41572,"byte_end":41585,"line_start":280,"line_end":280,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42683,"byte_end":42696,"line_start":314,"line_end":314,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":43002,"byte_end":43015,"line_start":323,"line_end":323,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45863,"byte_end":45864,"line_start":401,"line_end":401,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47454,"byte_end":47469,"line_start":457,"line_end":457,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57087,"byte_end":57098,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60111,"byte_end":60122,"line_start":218,"line_end":218,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65140,"byte_end":65151,"line_start":354,"line_end":354,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70846,"byte_end":70855,"line_start":508,"line_end":508,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72260,"byte_end":72269,"line_start":556,"line_end":556,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72364,"byte_end":72373,"line_start":562,"line_end":562,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72701,"byte_end":72711,"line_start":576,"line_end":576,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72979,"byte_end":72989,"line_start":587,"line_end":587,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74164,"byte_end":74171,"line_start":624,"line_end":624,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77292,"byte_end":77299,"line_start":710,"line_end":710,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79658,"byte_end":79665,"line_start":775,"line_end":775,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80339,"byte_end":80352,"line_start":798,"line_end":798,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80449,"byte_end":80462,"line_start":804,"line_end":804,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80541,"byte_end":80554,"line_start":810,"line_end":810,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82032,"byte_end":82046,"line_start":854,"line_end":854,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82132,"byte_end":82146,"line_start":860,"line_end":860,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83548,"byte_end":83565,"line_start":898,"line_end":898,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83889,"byte_end":83899,"line_start":909,"line_end":909,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6491,"byte_end":6500,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7113,"byte_end":7122,"line_start":113,"line_end":113,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9606,"byte_end":9615,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9720,"byte_end":9729,"line_start":179,"line_end":179,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/lib.rs","byte_start":3679,"byte_end":3685,"line_start":116,"line_end":116,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6269,"byte_end":6273,"line_start":89,"line_end":89,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":200}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":14823,"byte_end":14837,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21067,"byte_end":21081,"line_start":231,"line_end":231,"column_start":23,"column_end":37},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21172,"byte_end":21186,"line_start":237,"line_end":237,"column_start":18,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/boundary.rs","byte_start":21532,"byte_end":21546,"line_start":250,"line_end":250,"column_start":21,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":426},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":32998,"byte_end":33012,"line_start":52,"line_end":52,"column_start":37,"column_end":51},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":91},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":35683,"byte_end":35695,"line_start":132,"line_end":132,"column_start":6,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":36463,"byte_end":36474,"line_start":157,"line_end":157,"column_start":6,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":39291,"byte_end":39305,"line_start":223,"line_end":223,"column_start":20,"column_end":34},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":41572,"byte_end":41585,"line_start":280,"line_end":280,"column_start":9,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":42683,"byte_end":42696,"line_start":314,"line_end":314,"column_start":29,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":462},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":43002,"byte_end":43015,"line_start":323,"line_end":323,"column_start":32,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":462},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44393,"byte_end":44406,"line_start":360,"line_end":360,"column_start":22,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":162},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":44409,"byte_end":44414,"line_start":360,"line_end":360,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1857},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":45863,"byte_end":45864,"line_start":401,"line_end":401,"column_start":23,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":0,"index":157}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/field.rs","byte_start":47454,"byte_end":47469,"line_start":457,"line_end":457,"column_start":27,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":57087,"byte_end":57098,"line_start":142,"line_end":142,"column_start":9,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":60111,"byte_end":60122,"line_start":218,"line_end":218,"column_start":9,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":65140,"byte_end":65151,"line_start":354,"line_end":354,"column_start":17,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":70846,"byte_end":70855,"line_start":508,"line_end":508,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72260,"byte_end":72269,"line_start":556,"line_end":556,"column_start":23,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72364,"byte_end":72373,"line_start":562,"line_end":562,"column_start":24,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":527},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72701,"byte_end":72711,"line_start":576,"line_end":576,"column_start":19,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":72979,"byte_end":72989,"line_start":587,"line_end":587,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":300},"to":{"krate":1,"index":2928}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":74164,"byte_end":74171,"line_start":624,"line_end":624,"column_start":6,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":77292,"byte_end":77299,"line_start":710,"line_end":710,"column_start":6,"column_end":13},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":79658,"byte_end":79665,"line_start":775,"line_end":775,"column_start":22,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":546},"to":{"krate":2,"index":1767}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80339,"byte_end":80352,"line_start":798,"line_end":798,"column_start":26,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80449,"byte_end":80462,"line_start":804,"line_end":804,"column_start":31,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":555},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":80541,"byte_end":80554,"line_start":810,"line_end":810,"column_start":6,"column_end":19},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82032,"byte_end":82046,"line_start":854,"line_end":854,"column_start":38,"column_end":52},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":575},"to":{"krate":2,"index":1773}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":82132,"byte_end":82146,"line_start":860,"line_end":860,"column_start":20,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83548,"byte_end":83565,"line_start":898,"line_end":898,"column_start":20,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/save.rs","byte_start":83889,"byte_end":83899,"line_start":909,"line_end":909,"column_start":12,"column_end":22},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":6491,"byte_end":6500,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":7113,"byte_end":7122,"line_start":113,"line_end":113,"column_start":15,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9606,"byte_end":9615,"line_start":173,"line_end":173,"column_start":23,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":382},"to":{"krate":2,"index":1540}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/multipart-0.15.4/src/server/mod.rs","byte_start":9720,"byte_end":9729,"line_start":179,"line_end":179,"column_start":33,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":382},"to":{"krate":0,"index":162}}]}