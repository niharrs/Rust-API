{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5","program":"/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","arc_swap","/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=d25288e8c6d5db27","-C","extra-filename=-d25288e8c6d5db27","--out-dir","/Users/niharika/Downloads/webapp/target/rls/debug/deps","-L","dependency=/Users/niharika/Downloads/webapp/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/niharika/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/niharika/Downloads/webapp/target/rls/debug/deps/libarc_swap-d25288e8c6d5db27.rmeta"},"prelude":{"crate_id":{"name":"arc_swap","disambiguator":[11698414955222306728,13245458730901588314]},"crate_root":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src","external_crates":[{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":0,"byte_end":73456,"line_start":1,"line_end":1836,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12798,"byte_end":12803,"line_start":276,"line_end":276,"column_start":16,"column_end":21},"alias_span":null,"name":"Cache","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12902,"byte_end":12908,"line_start":279,"line_end":279,"column_start":18,"column_end":24},"alias_span":null,"name":"RefCnt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":0,"byte_end":73456,"line_start":1,"line_end":1836,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":95},{"krate":0,"index":120},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":203},{"krate":0,"index":246},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":337},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":629},{"krate":0,"index":636},{"krate":0,"index":634},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":439}],"decl_id":null,"docs":" Making [`Arc`][Arc] itself atomic","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":106,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"allow(unknown_lints, bare_trait_objects, renamed_and_removed_lints)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":184,"byte_end":255,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"! Making [`Arc`][Arc] itself atomic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":321,"byte_end":358,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":359,"byte_end":362,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! The library provides a type that is somewhat similar to what `RwLock<Arc<T>>` is or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":363,"byte_end":450,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"! `Atomic<Arc<T>>` would be if it existed, optimized for read-mostly update-seldom scenarios,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":451,"byte_end":546,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"! with consistent performance characteristics.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":547,"byte_end":595,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":596,"byte_end":599,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Motivation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":600,"byte_end":616,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":617,"byte_end":620,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! There are many situations in which one might want to have some data structure that is often","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":621,"byte_end":716,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"! read and seldom updated. Some examples might be a configuration of a service, routing tables,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":717,"byte_end":814,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"! snapshot of some data that is renewed every few minutes, etc.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":815,"byte_end":880,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":881,"byte_end":884,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! In all these cases one needs:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":885,"byte_end":918,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"! * Being able to read the current value of the data structure, *fast*.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":919,"byte_end":992,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"! * Using the same version of the data structure over longer period of time ‒ a query should be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":993,"byte_end":1092,"line_start":24,"line_end":24,"column_start":1,"column_end":98}},{"value":"!   answered by a consistent version of data, a packet should be routed either by an old or by a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1093,"byte_end":1191,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"!   new version of the routing table but not by a combination, etc.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1192,"byte_end":1261,"line_start":26,"line_end":26,"column_start":1,"column_end":70}},{"value":"! * Perform an update without disrupting the processing.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1262,"byte_end":1320,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1321,"byte_end":1324,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The first idea would be to use [`RwLock<T>`][RwLock] and keep a read-lock for the whole time of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1325,"byte_end":1424,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"! processing. Update would, however, pause all processing until done.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1425,"byte_end":1496,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1497,"byte_end":1500,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! Better option would be to have [`RwLock<Arc<T>>`][RwLock]. Then one would lock, clone the [Arc]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1501,"byte_end":1600,"line_start":32,"line_end":32,"column_start":1,"column_end":100}},{"value":"! and unlock. This suffers from CPU-level contention (on the lock and on the reference count of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1601,"byte_end":1698,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"! the [Arc]) which makes it relatively slow. Depending on the implementation, an update may be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1699,"byte_end":1795,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"! blocked for arbitrary long time by a steady inflow of readers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1796,"byte_end":1862,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1863,"byte_end":1866,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1867,"byte_end":1878,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"! # extern crate once_cell;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1879,"byte_end":1908,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"! # use std::sync::{Arc, RwLock};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1909,"byte_end":1944,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"! # use once_cell::sync::Lazy;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1945,"byte_end":1977,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"! # struct RoutingTable; struct Packet; impl RoutingTable { fn route(&self, _: Packet) {} }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":1978,"byte_end":2071,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"! static ROUTING_TABLE: Lazy<RwLock<Arc<RoutingTable>>> = Lazy::new(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2072,"byte_end":2146,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"!     RwLock::new(Arc::new(RoutingTable))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2147,"byte_end":2190,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2191,"byte_end":2198,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2199,"byte_end":2202,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! fn process_packet(packet: Packet) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2203,"byte_end":2242,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"!     let table = Arc::clone(&ROUTING_TABLE.read().unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2243,"byte_end":2306,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"!     table.route(packet);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2307,"byte_end":2335,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2336,"byte_end":2341,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"! # fn main() { process_packet(Packet); }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2342,"byte_end":2385,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2386,"byte_end":2393,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2394,"byte_end":2397,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! The [ArcSwap] can be used instead, which solves the above problems and has better performance","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2398,"byte_end":2495,"line_start":53,"line_end":53,"column_start":1,"column_end":98}},{"value":"! characteristics than the [RwLock], both in contended and non-contended scenarios.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2496,"byte_end":2581,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2582,"byte_end":2585,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2586,"byte_end":2597,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"! # extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2598,"byte_end":2626,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"! # extern crate once_cell;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2627,"byte_end":2656,"line_start":58,"line_end":58,"column_start":1,"column_end":30}},{"value":"! # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2657,"byte_end":2685,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"! # use once_cell::sync::Lazy;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2686,"byte_end":2718,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"! # struct RoutingTable; struct Packet; impl RoutingTable { fn route(&self, _: Packet) {} }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2719,"byte_end":2812,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"! static ROUTING_TABLE: Lazy<ArcSwap<RoutingTable>> = Lazy::new(|| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2813,"byte_end":2883,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"!     ArcSwap::from_pointee(RoutingTable)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2884,"byte_end":2927,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"! });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2928,"byte_end":2935,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2936,"byte_end":2939,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! fn process_packet(packet: Packet) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2940,"byte_end":2979,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"!     let table = ROUTING_TABLE.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":2980,"byte_end":3021,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"!     table.route(packet);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3022,"byte_end":3050,"line_start":68,"line_end":68,"column_start":1,"column_end":29}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3051,"byte_end":3056,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"! # fn main() { process_packet(Packet); }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3057,"byte_end":3100,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3101,"byte_end":3108,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! # Type aliases","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3113,"byte_end":3131,"line_start":73,"line_end":73,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3132,"byte_end":3135,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! The most interesting types in the crate are the [ArcSwap] and [ArcSwapOption] (the latter","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3136,"byte_end":3229,"line_start":75,"line_end":75,"column_start":1,"column_end":94}},{"value":"! similar to `Atomic<Option<Arc<T>>>`). These are the types users will want to use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3230,"byte_end":3315,"line_start":76,"line_end":76,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3316,"byte_end":3319,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! Note, however, that these are type aliases of the [ArcSwapAny]. While that type is the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3320,"byte_end":3410,"line_start":78,"line_end":78,"column_start":1,"column_end":91}},{"value":"! low-level implementation and usually isn't referred to directly in the user code, all the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3411,"byte_end":3504,"line_start":79,"line_end":79,"column_start":1,"column_end":94}},{"value":"! relevant methods (and therefore documentation) is on it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3505,"byte_end":3565,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3566,"byte_end":3569,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! # Atomic orderings","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3570,"byte_end":3592,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3593,"byte_end":3596,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! Each operation on the [ArcSwapAny] type callable concurrently (eg. [load], but not","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3597,"byte_end":3683,"line_start":84,"line_end":84,"column_start":1,"column_end":87}},{"value":"! [into_inner]) contains at least one SeqCst atomic read-write operation, therefore even","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3684,"byte_end":3774,"line_start":85,"line_end":85,"column_start":1,"column_end":91}},{"value":"! operations on different instances have a defined global order of operations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3775,"byte_end":3855,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3856,"byte_end":3859,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! # Less usual needs","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3860,"byte_end":3882,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3883,"byte_end":3886,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"! There are some utilities that make the crate useful in more places than just the basics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3887,"byte_end":3978,"line_start":90,"line_end":90,"column_start":1,"column_end":92}},{"value":"! described above.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":3979,"byte_end":3999,"line_start":91,"line_end":91,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4000,"byte_end":4003,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! The [load_signal_safe] method can be safely used inside unix signal handlers (it is the only","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4004,"byte_end":4100,"line_start":93,"line_end":93,"column_start":1,"column_end":97}},{"value":"! one guaranteed to be safe there).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4101,"byte_end":4138,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4139,"byte_end":4142,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"! The [Cache] allows further speed improvements over simply using [load] every time. The downside","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4143,"byte_end":4242,"line_start":96,"line_end":96,"column_start":1,"column_end":100}},{"value":"! is less comfortable API (the caller needs to keep the cache around). Also, a cache may keep the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4243,"byte_end":4342,"line_start":97,"line_end":97,"column_start":1,"column_end":100}},{"value":"! older version of the value alive even when it is not in active use, until the cache is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4343,"byte_end":4433,"line_start":98,"line_end":98,"column_start":1,"column_end":91}},{"value":"! re-validated.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4434,"byte_end":4451,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4452,"byte_end":4455,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! The [access] module (and similar traits in the [cache] module) allows shielding independent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4456,"byte_end":4551,"line_start":101,"line_end":101,"column_start":1,"column_end":96}},{"value":"! parts of application from each other and from the exact structure of the *whole* configuration.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4552,"byte_end":4651,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"! This helps structuring the application and giving it access only to its own parts of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4652,"byte_end":4744,"line_start":103,"line_end":103,"column_start":1,"column_end":93}},{"value":"! configuration.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4745,"byte_end":4763,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4764,"byte_end":4767,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! Finally, the [gen_lock] module allows further customization of low-level locking/concurrency","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4768,"byte_end":4864,"line_start":106,"line_end":106,"column_start":1,"column_end":97}},{"value":"! details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4865,"byte_end":4877,"line_start":107,"line_end":107,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4878,"byte_end":4881,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! # Performance characteristics","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4882,"byte_end":4915,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4916,"byte_end":4919,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! There are several performance advantages of [ArcSwap] over [RwLock].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4920,"byte_end":4992,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4993,"byte_end":4996,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! ## Lock-free readers","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":4997,"byte_end":5021,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5022,"byte_end":5025,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! All the read operations are always [lock-free]. Most of the time, they are actually","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5026,"byte_end":5113,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"! [wait-free], the notable exception is the first [load] access in each thread (across all the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5114,"byte_end":5210,"line_start":116,"line_end":116,"column_start":1,"column_end":97}},{"value":"! instances of [ArcSwap]), as it sets up some thread-local data structures.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5211,"byte_end":5288,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5289,"byte_end":5292,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"! Whenever the documentation talks about *contention* in the context of [ArcSwap], it talks about","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5293,"byte_end":5392,"line_start":119,"line_end":119,"column_start":1,"column_end":100}},{"value":"! contention on the CPU level ‒ multpile cores having to deal with accessing the same cache line.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5393,"byte_end":5494,"line_start":120,"line_end":120,"column_start":1,"column_end":100}},{"value":"! This slows things down (compared to each one accessing its own cache line), but an eventual","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5495,"byte_end":5590,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"! progress is still guaranteed and the cost is significantly lower than parking threads as with","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5591,"byte_end":5688,"line_start":122,"line_end":122,"column_start":1,"column_end":98}},{"value":"! mutex-style contention.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5689,"byte_end":5716,"line_start":123,"line_end":123,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5717,"byte_end":5720,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Unfortunately writers are *not* [lock-free]. A reader stuck (suspended/killed) in a critical","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5721,"byte_end":5817,"line_start":125,"line_end":125,"column_start":1,"column_end":97}},{"value":"! section (few instructions long in case of [load]) may block a writer from completion.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5818,"byte_end":5907,"line_start":126,"line_end":126,"column_start":1,"column_end":90}},{"value":"! Nevertheless, a steady inflow of new readers nor other writers will not block the writer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":5908,"byte_end":6001,"line_start":127,"line_end":127,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6002,"byte_end":6005,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ## Speeds","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6006,"byte_end":6019,"line_start":129,"line_end":129,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6020,"byte_end":6023,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! The base line speed of read operations is similar to using an *uncontended* [`Mutex`][Mutex].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6024,"byte_end":6121,"line_start":131,"line_end":131,"column_start":1,"column_end":98}},{"value":"! However, [load] suffers no contention from any other read operations and only slight","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6122,"byte_end":6210,"line_start":132,"line_end":132,"column_start":1,"column_end":89}},{"value":"! ones during updates. The [`load_full`][load_full] operation is additionally contended only on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6211,"byte_end":6308,"line_start":133,"line_end":133,"column_start":1,"column_end":98}},{"value":"! the reference count of the [Arc] inside ‒ so, in general, while [Mutex] rapidly","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6309,"byte_end":6394,"line_start":134,"line_end":134,"column_start":1,"column_end":84}},{"value":"! loses its performance when being in active use by multiple threads at once and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6395,"byte_end":6477,"line_start":135,"line_end":135,"column_start":1,"column_end":83}},{"value":"! [RwLock] is slow to start with, [ArcSwap] mostly keeps its performance even when read by many","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6478,"byte_end":6575,"line_start":136,"line_end":136,"column_start":1,"column_end":98}},{"value":"! threads in parallel.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6576,"byte_end":6600,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6601,"byte_end":6604,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! Write operations are considered expensive. A write operation is more expensive than access to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6605,"byte_end":6702,"line_start":139,"line_end":139,"column_start":1,"column_end":98}},{"value":"! an *uncontended* [Mutex] and on some architectures even slower than uncontended","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6703,"byte_end":6786,"line_start":140,"line_end":140,"column_start":1,"column_end":84}},{"value":"! [RwLock]. However, it is faster than either under contention.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6787,"byte_end":6852,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6853,"byte_end":6856,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! There are some (very unscientific) [benchmarks] within the source code of the library.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6857,"byte_end":6947,"line_start":143,"line_end":143,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6948,"byte_end":6951,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! The exact numbers are highly dependant on the machine used (both absolute numbers and relative","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":6952,"byte_end":7050,"line_start":145,"line_end":145,"column_start":1,"column_end":99}},{"value":"! between different data structures). Not only architectures have a huge impact (eg. x86 vs ARM),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7051,"byte_end":7150,"line_start":146,"line_end":146,"column_start":1,"column_end":100}},{"value":"! but even AMD vs. Intel or two different Intel processors. Therefore, if what matters is more","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7151,"byte_end":7247,"line_start":147,"line_end":147,"column_start":1,"column_end":97}},{"value":"! the speed than the wait-free guarantees, you're advised to do your own measurements.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7248,"byte_end":7336,"line_start":148,"line_end":148,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7337,"byte_end":7340,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! Further speed improvements may be gained by the use of the [Cache].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7341,"byte_end":7412,"line_start":150,"line_end":150,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7413,"byte_end":7416,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"! ## Consistency","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7417,"byte_end":7435,"line_start":152,"line_end":152,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7436,"byte_end":7439,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! The combination of [wait-free] guarantees of readers and no contention between concurrent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7440,"byte_end":7533,"line_start":154,"line_end":154,"column_start":1,"column_end":94}},{"value":"! [load]s provides *consistent* performance characteristics of the synchronization mechanism.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7534,"byte_end":7629,"line_start":155,"line_end":155,"column_start":1,"column_end":96}},{"value":"! This might be important for soft-realtime applications (the CPU-level contention caused by a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7630,"byte_end":7726,"line_start":156,"line_end":156,"column_start":1,"column_end":97}},{"value":"! recent update/write operation might be problematic for some hard-realtime cases, though).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7727,"byte_end":7820,"line_start":157,"line_end":157,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7821,"byte_end":7824,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! ## Choosing the right reading operation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7825,"byte_end":7868,"line_start":159,"line_end":159,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7869,"byte_end":7872,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! There are several load operations available. While the general go-to one should be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7873,"byte_end":7959,"line_start":161,"line_end":161,"column_start":1,"column_end":87}},{"value":"! [load], there may be situations in which the others are a better match.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":7960,"byte_end":8035,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8036,"byte_end":8039,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! The [load] usually only borrows the instance from the shared [ArcSwap]. This makes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8040,"byte_end":8126,"line_start":164,"line_end":164,"column_start":1,"column_end":87}},{"value":"! it faster, because different threads don't contend on the reference count. There are two","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8127,"byte_end":8219,"line_start":165,"line_end":165,"column_start":1,"column_end":93}},{"value":"! situations when this borrow isn't possible. If the content gets changed, all existing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8220,"byte_end":8309,"line_start":166,"line_end":166,"column_start":1,"column_end":90}},{"value":"! [`Guard`][Guard]s are promoted to contain an owned instance. The promotion is done by the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8310,"byte_end":8403,"line_start":167,"line_end":167,"column_start":1,"column_end":94}},{"value":"! writer, but the readers still need to decrement the reference counts of the old instance when","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8404,"byte_end":8501,"line_start":168,"line_end":168,"column_start":1,"column_end":98}},{"value":"! they no longer use it, contending on the count.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8502,"byte_end":8553,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8554,"byte_end":8557,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! The other situation derives from internal implementation. The number of borrows each thread can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8558,"byte_end":8657,"line_start":171,"line_end":171,"column_start":1,"column_end":100}},{"value":"! have at each time (across all [Guard]s) is limited. If this limit is exceeded, an onwed","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8658,"byte_end":8749,"line_start":172,"line_end":172,"column_start":1,"column_end":92}},{"value":"! instance is created instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8750,"byte_end":8782,"line_start":173,"line_end":173,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8783,"byte_end":8786,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! Therefore, if you intend to hold onto the loaded value for extended time span, you may prefer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8787,"byte_end":8884,"line_start":175,"line_end":175,"column_start":1,"column_end":98}},{"value":"! [load_full]. It loads the pointer instance (`Arc`) without borrowing, which is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8885,"byte_end":8967,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"! slower (because of the possible contention on the reference count), but doesn't consume one of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":8968,"byte_end":9066,"line_start":177,"line_end":177,"column_start":1,"column_end":99}},{"value":"! the borrow slots, which will make it more likely for following [load]s to have a slot","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9067,"byte_end":9156,"line_start":178,"line_end":178,"column_start":1,"column_end":90}},{"value":"! available. Similarly, if some API needs an owned `Arc`, [load_full] is more convenient.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9157,"byte_end":9248,"line_start":179,"line_end":179,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9249,"byte_end":9252,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! There's also [load_signal_safe]. This is the only method guaranteed to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9253,"byte_end":9330,"line_start":181,"line_end":181,"column_start":1,"column_end":78}},{"value":"! safely usable inside a unix signal handler. It has no advantages outside of them, so it makes","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9331,"byte_end":9428,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"! it kind of niche one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9429,"byte_end":9454,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9455,"byte_end":9458,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! Additionally, it is possible to use a [`Cache`][Cache] to get further speed improvement at the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9459,"byte_end":9557,"line_start":185,"line_end":185,"column_start":1,"column_end":99}},{"value":"! cost of less comfortable API and possibly keeping the older values alive for longer than","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9558,"byte_end":9650,"line_start":186,"line_end":186,"column_start":1,"column_end":93}},{"value":"! necessary.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9651,"byte_end":9665,"line_start":187,"line_end":187,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9666,"byte_end":9669,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9670,"byte_end":9684,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9685,"byte_end":9688,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9689,"byte_end":9700,"line_start":191,"line_end":191,"column_start":1,"column_end":12}},{"value":"! extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9701,"byte_end":9727,"line_start":192,"line_end":192,"column_start":1,"column_end":27}},{"value":"! extern crate crossbeam_utils;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9728,"byte_end":9761,"line_start":193,"line_end":193,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9762,"byte_end":9765,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9766,"byte_end":9789,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9790,"byte_end":9793,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9794,"byte_end":9820,"line_start":197,"line_end":197,"column_start":1,"column_end":27}},{"value":"! use crossbeam_utils::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9821,"byte_end":9853,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9854,"byte_end":9857,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9858,"byte_end":9873,"line_start":200,"line_end":200,"column_start":1,"column_end":16}},{"value":"!     let config = ArcSwap::from(Arc::new(String::default()));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9874,"byte_end":9938,"line_start":201,"line_end":201,"column_start":1,"column_end":65}},{"value":"!     thread::scope(|scope| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9939,"byte_end":9970,"line_start":202,"line_end":202,"column_start":1,"column_end":32}},{"value":"!         scope.spawn(|_| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":9971,"byte_end":10000,"line_start":203,"line_end":203,"column_start":1,"column_end":30}},{"value":"!             let new_conf = Arc::new(\"New configuration\".to_owned());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10001,"byte_end":10073,"line_start":204,"line_end":204,"column_start":1,"column_end":73}},{"value":"!             config.store(new_conf);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10074,"byte_end":10113,"line_start":205,"line_end":205,"column_start":1,"column_end":40}},{"value":"!         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10114,"byte_end":10129,"line_start":206,"line_end":206,"column_start":1,"column_end":16}},{"value":"!         for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10130,"byte_end":10158,"line_start":207,"line_end":207,"column_start":1,"column_end":29}},{"value":"!             scope.spawn(|_| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10159,"byte_end":10192,"line_start":208,"line_end":208,"column_start":1,"column_end":34}},{"value":"!                 loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10193,"byte_end":10219,"line_start":209,"line_end":209,"column_start":1,"column_end":27}},{"value":"!                     let cfg = config.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10220,"byte_end":10268,"line_start":210,"line_end":210,"column_start":1,"column_end":49}},{"value":"!                     if !cfg.is_empty() {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10269,"byte_end":10313,"line_start":211,"line_end":211,"column_start":1,"column_end":45}},{"value":"!                         assert_eq!(**cfg, \"New configuration\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10314,"byte_end":10381,"line_start":212,"line_end":212,"column_start":1,"column_end":68}},{"value":"!                         return;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10382,"byte_end":10417,"line_start":213,"line_end":213,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10418,"byte_end":10443,"line_start":214,"line_end":214,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10444,"byte_end":10465,"line_start":215,"line_end":215,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10466,"byte_end":10485,"line_start":216,"line_end":216,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10486,"byte_end":10499,"line_start":217,"line_end":217,"column_start":1,"column_end":14}},{"value":"!     }).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10500,"byte_end":10520,"line_start":218,"line_end":218,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10521,"byte_end":10526,"line_start":219,"line_end":219,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10527,"byte_end":10534,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10535,"byte_end":10538,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"! # Features","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10539,"byte_end":10553,"line_start":222,"line_end":222,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10554,"byte_end":10557,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! The `unstable-weak` feature adds the ability to use arc-swap with the [Weak] pointer too,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10558,"byte_end":10651,"line_start":224,"line_end":224,"column_start":1,"column_end":94}},{"value":"! through the [ArcSwapWeak] type. This requires the nightly Rust compiler. Also, the interface","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10652,"byte_end":10748,"line_start":225,"line_end":225,"column_start":1,"column_end":97}},{"value":"! and support **is not** part of API stability guarantees and may be arbitrarily changed or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10749,"byte_end":10842,"line_start":226,"line_end":226,"column_start":1,"column_end":94}},{"value":"! removed in future releases (it is mostly waiting for the `weak_into_raw` nightly feature to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10843,"byte_end":10938,"line_start":227,"line_end":227,"column_start":1,"column_end":96}},{"value":"! stabilize before stabilizing it in this crate).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10939,"byte_end":10990,"line_start":228,"line_end":228,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10991,"byte_end":10994,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"! # Internal details","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":10995,"byte_end":11017,"line_start":230,"line_end":230,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11018,"byte_end":11021,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"! The crate uses a hybrid approach of stripped-down hazard pointers and something close to a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11022,"byte_end":11116,"line_start":232,"line_end":232,"column_start":1,"column_end":95}},{"value":"! sharded spin lock with asymmetric read/write usage (called the generation lock).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11117,"byte_end":11201,"line_start":233,"line_end":233,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11202,"byte_end":11205,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"! Further details are described in comments inside the source code and in two blog posts:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11206,"byte_end":11297,"line_start":235,"line_end":235,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11298,"byte_end":11301,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! * [Making `Arc` more atomic](https://vorner.github.io/2018/06/24/arc-more-atomic.html)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11302,"byte_end":11392,"line_start":237,"line_end":237,"column_start":1,"column_end":91}},{"value":"! * [More tricks up in the ArcSwap's sleeve](https://vorner.github.io/2019/04/06/tricks-in-arc-swap.html)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11393,"byte_end":11500,"line_start":238,"line_end":238,"column_start":1,"column_end":108}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11501,"byte_end":11504,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"! [Arc]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11505,"byte_end":11566,"line_start":240,"line_end":240,"column_start":1,"column_end":62}},{"value":"! [Weak]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11567,"byte_end":11629,"line_start":241,"line_end":241,"column_start":1,"column_end":63}},{"value":"! [RwLock]: https://doc.rust-lang.org/std/sync/struct.RwLock.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11630,"byte_end":11697,"line_start":242,"line_end":242,"column_start":1,"column_end":68}},{"value":"! [Mutex]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11698,"byte_end":11763,"line_start":243,"line_end":243,"column_start":1,"column_end":66}},{"value":"! [lock-free]: https://en.wikipedia.org/wiki/Non-blocking_algorithm#Lock-freedom","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11764,"byte_end":11846,"line_start":244,"line_end":244,"column_start":1,"column_end":83}},{"value":"! [wait-free]: https://en.wikipedia.org/wiki/Non-blocking_algorithm#Wait-freedom","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11847,"byte_end":11929,"line_start":245,"line_end":245,"column_start":1,"column_end":83}},{"value":"! [load]: struct.ArcSwapAny.html#method.load","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11930,"byte_end":11976,"line_start":246,"line_end":246,"column_start":1,"column_end":47}},{"value":"! [into_inner]: struct.ArcSwapAny.html#method.into_inner","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":11977,"byte_end":12035,"line_start":247,"line_end":247,"column_start":1,"column_end":59}},{"value":"! [load_full]: struct.ArcSwapAny.html#method.load_full","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12036,"byte_end":12092,"line_start":248,"line_end":248,"column_start":1,"column_end":57}},{"value":"! [load_signal_safe]: struct.ArcSwapAny.html#method.peek_signal_safe","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12093,"byte_end":12163,"line_start":249,"line_end":249,"column_start":1,"column_end":71}},{"value":"! [benchmarks]: https://github.com/vorner/arc-swap/tree/master/benchmarks","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12164,"byte_end":12239,"line_start":250,"line_end":250,"column_start":1,"column_end":76}},{"value":"! [ArcSwapWeak]: type.ArcSwapWeak.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12240,"byte_end":12280,"line_start":251,"line_end":251,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"access","qualname":"::access","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":23},{"krate":0,"index":441},{"krate":0,"index":445},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":448},{"krate":0,"index":461},{"krate":0,"index":457},{"krate":0,"index":453},{"krate":0,"index":61},{"krate":0,"index":65},{"krate":0,"index":69},{"krate":0,"index":464},{"krate":0,"index":481},{"krate":0,"index":476},{"krate":0,"index":471},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":485},{"krate":0,"index":520},{"krate":0,"index":517},{"krate":0,"index":514},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":500},{"krate":0,"index":493},{"krate":0,"index":489},{"krate":0,"index":87},{"krate":0,"index":522},{"krate":0,"index":557},{"krate":0,"index":554},{"krate":0,"index":551},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":537},{"krate":0,"index":530},{"krate":0,"index":526},{"krate":0,"index":91}],"decl_id":null,"docs":" Abstracting over accessing parts of stored value.","sig":null,"attributes":[{"value":"! Abstracting over accessing parts of stored value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73458,"byte_end":73511,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73512,"byte_end":73515,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Sometimes, there's a big globalish data structure (like a configuration for the whole program).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73516,"byte_end":73615,"line_start":3,"line_end":3,"column_start":1,"column_end":100}},{"value":"! Then there are parts of the program that need access to up-to-date version of their *part* of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73616,"byte_end":73713,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! the configuration, but for reasons of code separation and reusability, it is not desirable to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73714,"byte_end":73811,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"! pass the whole configuration to each of the parts.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73812,"byte_end":73866,"line_start":6,"line_end":6,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73867,"byte_end":73870,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! This module provides means to grant the parts access to the relevant subsets of such global","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73871,"byte_end":73966,"line_start":8,"line_end":8,"column_start":1,"column_end":96}},{"value":"! data structure while masking the fact it is part of the bigger whole from the component.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":73967,"byte_end":74059,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74060,"byte_end":74063,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Note that the [`cache`][::cache] module has its own [`Access`][::cache::Access] trait that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74064,"byte_end":74158,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"! serves a similar purpose, but with cached access. The signatures are different, therefore an","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74159,"byte_end":74255,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"! incompatible trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74256,"byte_end":74279,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74280,"byte_end":74283,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! # The general idea","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74284,"byte_end":74306,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74307,"byte_end":74310,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! Each part of the code accepts generic [`Access<T>`][Access] for the `T` of its interest. This","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74311,"byte_end":74408,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"! provides means to load current version of the structure behind the scenes and get only the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74409,"byte_end":74503,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"! relevant part, without knowing what the big structure is.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74504,"byte_end":74565,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74566,"byte_end":74569,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! For technical reasons, the [`Access`] trait is not object safe. If type erasure is desired, it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74570,"byte_end":74668,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"! is possible use the [`DynAccess`][::access::DynAccess] instead, which is object safe, but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74669,"byte_end":74762,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"! slightly slower.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74763,"byte_end":74783,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74784,"byte_end":74787,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! For some cases, it is possible to use [`ArcSwapAny::map`]. If that is not flexible enough, the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74788,"byte_end":74886,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"! [`Map`] type can be created directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74887,"byte_end":74928,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74929,"byte_end":74932,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! Note that the [`Access`] trait is also implemented for [`ArcSwapAny`] itself. Additionally,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":74933,"byte_end":75028,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"! there's the [`Constant`][::access::Constant] helper type, which is useful mostly for testing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75029,"byte_end":75125,"line_start":29,"line_end":29,"column_start":1,"column_end":97}},{"value":"! (it doesn't allow reloading).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75126,"byte_end":75159,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75160,"byte_end":75163,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! # Performance","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75164,"byte_end":75181,"line_start":32,"line_end":32,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75182,"byte_end":75185,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! In general, these utilities use [`ArcSwapAny::load`] internally and then apply the provided","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75186,"byte_end":75281,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"! transformation. This has several consequences:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75282,"byte_end":75332,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75333,"byte_end":75336,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! * Limitations of the [`load`][ArcSwapAny::load] apply ‒ including the recommendation to not","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75337,"byte_end":75434,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"!   hold the returned guard object for too long, but long enough to get consistency.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75435,"byte_end":75521,"line_start":38,"line_end":38,"column_start":1,"column_end":87}},{"value":"! * The transformation should be cheap ‒ optimally just borrowing into the structure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75522,"byte_end":75611,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75612,"byte_end":75615,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75616,"byte_end":75630,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75631,"byte_end":75634,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75635,"byte_end":75646,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"! extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75647,"byte_end":75673,"line_start":44,"line_end":44,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75674,"byte_end":75677,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75678,"byte_end":75701,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"! use std::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75702,"byte_end":75722,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"! use std::time::Duration;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75723,"byte_end":75751,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75752,"byte_end":75755,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75756,"byte_end":75782,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"! use arc_swap::access::{Access, Constant, Map};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75783,"byte_end":75833,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75834,"byte_end":75837,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! fn work_with_usize<A: Access<usize> + Send + 'static>(a: A) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75838,"byte_end":75903,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"!     thread::spawn(move || {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75904,"byte_end":75935,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"!         loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75936,"byte_end":75954,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"!             let value = a.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75955,"byte_end":75992,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"!             println!(\"{}\", *value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":75993,"byte_end":76032,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"!             // Not strictly necessary, but dropping the guard can free some resources, like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76033,"byte_end":76128,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"!             // slots for tracking what values are still in use. We do it before the sleeping,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76129,"byte_end":76226,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"!             // not at the end of the scope.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76227,"byte_end":76274,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"!             drop(value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76275,"byte_end":76303,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"!             thread::sleep(Duration::from_millis(50));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76304,"byte_end":76361,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"!         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76362,"byte_end":76375,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76376,"byte_end":76387,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76388,"byte_end":76393,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76394,"byte_end":76397,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! // Passing the whole thing directly","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76398,"byte_end":76437,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"! // (If we kept another Arc to it, we could change the value behind the scenes)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76438,"byte_end":76520,"line_start":68,"line_end":68,"column_start":1,"column_end":83}},{"value":"! work_with_usize(Arc::new(ArcSwap::from_pointee(42)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76521,"byte_end":76578,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76579,"byte_end":76582,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! // Passing a subset of a structure","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76583,"byte_end":76621,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"! struct Cfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76622,"byte_end":76638,"line_start":72,"line_end":72,"column_start":1,"column_end":17}},{"value":"!     value: usize,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76639,"byte_end":76660,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"! }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76661,"byte_end":76666,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76667,"byte_end":76670,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! let cfg = Arc::new(ArcSwap::from_pointee(Cfg { value: 0 }));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76671,"byte_end":76735,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"! work_with_usize(Map::new(Arc::clone(&cfg), |cfg: &Cfg| &cfg.value));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76736,"byte_end":76808,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"! cfg.store(Arc::new(Cfg { value: 42 }));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76809,"byte_end":76852,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76853,"byte_end":76856,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! // Passing a constant that can't change. Useful mostly for testing purposes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76857,"byte_end":76937,"line_start":80,"line_end":80,"column_start":1,"column_end":81}},{"value":"! work_with_usize(Constant(42));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76938,"byte_end":76972,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"! ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":76973,"byte_end":76980,"line_start":82,"line_end":82,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77410,"byte_end":77416,"line_start":97,"line_end":97,"column_start":11,"column_end":17},"name":"Access","qualname":"::access::Access","value":"Access<T>","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16}],"decl_id":null,"docs":" Abstracts over ways code can get access to a value of type `T`.","sig":null,"attributes":[{"value":"/ Abstracts over ways code can get access to a value of type `T`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77166,"byte_end":77233,"line_start":93,"line_end":93,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77234,"byte_end":77237,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ This is the trait that parts of code will use when accessing a subpart of the big data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77238,"byte_end":77328,"line_start":95,"line_end":95,"column_start":1,"column_end":91}},{"value":"/ structure. See the [module documentation](index.html) for details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77329,"byte_end":77399,"line_start":96,"line_end":96,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77711,"byte_end":77716,"line_start":103,"line_end":103,"column_start":10,"column_end":15},"name":"Guard","qualname":"::access::Access::Guard","value":"type Guard: Deref<Target = T>;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" A guard object containing the value and keeping it alive.","sig":null,"attributes":[{"value":"/ A guard object containing the value and keeping it alive.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77426,"byte_end":77487,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77492,"byte_end":77495,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For technical reasons, the library doesn't allow direct access into the stored value. A","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77500,"byte_end":77591,"line_start":100,"line_end":100,"column_start":5,"column_end":96}},{"value":"/ temporary guard object must be loaded, that keeps the actual value alive for the time of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77596,"byte_end":77688,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ use.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77693,"byte_end":77701,"line_start":102,"line_end":102,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77906,"byte_end":77910,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"load","qualname":"::access::Access::load","value":"fn (&self) -> Self::Guard","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" The loading method.","sig":null,"attributes":[{"value":"/ The loading method.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77742,"byte_end":77765,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77770,"byte_end":77773,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This returns the guard that holds the actual value. Should be called anew each time a fresh","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77778,"byte_end":77873,"line_start":107,"line_end":107,"column_start":5,"column_end":100}},{"value":"/ value is needed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77878,"byte_end":77898,"line_start":108,"line_end":108,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78382,"byte_end":78393,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"DirectDeref","qualname":"::access::DirectDeref","value":"","parent":null,"children":[],"decl_id":null,"docs":" Plumbing type.","sig":null,"attributes":[{"value":"/ Plumbing type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78266,"byte_end":78284,"line_start":127,"line_end":127,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78285,"byte_end":78288,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Accessible, but not expected to be used directly in general.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78289,"byte_end":78353,"line_start":129,"line_end":129,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79161,"byte_end":79169,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"DynGuard","qualname":"::access::DynGuard","value":"","parent":null,"children":[],"decl_id":null,"docs":" Plumbing type.","sig":null,"attributes":[{"value":"/ Plumbing type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79037,"byte_end":79055,"line_start":161,"line_end":161,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79056,"byte_end":79059,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ This is the guard of [`DynAccess`] trait. It is effectively `Box<Deref<Target = T>>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79060,"byte_end":79149,"line_start":163,"line_end":163,"column_start":1,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80117,"byte_end":80126,"line_start":199,"line_end":199,"column_start":11,"column_end":20},"name":"DynAccess","qualname":"::access::DynAccess","value":"DynAccess<T>","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" An object-safe version of the [`Access`] trait.","sig":null,"attributes":[{"value":"/ An object-safe version of the [`Access`] trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79321,"byte_end":79372,"line_start":173,"line_end":173,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79373,"byte_end":79376,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This can be used instead of the [`Access`] trait in case a type erasure is desired. This has","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79377,"byte_end":79473,"line_start":175,"line_end":175,"column_start":1,"column_end":97}},{"value":"/ the effect of performance hit (due to boxing of the result and due to dynamic dispatch), but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79474,"byte_end":79570,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"/ makes certain code simpler and possibly makes the executable smaller.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79571,"byte_end":79644,"line_start":177,"line_end":177,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79645,"byte_end":79648,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for everything that implements [`Access`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79649,"byte_end":79729,"line_start":179,"line_end":179,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79730,"byte_end":79733,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79734,"byte_end":79748,"line_start":181,"line_end":181,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79749,"byte_end":79752,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79753,"byte_end":79764,"line_start":183,"line_end":183,"column_start":1,"column_end":12}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79765,"byte_end":79791,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79792,"byte_end":79795,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ use std::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79796,"byte_end":79816,"line_start":186,"line_end":186,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79817,"byte_end":79820,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ use arc_swap::access::{Constant, DynAccess};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79821,"byte_end":79869,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79870,"byte_end":79873,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ fn do_something(value: Box<dyn DynAccess<usize> + Send>) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79874,"byte_end":79936,"line_start":190,"line_end":190,"column_start":1,"column_end":63}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79937,"byte_end":79968,"line_start":191,"line_end":191,"column_start":1,"column_end":32}},{"value":"/         let v = value.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79969,"byte_end":80002,"line_start":192,"line_end":192,"column_start":1,"column_end":34}},{"value":"/         println!(\"{}\", *v);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80003,"byte_end":80034,"line_start":193,"line_end":193,"column_start":1,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80035,"byte_end":80046,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80047,"byte_end":80052,"line_start":195,"line_end":195,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80053,"byte_end":80056,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ do_something(Box::new(Constant(42)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80057,"byte_end":80098,"line_start":197,"line_end":197,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80099,"byte_end":80106,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80183,"byte_end":80187,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"load","qualname":"::access::DynAccess::load","value":"fn (&self) -> DynGuard<T>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" The equivalent of [`Access::load`].\n","sig":null,"attributes":[{"value":"/ The equivalent of [`Access::load`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80136,"byte_end":80175,"line_start":200,"line_end":200,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80577,"byte_end":80585,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"MapGuard","qualname":"::access::MapGuard","value":"MapGuard {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"decl_id":null,"docs":" A plumbing type.","sig":null,"attributes":[{"value":"/ A plumbing type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80385,"byte_end":80405,"line_start":214,"line_end":214,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80406,"byte_end":80409,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ This is the guard type for [`Map`]. It is accessible and nameable, but is not expected to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80410,"byte_end":80506,"line_start":216,"line_end":216,"column_start":1,"column_end":97}},{"value":"/ generally used directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80507,"byte_end":80535,"line_start":217,"line_end":217,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":464},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81867,"byte_end":81870,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"Map","qualname":"::access::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470}],"decl_id":null,"docs":" An adaptor to provide access to a part of larger structure.","sig":null,"attributes":[{"value":"/ An adaptor to provide access to a part of larger structure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81648,"byte_end":81711,"line_start":255,"line_end":255,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81712,"byte_end":81715,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ This is the *active* part of this module. Use the [module documentation](index.html) for the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81716,"byte_end":81812,"line_start":257,"line_end":257,"column_start":1,"column_end":97}},{"value":"/ details.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81813,"byte_end":81825,"line_start":258,"line_end":258,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82607,"byte_end":82610,"line_start":278,"line_end":278,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<A, T, F>>::new","value":"fn <R> (access: A, projection: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance.","sig":null,"attributes":[{"value":"/ Creates a new instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81984,"byte_end":82011,"line_start":267,"line_end":267,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82016,"byte_end":82019,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82024,"byte_end":82040,"line_start":269,"line_end":269,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82045,"byte_end":82048,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ * `access`: Access to the bigger structure. This is usually something like `Arc<ArcSwap>`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82053,"byte_end":82146,"line_start":271,"line_end":271,"column_start":5,"column_end":98}},{"value":"/   or `&ArcSwap`. It is technically possible to use any other [`Access`] here, though, for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82151,"byte_end":82244,"line_start":272,"line_end":272,"column_start":5,"column_end":98}},{"value":"/   example to sub-delegate into even smaller structure from a [`Map`] (or generic","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82249,"byte_end":82333,"line_start":273,"line_end":273,"column_start":5,"column_end":89}},{"value":"/   [`Access`]).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82338,"byte_end":82356,"line_start":274,"line_end":274,"column_start":5,"column_end":23}},{"value":"/ * `projection`: A function (or closure) responsible to providing a reference into the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82361,"byte_end":82450,"line_start":275,"line_end":275,"column_start":5,"column_end":94}},{"value":"/   bigger bigger structure, selecting just subset of it. In general, it is expected to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82455,"byte_end":82547,"line_start":276,"line_end":276,"column_start":5,"column_end":97}},{"value":"/   *cheap* (like only taking reference).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82552,"byte_end":82595,"line_start":277,"line_end":277,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83365,"byte_end":83378,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"ConstantDeref","qualname":"::access::ConstantDeref","value":"","parent":null,"children":[],"decl_id":null,"docs":" A plumbing type.","sig":null,"attributes":[{"value":"/ A plumbing type.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83143,"byte_end":83163,"line_start":306,"line_end":306,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83164,"byte_end":83167,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ This is the guard type for [`Constant`]. It is accessible, but is not expected to be generally","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83168,"byte_end":83266,"line_start":308,"line_end":308,"column_start":1,"column_end":99}},{"value":"/ used directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83267,"byte_end":83285,"line_start":309,"line_end":309,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":522},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83964,"byte_end":83972,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"Constant","qualname":"::access::Constant","value":"","parent":null,"children":[],"decl_id":null,"docs":" Access to an constant.","sig":null,"attributes":[{"value":"/ Access to an constant.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83498,"byte_end":83524,"line_start":320,"line_end":320,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83525,"byte_end":83528,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ This wraps a constant value to provide [`Access`] to it. It is constant in the sense that,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83529,"byte_end":83623,"line_start":322,"line_end":322,"column_start":1,"column_end":95}},{"value":"/ unlike [`ArcSwapAny`] and [`Map`], the loaded value will always stay the same (there's no","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83624,"byte_end":83717,"line_start":323,"line_end":323,"column_start":1,"column_end":94}},{"value":"/ remote `store`).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83718,"byte_end":83738,"line_start":324,"line_end":324,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83739,"byte_end":83742,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ The purpose is mostly testing and plugging a parameter that works generically from code that","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83743,"byte_end":83839,"line_start":326,"line_end":326,"column_start":1,"column_end":97}},{"value":"/ doesn't need the updating functionality.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83840,"byte_end":83884,"line_start":327,"line_end":327,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87803,"byte_end":87808,"line_start":25,"line_end":25,"column_start":11,"column_end":16},"name":"AsRaw","qualname":"::as_raw::AsRaw","value":"AsRaw<T>","parent":null,"children":[{"krate":0,"index":101}],"decl_id":null,"docs":" A trait describing things that can be turned into a raw pointer.","sig":null,"attributes":[{"value":"/ A trait describing things that can be turned into a raw pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87046,"byte_end":87114,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87115,"byte_end":87118,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is just an abstraction of things that can be passed to the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87119,"byte_end":87186,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ [`compare_and_swap`](struct.ArcSwapAny.html#method.compare_and_swap).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87187,"byte_end":87260,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87261,"byte_end":87264,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87265,"byte_end":87279,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87280,"byte_end":87283,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87284,"byte_end":87291,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87292,"byte_end":87309,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87310,"byte_end":87333,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87334,"byte_end":87337,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87338,"byte_end":87370,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87371,"byte_end":87374,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let a = Arc::new(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87375,"byte_end":87400,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ let shared = ArcSwapOption::from(Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87401,"byte_end":87460,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87461,"byte_end":87464,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ shared.compare_and_swap(&a, Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87465,"byte_end":87519,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/ shared.compare_and_swap(&None::<Arc<_>>, Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87520,"byte_end":87587,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ shared.compare_and_swap(shared.load(), Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87588,"byte_end":87653,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ shared.compare_and_swap(&shared.load(), Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87654,"byte_end":87720,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ shared.compare_and_swap(ptr::null(), Some(Arc::clone(&a)));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87721,"byte_end":87784,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87785,"byte_end":87792,"line_start":24,"line_end":24,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87868,"byte_end":87874,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"as_raw","qualname":"::as_raw::AsRaw::as_raw","value":"fn (&self) -> *mut T","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Converts the value into a raw pointer.\n","sig":null,"attributes":[{"value":"/ Converts the value into a raw pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":87818,"byte_end":87860,"line_start":26,"line_end":26,"column_start":5,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cache","qualname":"::cache","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":559},{"krate":0,"index":568},{"krate":0,"index":564},{"krate":0,"index":129},{"krate":0,"index":141},{"krate":0,"index":146},{"krate":0,"index":572},{"krate":0,"index":583},{"krate":0,"index":578},{"krate":0,"index":151}],"decl_id":null,"docs":" Caching handle into the [ArcSwapAny].","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88469,"byte_end":88490,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"! Caching handle into the [ArcSwapAny].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88492,"byte_end":88533,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88534,"byte_end":88537,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! The [Cache] keeps a copy of the internal [Arc] for faster access.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88538,"byte_end":88607,"line_start":5,"line_end":5,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88608,"byte_end":88611,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [Arc]: std::sync::Arc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88612,"byte_end":88637,"line_start":7,"line_end":7,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":126},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89107,"byte_end":89113,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"Access","qualname":"::cache::Access","value":"Access<T>","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" Generalization of caches providing access to `T`.","sig":null,"attributes":[{"value":"/ Generalization of caches providing access to `T`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88780,"byte_end":88833,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88834,"byte_end":88837,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This abstracts over all kinds of caches that can provide a cheap access to values of type `T`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88838,"byte_end":88936,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ This is useful in cases where some code doesn't care if the `T` is the whole structure or just","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":88937,"byte_end":89035,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ a part of it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89036,"byte_end":89053,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89054,"byte_end":89057,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See the example at [`Cache::map`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89058,"byte_end":89096,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89265,"byte_end":89269,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"load","qualname":"::cache::Access::load","value":"fn (&mut self) -> &T","parent":{"krate":0,"index":126},"children":[],"decl_id":null,"docs":" Loads the value from cache.","sig":null,"attributes":[{"value":"/ Loads the value from cache.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89123,"byte_end":89154,"line_start":24,"line_end":24,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89159,"byte_end":89162,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This revalidates the value in the cache, then provides the access to the cached value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89167,"byte_end":89257,"line_start":26,"line_end":26,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91027,"byte_end":91032,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"Cache","qualname":"::cache::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" Caching handle for [`ArcSwapAny`][ArcSwapAny].","sig":null,"attributes":[{"value":"/ Caching handle for [`ArcSwapAny`][ArcSwapAny].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89291,"byte_end":89341,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89342,"byte_end":89345,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Instead of loading the [`Arc`][Arc] on every request from the shared storage, this keeps","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89346,"byte_end":89438,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"/ another copy inside itself. Upon request it only cheaply revalidates it is up to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89439,"byte_end":89523,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ date. If it is, access is significantly faster. If it is stale, the [load_full] is done and the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89524,"byte_end":89623,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ cache value is replaced. Under a read-heavy loads, the measured speedup are 10-25 times,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89624,"byte_end":89716,"line_start":35,"line_end":35,"column_start":1,"column_end":93}},{"value":"/ depending on the architecture.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89717,"byte_end":89751,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89752,"byte_end":89755,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ There are, however, downsides:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89756,"byte_end":89790,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89791,"byte_end":89794,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ * The handle needs to be kept around by the caller (usually, one per thread). This is fine if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89795,"byte_end":89892,"line_start":40,"line_end":40,"column_start":1,"column_end":98}},{"value":"/   there's one global `ArcSwapAny`, but starts being tricky with eg. data structures build from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89893,"byte_end":89991,"line_start":41,"line_end":41,"column_start":1,"column_end":99}},{"value":"/   them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":89992,"byte_end":90003,"line_start":42,"line_end":42,"column_start":1,"column_end":12}},{"value":"/ * As it keeps a copy of the [Arc] inside the cache, the old value may be kept alive for longer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90004,"byte_end":90102,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/   period of time ‒ it is replaced by the new value on [load][Cache::load]. You may not want to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90103,"byte_end":90203,"line_start":44,"line_end":44,"column_start":1,"column_end":99}},{"value":"/   use this if dropping the old value in timely manner is important (possibly because of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90204,"byte_end":90295,"line_start":45,"line_end":45,"column_start":1,"column_end":92}},{"value":"/   releasing large amount of RAM or because of closing file handles).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90296,"byte_end":90368,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90369,"byte_end":90372,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90373,"byte_end":90387,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90388,"byte_end":90391,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90392,"byte_end":90403,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # fn do_something<V>(_v: V) { }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90404,"byte_end":90439,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90440,"byte_end":90463,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90464,"byte_end":90467,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ use arc_swap::{ArcSwap, Cache};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90468,"byte_end":90503,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90504,"byte_end":90507,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ let shared = Arc::new(ArcSwap::from_pointee(42));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90508,"byte_end":90561,"line_start":56,"line_end":56,"column_start":1,"column_end":54}},{"value":"/ // Start 10 worker threads...","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90562,"byte_end":90595,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90596,"byte_end":90616,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/     let mut cache = Cache::new(Arc::clone(&shared));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90617,"byte_end":90673,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90674,"byte_end":90710,"line_start":60,"line_end":60,"column_start":1,"column_end":37}},{"value":"/         // Keep loading it like mad..","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90711,"byte_end":90752,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/         loop {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90753,"byte_end":90771,"line_start":62,"line_end":62,"column_start":1,"column_end":19}},{"value":"/             let value = cache.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90772,"byte_end":90813,"line_start":63,"line_end":63,"column_start":1,"column_end":42}},{"value":"/             do_something(value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90814,"byte_end":90850,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/         }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90851,"byte_end":90864,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90865,"byte_end":90876,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90877,"byte_end":90882,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ shared.store(Arc::new(12));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90883,"byte_end":90914,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90915,"byte_end":90922,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90923,"byte_end":90926,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [Arc]: std::sync::Arc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90927,"byte_end":90952,"line_start":71,"line_end":71,"column_start":1,"column_end":26}},{"value":"/ [load_full]: ArcSwapAny::load_full","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":90953,"byte_end":90991,"line_start":72,"line_end":72,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91690,"byte_end":91693,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache<A, T>>::new","value":"fn (arc_swap: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new caching handle.","sig":null,"attributes":[{"value":"/ Creates a new caching handle.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91190,"byte_end":91223,"line_start":85,"line_end":85,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91228,"byte_end":91231,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The parameter is something dereferencing into an [`ArcSwapAny`] (eg. either to [`ArcSwap`]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91236,"byte_end":91330,"line_start":87,"line_end":87,"column_start":5,"column_end":99}},{"value":"/ or [`ArcSwapOption`]). That can be [`ArcSwapAny`] itself, but that's not very useful. But","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91335,"byte_end":91428,"line_start":88,"line_end":88,"column_start":5,"column_end":98}},{"value":"/ it also can be a reference to it or `Arc`, which makes it possible to share the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91433,"byte_end":91516,"line_start":89,"line_end":89,"column_start":5,"column_end":88}},{"value":"/ [`ArcSwapAny`] with multiple caches or access it in non-cached way too.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91521,"byte_end":91596,"line_start":90,"line_end":90,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91601,"byte_end":91604,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ [`ArcSwapOption`]: ::ArcSwapOption","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91609,"byte_end":91647,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`ArcSwap`]: ::ArcSwap","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91652,"byte_end":91678,"line_start":93,"line_end":93,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91881,"byte_end":91889,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"arc_swap","qualname":"<Cache<A, T>>::arc_swap","value":"fn (&self) -> &A::Target","parent":null,"children":[],"decl_id":null,"docs":" Gives access to the (possibly shared) cached [`ArcSwapAny`].\n","sig":null,"attributes":[{"value":"/ Gives access to the (possibly shared) cached [`ArcSwapAny`].","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91805,"byte_end":91869,"line_start":99,"line_end":99,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92351,"byte_end":92355,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"load","qualname":"<Cache<A, T>>::load","value":"fn (&mut self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Loads the currently held value.","sig":null,"attributes":[{"value":"/ Loads the currently held value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91947,"byte_end":91982,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91987,"byte_end":91990,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This first checks if the cached value is up to date. This check is very cheap.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91995,"byte_end":92077,"line_start":106,"line_end":106,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92082,"byte_end":92085,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If it is up to date, the cached value is simply returned without additional costs. If it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92090,"byte_end":92185,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/ outdated, a load is done on the underlying shared storage. The newly loaded value is then","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92190,"byte_end":92283,"line_start":109,"line_end":109,"column_start":5,"column_end":98}},{"value":"/ stored in the cache and returned.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92288,"byte_end":92325,"line_start":110,"line_end":110,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":92330,"byte_end":92339,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95001,"byte_end":95004,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"map","qualname":"<Cache<A, T>>::map","value":"fn <F, U> (self, f: F) -> MapCache<A, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Turns this cache into a cache with a projection inside the cached value.","sig":null,"attributes":[{"value":"/ Turns this cache into a cache with a projection inside the cached value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93073,"byte_end":93149,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93154,"byte_end":93157,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ You'd use this in case when some part of code needs access to fresh values of `U`, however","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93162,"byte_end":93256,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ a bigger structure containing `U` is provided by this cache. The possibility of giving the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93261,"byte_end":93355,"line_start":137,"line_end":137,"column_start":5,"column_end":99}},{"value":"/ whole structure to the part of the code falls short in terms of reusability (the part of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93360,"byte_end":93452,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ the code could be used within multiple contexts, each with a bigger different structure","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93457,"byte_end":93548,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ containing `U`) and code separation (the code shouldn't needs to know about the big","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93553,"byte_end":93640,"line_start":140,"line_end":140,"column_start":5,"column_end":92}},{"value":"/ structure).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93645,"byte_end":93660,"line_start":141,"line_end":141,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93665,"byte_end":93668,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93673,"byte_end":93686,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93691,"byte_end":93694,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ As the provided `f` is called inside every [`load`][Access::load], this one should be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93699,"byte_end":93788,"line_start":145,"line_end":145,"column_start":5,"column_end":94}},{"value":"/ cheap. Most often it is expected to be just a closure taking reference of some inner field.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93793,"byte_end":93888,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93893,"byte_end":93896,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ For the same reasons, it should not have side effects and should never panic (these will","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93901,"byte_end":93993,"line_start":148,"line_end":148,"column_start":5,"column_end":97}},{"value":"/ not break Rust's safety rules, but might produce behaviour you don't expect).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":93998,"byte_end":94079,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94084,"byte_end":94087,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94092,"byte_end":94106,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94111,"byte_end":94114,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94119,"byte_end":94130,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94135,"byte_end":94161,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94166,"byte_end":94169,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94174,"byte_end":94200,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"/ use arc_swap::cache::{Access, Cache};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94205,"byte_end":94246,"line_start":157,"line_end":157,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94251,"byte_end":94254,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ struct InnerCfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94259,"byte_end":94280,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/     answer: usize,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94285,"byte_end":94307,"line_start":160,"line_end":160,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94312,"byte_end":94317,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94322,"byte_end":94325,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ struct FullCfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94330,"byte_end":94350,"line_start":163,"line_end":163,"column_start":5,"column_end":25}},{"value":"/     inner: InnerCfg,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94355,"byte_end":94379,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94384,"byte_end":94389,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94394,"byte_end":94397,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ fn use_inner<A: Access<InnerCfg>>(cache: &mut A) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94402,"byte_end":94456,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"/     let value = cache.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94461,"byte_end":94494,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/     println!(\"The answer is: {}\", value.answer);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94499,"byte_end":94551,"line_start":169,"line_end":169,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94556,"byte_end":94561,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94566,"byte_end":94569,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let full_cfg = ArcSwap::from_pointee(FullCfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94574,"byte_end":94624,"line_start":172,"line_end":172,"column_start":5,"column_end":55}},{"value":"/     inner: InnerCfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94629,"byte_end":94654,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/         answer: 42,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94659,"byte_end":94682,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94687,"byte_end":94696,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94701,"byte_end":94708,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ let cache = Cache::new(&full_cfg);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94713,"byte_end":94751,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/ use_inner(&mut cache.map(|full| &full.inner));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94756,"byte_end":94806,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94811,"byte_end":94814,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ let inner_cfg = ArcSwap::from_pointee(InnerCfg { answer: 24 });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94819,"byte_end":94886,"line_start":180,"line_end":180,"column_start":5,"column_end":72}},{"value":"/ let mut inner_cache = Cache::new(&inner_cfg);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94891,"byte_end":94940,"line_start":181,"line_end":181,"column_start":5,"column_end":54}},{"value":"/ use_inner(&mut inner_cache);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94945,"byte_end":94977,"line_start":182,"line_end":182,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":94982,"byte_end":94989,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":572},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95879,"byte_end":95887,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"MapCache","qualname":"::cache::MapCache","value":"MapCache {  }","parent":null,"children":[{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" An implementation of a cache with a projection into the accessed value.","sig":null,"attributes":[{"value":"/ An implementation of a cache with a projection into the accessed value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95618,"byte_end":95693,"line_start":217,"line_end":217,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95694,"byte_end":95697,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ This is the implementation structure for [`Cache::map`]. It can't be created directly and it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95698,"byte_end":95794,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/ should be used through the [`Access`] trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95795,"byte_end":95843,"line_start":220,"line_end":220,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":203},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gen_lock","qualname":"::gen_lock","value":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":225},{"krate":0,"index":612},{"krate":0,"index":616},{"krate":0,"index":231},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":238},{"krate":0,"index":625},{"krate":0,"index":239}],"decl_id":null,"docs":" Customization of where and how the generation lock works.","sig":null,"attributes":[{"value":"! Customization of where and how the generation lock works.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111407,"byte_end":111468,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111469,"byte_end":111472,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! By default, all the [`ArcSwapAny`](../struct.ArcSwapAny.html) instances share the same","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111473,"byte_end":111563,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"! generation lock. This is to save space in them (they have the same size as a single pointer),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111564,"byte_end":111661,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"! because the default lock is quite a large data structure (it's sharded, to prevent too much","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111662,"byte_end":111757,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"! contention between different threads). This has the disadvantage that a lock on one instance","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111758,"byte_end":111854,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"! influences another instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111855,"byte_end":111887,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111888,"byte_end":111891,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! The things in this module allow customizing how the lock behaves. The default one is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111892,"byte_end":111980,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"! [`Global`](struct.Global.html). If you want to use independent but unsharded lock, use the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":111981,"byte_end":112075,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"! [`PrivateUnsharded`](struct.PrivateUnsharded.html) (or the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112076,"byte_end":112138,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"! [`IndependentArcSwap`](../type.IndependentArcSwap.html) type alias).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112139,"byte_end":112211,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112212,"byte_end":112215,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Or you can implement your own lock, but you probably should study the internals of the library","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112216,"byte_end":112314,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"! first.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112315,"byte_end":112325,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112326,"byte_end":112329,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Not Implemented Yet","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112330,"byte_end":112355,"line_start":17,"line_end":17,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112356,"byte_end":112359,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! These variants would probably make sense, but haven't been written yet:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112360,"byte_end":112435,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112436,"byte_end":112439,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! * A lock storage that is shared, but only between a certain group of pointers. It could be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112440,"byte_end":112534,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"!   either as a reference (but then each `ArcSwap` would get a bit bigger), or a macro that could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112535,"byte_end":112634,"line_start":22,"line_end":22,"column_start":1,"column_end":100}},{"value":"!   generate an independent but global storage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112635,"byte_end":112684,"line_start":23,"line_end":23,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113654,"byte_end":113659,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"Shard","qualname":"::gen_lock::Shard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A single shard.","sig":null,"attributes":[{"value":"/ A single shard.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112907,"byte_end":112926,"line_start":34,"line_end":34,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112927,"byte_end":112930,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is one copy of place where the library keeps tracks of generation locks. It consists of a","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":112931,"byte_end":113029,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ pair of counters and allows double-buffering readers (therefore, even if there's a never-ending","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113030,"byte_end":113129,"line_start":37,"line_end":37,"column_start":1,"column_end":100}},{"value":"/ stream of readers coming in, writer will get through eventually).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113130,"byte_end":113199,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113200,"byte_end":113203,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ To avoid contention and sharing of the counters between readers, we don't have one pair of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113204,"byte_end":113298,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/ generation counters, but several. The reader picks one shard and uses that, while the writer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113299,"byte_end":113395,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ looks through all of them. This is still not perfect (two threads may choose the same ID), but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113396,"byte_end":113494,"line_start":42,"line_end":42,"column_start":1,"column_end":99}},{"value":"/ it helps.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113495,"byte_end":113508,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113509,"byte_end":113512,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Each [`LockStorage`](trait.LockStorage.html) must provide a (non-empty) array of these.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113513,"byte_end":113604,"line_start":45,"line_end":45,"column_start":1,"column_end":92}},{"value":"repr(align (64))","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113605,"byte_end":113623,"line_start":46,"line_end":46,"column_start":1,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":213},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114449,"byte_end":114460,"line_start":67,"line_end":67,"column_start":18,"column_end":29},"name":"LockStorage","qualname":"::gen_lock::LockStorage","value":"LockStorage: Default","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" Abstraction of the place where generation locks are stored.","sig":null,"attributes":[{"value":"/ Abstraction of the place where generation locks are stored.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113956,"byte_end":114019,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114020,"byte_end":114023,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The trait is unsafe because if the trait messes up with the values stored in there in any way","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114024,"byte_end":114121,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ (or makes the values available to something else that messes them up), this can cause UB and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114122,"byte_end":114218,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ daemons and discomfort to users and such. The library expects it is the only one storing values","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114219,"byte_end":114318,"line_start":64,"line_end":64,"column_start":1,"column_end":100}},{"value":"/ there. In other words, it is expected the trait is only a dumb storage and doesn't actively do","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114319,"byte_end":114417,"line_start":65,"line_end":65,"column_start":1,"column_end":99}},{"value":"/ anything.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114418,"byte_end":114431,"line_start":66,"line_end":66,"column_start":1,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114659,"byte_end":114665,"line_start":72,"line_end":72,"column_start":10,"column_end":16},"name":"Shards","qualname":"::gen_lock::LockStorage::Shards","value":"type Shards: AsRef<[Shard]>;","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" The type for keeping several shards.","sig":null,"attributes":[{"value":"/ The type for keeping several shards.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114476,"byte_end":114516,"line_start":68,"line_end":68,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114521,"byte_end":114524,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ In general, it is expected to be a fixed-size array, but different implementations can have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114529,"byte_end":114624,"line_start":70,"line_end":70,"column_start":5,"column_end":100}},{"value":"/ different sizes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114629,"byte_end":114649,"line_start":71,"line_end":71,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114925,"byte_end":114932,"line_start":78,"line_end":78,"column_start":8,"column_end":15},"name":"gen_idx","qualname":"::gen_lock::LockStorage::gen_idx","value":"fn (&self) -> &AtomicUsize","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Access to the generation index.","sig":null,"attributes":[{"value":"/ Access to the generation index.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114688,"byte_end":114723,"line_start":74,"line_end":74,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114728,"byte_end":114731,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Must return the same instance of the `AtomicUsize` for the lifetime of the storage, must","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114736,"byte_end":114828,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ start at `0` and the trait itself must not modify it. Must be async-signal-safe.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114833,"byte_end":114917,"line_start":77,"line_end":77,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115167,"byte_end":115173,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"shards","qualname":"::gen_lock::LockStorage::shards","value":"fn (&self) -> &Self::Shards","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Access to the shards storage.","sig":null,"attributes":[{"value":"/ Access to the shards storage.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114962,"byte_end":114995,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115000,"byte_end":115003,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Must return the same instance of the shards for the lifetime of the storage. Must start","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115008,"byte_end":115099,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ zeroed-out and the trait itself must not modify it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115104,"byte_end":115159,"line_start":83,"line_end":83,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115388,"byte_end":115400,"line_start":90,"line_end":90,"column_start":8,"column_end":20},"name":"choose_shard","qualname":"::gen_lock::LockStorage::choose_shard","value":"fn (&self) -> usize","parent":{"krate":0,"index":213},"children":[],"decl_id":null,"docs":" Pick one shard of the all selected.","sig":null,"attributes":[{"value":"/ Pick one shard of the all selected.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115204,"byte_end":115243,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115248,"byte_end":115251,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Returns the index of one of the shards. The choice can be arbitrary, but it should be fast","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115256,"byte_end":115350,"line_start":88,"line_end":88,"column_start":5,"column_end":99}},{"value":"/ and avoid collisions.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":115355,"byte_end":115380,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116503,"byte_end":116509,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"Global","qualname":"::gen_lock::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default, global lock.","sig":null,"attributes":[{"value":"/ The default, global lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116151,"byte_end":116180,"line_start":128,"line_end":128,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116181,"byte_end":116184,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ The lock is stored out-of-band, globally. This means that one `ArcSwap` with this lock storage","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116185,"byte_end":116283,"line_start":130,"line_end":130,"column_start":1,"column_end":99}},{"value":"/ is only one machine word large, but a lock on one instance blocks the other, independent ones.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116284,"byte_end":116382,"line_start":131,"line_end":131,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116383,"byte_end":116386,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ It has several shards so threads are less likely to collide (HW-contend) on them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116387,"byte_end":116472,"line_start":133,"line_end":133,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118182,"byte_end":118198,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"PrivateUnsharded","qualname":"::gen_lock::PrivateUnsharded","value":"PrivateUnsharded {  }","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"decl_id":null,"docs":" A single „shard“ that is stored inline, inside the corresponding `ArcSwap`. Therefore, locks on\n each instance won't influence any other instances. On the other hand, the `ArcSwap` itself gets\n bigger and doesn't have multiple shards, so concurrent uses might contend each other a bit.","sig":null,"attributes":[{"value":"/ A single „shard“ that is stored inline, inside the corresponding `ArcSwap`. Therefore, locks on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117111,"byte_end":117214,"line_start":165,"line_end":165,"column_start":1,"column_end":100}},{"value":"/ each instance won't influence any other instances. On the other hand, the `ArcSwap` itself gets","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117215,"byte_end":117314,"line_start":166,"line_end":166,"column_start":1,"column_end":100}},{"value":"/ bigger and doesn't have multiple shards, so concurrent uses might contend each other a bit.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117315,"byte_end":117410,"line_start":167,"line_end":167,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117411,"byte_end":117414,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117415,"byte_end":117426,"line_start":169,"line_end":169,"column_start":1,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117427,"byte_end":117452,"line_start":170,"line_end":170,"column_start":1,"column_end":26}},{"value":"/ # use arc_swap::{ArcSwap, ArcSwapAny};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117453,"byte_end":117495,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ # use arc_swap::gen_lock::PrivateUnsharded;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117496,"byte_end":117543,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"/ // This one shares locks with others.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117544,"byte_end":117585,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ let shared = ArcSwap::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117586,"byte_end":117629,"line_start":174,"line_end":174,"column_start":1,"column_end":44}},{"value":"/ // But this one has an independent lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117630,"byte_end":117674,"line_start":175,"line_end":175,"column_start":1,"column_end":45}},{"value":"/ let independent = ArcSwapAny::<Arc<usize>, PrivateUnsharded>::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117675,"byte_end":117758,"line_start":176,"line_end":176,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117759,"byte_end":117762,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // This'll hold a lock so any writers there wouldn't complete","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117763,"byte_end":117828,"line_start":178,"line_end":178,"column_start":1,"column_end":66}},{"value":"/ let l = independent.load_signal_safe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117829,"byte_end":117872,"line_start":179,"line_end":179,"column_start":1,"column_end":44}},{"value":"/ // But the lock doesn't influence the shared one, so this goes through just fine","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117873,"byte_end":117957,"line_start":180,"line_end":180,"column_start":1,"column_end":85}},{"value":"/ shared.store(Arc::new(43));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117958,"byte_end":117989,"line_start":181,"line_end":181,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117990,"byte_end":117993,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(42, **l);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":117994,"byte_end":118018,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118019,"byte_end":118026,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118027,"byte_end":118030,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Note that there`s a type alias [`IndependentArcSwap`](../type.IndependentArcSwap.html) that can","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118031,"byte_end":118130,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ be used instead.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118131,"byte_end":118151,"line_start":187,"line_end":187,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119253,"byte_end":119267,"line_start":227,"line_end":227,"column_start":12,"column_end":26},"name":"PrivateSharded","qualname":"::gen_lock::PrivateSharded","value":"PrivateSharded {  }","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" An alternative to [`PrivateUnsharded`], but with configurable number of shards.","sig":null,"attributes":[{"value":"/ An alternative to [`PrivateUnsharded`], but with configurable number of shards.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118564,"byte_end":118647,"line_start":213,"line_end":213,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118648,"byte_end":118651,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The [`PrivateUnsharded`] is almost identical to `PrivateSharded<[Shard; 1]>` (the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118652,"byte_end":118737,"line_start":215,"line_end":215,"column_start":1,"column_end":86}},{"value":"/ implementation takes advantage of some details to avoid a little bit of overhead). It allows","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118738,"byte_end":118834,"line_start":216,"line_end":216,"column_start":1,"column_end":97}},{"value":"/ the user to choose the trade-of between contention during locking and size of the pointer and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118835,"byte_end":118932,"line_start":217,"line_end":217,"column_start":1,"column_end":98}},{"value":"/ speed during writes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118933,"byte_end":118957,"line_start":218,"line_end":218,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118958,"byte_end":118961,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ [`PrivateUnsharded`]: struct.PrivateUnsharded.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118962,"byte_end":119016,"line_start":220,"line_end":220,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119017,"byte_end":119020,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ # Note on `AsRef<[Shard]>`","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119021,"byte_end":119051,"line_start":222,"line_end":222,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119052,"byte_end":119055,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Rust provides the `AsRef` trait (or, actually any trait) up to arrays of 32 elements. If you","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119056,"byte_end":119152,"line_start":224,"line_end":224,"column_start":1,"column_end":97}},{"value":"/ need something bigger, you have to work around it with a newtype.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119153,"byte_end":119222,"line_start":225,"line_end":225,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123292,"byte_end":123298,"line_start":37,"line_end":37,"column_start":18,"column_end":24},"name":"RefCnt","qualname":"::ref_cnt::RefCnt","value":"RefCnt: Clone","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"decl_id":null,"docs":" A trait describing smart reference counted pointers.","sig":null,"attributes":[{"value":"/ A trait describing smart reference counted pointers.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121620,"byte_end":121676,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121677,"byte_end":121680,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that in a way [`Option<Arc<T>>`][Option] is also a smart reference counted pointer, just","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121681,"byte_end":121778,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ one that can hold NULL.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121779,"byte_end":121806,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121807,"byte_end":121810,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The trait is unsafe, because a wrong implementation will break the [ArcSwapAny]","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121811,"byte_end":121894,"line_start":10,"line_end":10,"column_start":1,"column_end":84}},{"value":"/ implementation and lead to UB.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121895,"byte_end":121929,"line_start":11,"line_end":11,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121930,"byte_end":121933,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is not actually expected for downstream crate to implement, this is just means to reuse","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":121934,"byte_end":122030,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ code for [Arc] and [`Option<Arc>`][Option] variants. However, it is theoretically possible (if","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122031,"byte_end":122129,"line_start":14,"line_end":14,"column_start":1,"column_end":99}},{"value":"/ you have your own [Arc] implementation).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122130,"byte_end":122174,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122175,"byte_end":122178,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It is also implemented for [Rc], but that is not considered very useful (because the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122179,"byte_end":122267,"line_start":17,"line_end":17,"column_start":1,"column_end":89}},{"value":"/ [ArcSwapAny] is not `Send` or `Sync`, therefore there's very little advantage for it to be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122268,"byte_end":122362,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ atomic).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122363,"byte_end":122375,"line_start":19,"line_end":19,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122376,"byte_end":122379,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122380,"byte_end":122392,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122393,"byte_end":122396,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Aside from the obvious properties (like that incrementing and decrementing a reference count","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122397,"byte_end":122493,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ cancel each out and that having less references tracked than how many things actually point to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122494,"byte_end":122592,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ the value is fine as long as the count doesn't drop to 0), it also must satisfy that if two","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122593,"byte_end":122688,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ pointers have the same value, they point to the same object. This is specifically not true for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122689,"byte_end":122787,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ ZSTs, but it is true for `Arc`s of ZSTs, because they have the reference counts just after the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122788,"byte_end":122886,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ value. It would be fine to point to a type-erased version of the same object, though (if one","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122887,"byte_end":122983,"line_start":28,"line_end":28,"column_start":1,"column_end":97}},{"value":"/ could use this trait with unsized types in the first place).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":122984,"byte_end":123048,"line_start":29,"line_end":29,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123049,"byte_end":123052,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Furthermore, the type should be Pin (eg. if the type is cloned or moved, it should still","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123053,"byte_end":123145,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/ point/deref to the same place in memory).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123146,"byte_end":123191,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123192,"byte_end":123195,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [Arc]: std::sync::Arc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123196,"byte_end":123221,"line_start":34,"line_end":34,"column_start":1,"column_end":26}},{"value":"/ [Rc]: std::rc::Rc","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123222,"byte_end":123243,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/ [ArcSwapAny]: ::ArcSwapAny","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123244,"byte_end":123274,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123362,"byte_end":123366,"line_start":39,"line_end":39,"column_start":10,"column_end":14},"name":"Base","qualname":"::ref_cnt::RefCnt::Base","value":"type Base;","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" The base type the pointer points to.\n","sig":null,"attributes":[{"value":"/ The base type the pointer points to.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123312,"byte_end":123352,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123761,"byte_end":123769,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"into_ptr","qualname":"::ref_cnt::RefCnt::into_ptr","value":"fn (me: Self) -> *mut Self::Base","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Converts the smart pointer into a raw pointer, without affecting the reference count.","sig":null,"attributes":[{"value":"/ Converts the smart pointer into a raw pointer, without affecting the reference count.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123373,"byte_end":123462,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123467,"byte_end":123470,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This can be seen as kind of freezing the pointer ‒ it'll be later converted back using","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123475,"byte_end":123567,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ [`from_ptr`](#method.from_ptr).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123572,"byte_end":123607,"line_start":44,"line_end":44,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123612,"byte_end":123615,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ The pointer must point to the value stored (and the value must be the same as one returned","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123620,"byte_end":123714,"line_start":46,"line_end":46,"column_start":5,"column_end":99}},{"value":"/ by [`as_ptr`](#method.as_ptr).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123719,"byte_end":123753,"line_start":47,"line_end":47,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123964,"byte_end":123970,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::ref_cnt::RefCnt::as_ptr","value":"fn (me: &Self) -> *mut Self::Base","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Provides a view into the smart pointer as a raw pointer.","sig":null,"attributes":[{"value":"/ Provides a view into the smart pointer as a raw pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123805,"byte_end":123865,"line_start":50,"line_end":50,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123870,"byte_end":123873,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This must not affect the reference count ‒ the pointer is only borrowed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123878,"byte_end":123956,"line_start":52,"line_end":52,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124659,"byte_end":124667,"line_start":66,"line_end":66,"column_start":15,"column_end":23},"name":"from_ptr","qualname":"::ref_cnt::RefCnt::from_ptr","value":"fn (ptr: *const Self::Base) -> Self","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Converts a raw pointer back into the smart pointer, without affecting the reference count.","sig":null,"attributes":[{"value":"/ Converts a raw pointer back into the smart pointer, without affecting the reference count.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124007,"byte_end":124101,"line_start":55,"line_end":55,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124106,"byte_end":124109,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is only called on values previously returned by [`into_ptr`](#method.into_ptr).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124114,"byte_end":124202,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/ However, it is not guaranteed to be 1:1 relation ‒ `from_ptr` may be called more times than","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124207,"byte_end":124304,"line_start":58,"line_end":58,"column_start":5,"column_end":100}},{"value":"/ `into_ptr` temporarily provided the reference count never drops under 1 during that time","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124309,"byte_end":124401,"line_start":59,"line_end":59,"column_start":5,"column_end":97}},{"value":"/ (the implementation sometimes owes a reference). These extra pointers will either be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124406,"byte_end":124494,"line_start":60,"line_end":60,"column_start":5,"column_end":93}},{"value":"/ converted back using `into_ptr` or forgotten.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124499,"byte_end":124548,"line_start":61,"line_end":61,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124553,"byte_end":124556,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124561,"byte_end":124573,"line_start":63,"line_end":63,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124578,"byte_end":124581,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This must not be called by code outside of this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124586,"byte_end":124644,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124756,"byte_end":124759,"line_start":69,"line_end":69,"column_start":8,"column_end":11},"name":"inc","qualname":"::ref_cnt::RefCnt::inc","value":"fn (me: &Self) -> ()","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Increments the reference count by one.\n","sig":null,"attributes":[{"value":"/ Increments the reference count by one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124706,"byte_end":124748,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125202,"byte_end":125205,"line_start":82,"line_end":82,"column_start":15,"column_end":18},"name":"dec","qualname":"::ref_cnt::RefCnt::dec","value":"fn (ptr: *const Self::Base) -> ()","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":" Decrements the reference count by one.","sig":null,"attributes":[{"value":"/ Decrements the reference count by one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124825,"byte_end":124867,"line_start":73,"line_end":73,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124872,"byte_end":124875,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note this is called on a raw pointer (one previously returned by","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124880,"byte_end":124948,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ [`into_ptr`](#method.into_ptr). This may lead to dropping of the reference count to 0 and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":124953,"byte_end":125046,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ destruction of the internal pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125051,"byte_end":125091,"line_start":77,"line_end":77,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125096,"byte_end":125099,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125104,"byte_end":125116,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125121,"byte_end":125124,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This must not be called by code outside of this crate.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125129,"byte_end":125187,"line_start":81,"line_end":81,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23045,"byte_end":23050,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"Guard","qualname":"::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"decl_id":null,"docs":" A temporary storage of the pointer.","sig":null,"attributes":[{"value":"/ A temporary storage of the pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22743,"byte_end":22782,"line_start":472,"line_end":472,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22783,"byte_end":22786,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This guard object is returned from most loading methods (with the notable exception of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22787,"byte_end":22877,"line_start":474,"line_end":474,"column_start":1,"column_end":91}},{"value":"/ [`load_full`](struct.ArcSwapAny.html#method.load_full)). It dereferences to the smart pointer","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22878,"byte_end":22975,"line_start":475,"line_end":475,"column_start":1,"column_end":98}},{"value":"/ loaded, so most operations are to be done using that.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22976,"byte_end":23033,"line_start":476,"line_end":476,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23685,"byte_end":23695,"line_start":497,"line_end":497,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Guard>::into_inner","value":"fn (mut lease: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Converts it into the held value.","sig":null,"attributes":[{"value":"/ Converts it into the held value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23372,"byte_end":23408,"line_start":490,"line_end":490,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23413,"byte_end":23416,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This, on occasion, may be a tiny bit faster than cloning the Arc or whatever is being held","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23421,"byte_end":23515,"line_start":492,"line_end":492,"column_start":5,"column_end":99}},{"value":"/ inside.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23520,"byte_end":23531,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23664,"byte_end":23673,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25561,"byte_end":25571,"line_start":543,"line_end":543,"column_start":12,"column_end":22},"name":"from_inner","qualname":"<Guard>::from_inner","value":"fn (inner: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a guard for a given value `inner`.","sig":null,"attributes":[{"value":"/ Create a guard for a given value `inner`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25038,"byte_end":25083,"line_start":527,"line_end":527,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25088,"byte_end":25091,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This can be useful on occasion to pass a specific object to code that expects or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25096,"byte_end":25180,"line_start":529,"line_end":529,"column_start":5,"column_end":89}},{"value":"/ wants to store a Guard.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25185,"byte_end":25212,"line_start":530,"line_end":530,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25217,"byte_end":25220,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25225,"byte_end":25238,"line_start":532,"line_end":532,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25243,"byte_end":25246,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25251,"byte_end":25262,"line_start":534,"line_end":534,"column_start":5,"column_end":16}},{"value":"/ # use arc_swap::{ArcSwap, Guard};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25267,"byte_end":25304,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25309,"byte_end":25334,"line_start":536,"line_end":536,"column_start":5,"column_end":30}},{"value":"/ # let p = ArcSwap::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25339,"byte_end":25379,"line_start":537,"line_end":537,"column_start":5,"column_end":45}},{"value":"/ // Create two guards pointing to the same object","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25384,"byte_end":25436,"line_start":538,"line_end":538,"column_start":5,"column_end":57}},{"value":"/ let g1 = p.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25441,"byte_end":25463,"line_start":539,"line_end":539,"column_start":5,"column_end":27}},{"value":"/ let g2 = Guard::from_inner(Arc::clone(&*g1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25468,"byte_end":25517,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/ # drop(g2);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25522,"byte_end":25537,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25542,"byte_end":25549,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":365},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":30016,"byte_end":30026,"line_start":670,"line_end":670,"column_start":12,"column_end":22},"name":"ArcSwapAny","qualname":"::ArcSwapAny","value":"ArcSwapAny {  }","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"decl_id":null,"docs":" An atomic storage for a reference counted smart pointer like [`Arc`] or `Option<Arc>`.","sig":null,"attributes":[{"value":"/ An atomic storage for a reference counted smart pointer like [`Arc`] or `Option<Arc>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":27970,"byte_end":28060,"line_start":623,"line_end":623,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28061,"byte_end":28064,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ This is a storage where a smart pointer may live. It can be read and written atomically from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28065,"byte_end":28161,"line_start":625,"line_end":625,"column_start":1,"column_end":97}},{"value":"/ several threads, but doesn't act like a pointer itself.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28162,"byte_end":28221,"line_start":626,"line_end":626,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28222,"byte_end":28225,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ One can be created [`from`] an [`Arc`]. To get the pointer back, use the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28226,"byte_end":28302,"line_start":628,"line_end":628,"column_start":1,"column_end":77}},{"value":"/ [`load`](#method.load).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28303,"byte_end":28330,"line_start":629,"line_end":629,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28331,"byte_end":28334,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28335,"byte_end":28345,"line_start":631,"line_end":631,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28346,"byte_end":28349,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ This is the common generic implementation. This allows sharing the same code for storing","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28350,"byte_end":28442,"line_start":633,"line_end":633,"column_start":1,"column_end":93}},{"value":"/ both `Arc` and `Option<Arc>` (and possibly other similar types).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28443,"byte_end":28511,"line_start":634,"line_end":634,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28512,"byte_end":28515,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ In your code, you most probably want to interact with it through the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28516,"byte_end":28588,"line_start":636,"line_end":636,"column_start":1,"column_end":73}},{"value":"/ [`ArcSwap`](type.ArcSwap.html) and [`ArcSwapOption`](type.ArcSwapOption.html) aliases. However,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28589,"byte_end":28688,"line_start":637,"line_end":637,"column_start":1,"column_end":100}},{"value":"/ the methods they share are described here and are applicable to both of them. That's why the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28689,"byte_end":28785,"line_start":638,"line_end":638,"column_start":1,"column_end":97}},{"value":"/ examples here use `ArcSwap` ‒ but they could as well be written with `ArcSwapOption` or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28786,"byte_end":28879,"line_start":639,"line_end":639,"column_start":1,"column_end":92}},{"value":"/ `ArcSwapAny`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28880,"byte_end":28897,"line_start":640,"line_end":640,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28898,"byte_end":28901,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28902,"byte_end":28923,"line_start":642,"line_end":642,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28924,"byte_end":28927,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ * `T`: The smart pointer to be kept inside. This crate provides implementation for `Arc<_>` and","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":28928,"byte_end":29027,"line_start":644,"line_end":644,"column_start":1,"column_end":100}},{"value":"/   `Option<Arc<_>>` (`Rc` too, but that one is not practically useful). But third party could","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29028,"byte_end":29124,"line_start":645,"line_end":645,"column_start":1,"column_end":97}},{"value":"/   provide implementations of the [`RefCnt`] trait and plug in others.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29125,"byte_end":29198,"line_start":646,"line_end":646,"column_start":1,"column_end":74}},{"value":"/ * `S`: This describes where the generation lock is stored and how it works (this allows tuning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29199,"byte_end":29297,"line_start":647,"line_end":647,"column_start":1,"column_end":99}},{"value":"/   some of the performance trade-offs). See the [`LockStorage`][LockStorage] trait.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29298,"byte_end":29384,"line_start":648,"line_end":648,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29385,"byte_end":29388,"line_start":649,"line_end":649,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29389,"byte_end":29403,"line_start":650,"line_end":650,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29404,"byte_end":29407,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29408,"byte_end":29419,"line_start":652,"line_end":652,"column_start":1,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29420,"byte_end":29445,"line_start":653,"line_end":653,"column_start":1,"column_end":26}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29446,"byte_end":29474,"line_start":654,"line_end":654,"column_start":1,"column_end":29}},{"value":"/ let arc = Arc::new(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29475,"byte_end":29502,"line_start":655,"line_end":655,"column_start":1,"column_end":28}},{"value":"/ let arc_swap = ArcSwap::from(arc);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29503,"byte_end":29541,"line_start":656,"line_end":656,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(42, **arc_swap.load());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29542,"byte_end":29580,"line_start":657,"line_end":657,"column_start":1,"column_end":39}},{"value":"/ // It can be read multiple times","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29581,"byte_end":29617,"line_start":658,"line_end":658,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(42, **arc_swap.load());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29618,"byte_end":29656,"line_start":659,"line_end":659,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29657,"byte_end":29660,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ // Put a new one in there","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29661,"byte_end":29690,"line_start":661,"line_end":661,"column_start":1,"column_end":30}},{"value":"/ let new_arc = Arc::new(0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29691,"byte_end":29721,"line_start":662,"line_end":662,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(42, *arc_swap.swap(new_arc));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29722,"byte_end":29766,"line_start":663,"line_end":663,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(0, **arc_swap.load());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29767,"byte_end":29804,"line_start":664,"line_end":664,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29805,"byte_end":29812,"line_start":665,"line_end":665,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29813,"byte_end":29816,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29817,"byte_end":29880,"line_start":667,"line_end":667,"column_start":1,"column_end":64}},{"value":"/ [`from`]: https://doc.rust-lang.org/nightly/std/convert/trait.From.html#tymethod.from","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29881,"byte_end":29970,"line_start":668,"line_end":668,"column_start":1,"column_end":90}},{"value":"/ [`RefCnt`]: trait.RefCnt.html","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":29971,"byte_end":30004,"line_start":669,"line_end":669,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31985,"byte_end":31988,"line_start":741,"line_end":741,"column_start":12,"column_end":15},"name":"new","qualname":"<ArcSwapAny<T, S>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new value.\n","sig":null,"attributes":[{"value":"/ Constructs a new value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31946,"byte_end":31973,"line_start":740,"line_end":740,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32084,"byte_end":32094,"line_start":746,"line_end":746,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ArcSwapAny<T, S>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the value inside.\n","sig":null,"attributes":[{"value":"/ Extracts the value inside.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32042,"byte_end":32072,"line_start":745,"line_end":745,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32623,"byte_end":32632,"line_start":761,"line_end":761,"column_start":12,"column_end":21},"name":"load_full","qualname":"<ArcSwapAny<T, S>>::load_full","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads the value.","sig":null,"attributes":[{"value":"/ Loads the value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32293,"byte_end":32313,"line_start":754,"line_end":754,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32318,"byte_end":32321,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ This makes another copy of the held pointer and returns it, atomically (it is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32326,"byte_end":32407,"line_start":756,"line_end":756,"column_start":5,"column_end":86}},{"value":"/ safe even when other thread stores into the same instance at the same time).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32412,"byte_end":32492,"line_start":757,"line_end":757,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32497,"byte_end":32500,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The method is lock-free and wait-free, but usually more expensive than","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32505,"byte_end":32579,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ [`load`](#method.load).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32584,"byte_end":32611,"line_start":760,"line_end":760,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":34082,"byte_end":34098,"line_start":791,"line_end":791,"column_start":12,"column_end":28},"name":"load_signal_safe","qualname":"<ArcSwapAny<T, S>>::load_signal_safe","value":"fn (&self) -> Guard<'_, T>","parent":null,"children":[],"decl_id":null,"docs":" An async-signal-safe version of [`load`](#method.load)","sig":null,"attributes":[{"value":"/ An async-signal-safe version of [`load`](#method.load)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":32956,"byte_end":33014,"line_start":773,"line_end":773,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33019,"byte_end":33022,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ This method uses only restricted set of primitives to be async-signal-safe, so it can be","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33027,"byte_end":33119,"line_start":775,"line_end":775,"column_start":5,"column_end":97}},{"value":"/ used inside unix signal handlers. It has no advantages outside of them and it has its own","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33124,"byte_end":33217,"line_start":776,"line_end":776,"column_start":5,"column_end":98}},{"value":"/ downsides, so there's no reason to use it outside of them.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33222,"byte_end":33284,"line_start":777,"line_end":777,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33289,"byte_end":33292,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33297,"byte_end":33310,"line_start":779,"line_end":779,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33315,"byte_end":33318,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ While the method itself is lock-free (it will not be blocked by anything other threads do),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33323,"byte_end":33418,"line_start":781,"line_end":781,"column_start":5,"column_end":100}},{"value":"/ methods that write are blocked from completion until the returned","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33423,"byte_end":33492,"line_start":782,"line_end":782,"column_start":5,"column_end":74}},{"value":"/ [`Guard`](struct.Guard.html) is dropped. This includes [`store`](#method.store),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33497,"byte_end":33581,"line_start":783,"line_end":783,"column_start":5,"column_end":89}},{"value":"/ [`compare_and_swap`](#method.compare_and_swap) and [`rcu`](#method.rcu) and destruction of","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33586,"byte_end":33680,"line_start":784,"line_end":784,"column_start":5,"column_end":99}},{"value":"/ the `ArcSwapAny` instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33685,"byte_end":33715,"line_start":785,"line_end":785,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33720,"byte_end":33723,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ By default, the locks are *shared* across all the instances in the program, therefore it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33728,"byte_end":33820,"line_start":787,"line_end":787,"column_start":5,"column_end":97}},{"value":"/ blocks writes even to *other* `ArcSwapAny` instances. It is possible to use a private lock","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33825,"byte_end":33919,"line_start":788,"line_end":788,"column_start":5,"column_end":99}},{"value":"/ (which is recommended if you want to do use this method) by using the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":33924,"byte_end":33997,"line_start":789,"line_end":789,"column_start":5,"column_end":78}},{"value":"/ [`IndependentArcSwap`](type.IndependentArcSwap.html) type alias.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":34002,"byte_end":34070,"line_start":790,"line_end":790,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37239,"byte_end":37243,"line_start":863,"line_end":863,"column_start":12,"column_end":16},"name":"load","qualname":"<ArcSwapAny<T, S>>::load","value":"fn (&self) -> Guard<'static, T>","parent":null,"children":[],"decl_id":null,"docs":" Provides a temporary borrow of the object inside.","sig":null,"attributes":[{"value":"/ Provides a temporary borrow of the object inside.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35103,"byte_end":35156,"line_start":817,"line_end":817,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35161,"byte_end":35164,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ This returns a proxy object allowing access to the thing held inside.  However, there's","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35169,"byte_end":35260,"line_start":819,"line_end":819,"column_start":5,"column_end":96}},{"value":"/ only limited amount of possible cheap proxies in existence for each thread ‒ if more are","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35265,"byte_end":35359,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ created, it falls back to equivalent of [`load_full`](#method.load_full) internally.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35364,"byte_end":35452,"line_start":821,"line_end":821,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35457,"byte_end":35460,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ This is therefore a good choice to use for eg. searching a data structure or juggling the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35465,"byte_end":35558,"line_start":823,"line_end":823,"column_start":5,"column_end":98}},{"value":"/ pointers around a bit, but not as something to store in larger amounts. The rule of thumb","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35563,"byte_end":35656,"line_start":824,"line_end":824,"column_start":5,"column_end":98}},{"value":"/ is this is suited for local variables on stack, but not in long-living data structures.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35661,"byte_end":35752,"line_start":825,"line_end":825,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35757,"byte_end":35760,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Consistency","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35765,"byte_end":35782,"line_start":827,"line_end":827,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35787,"byte_end":35790,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ In case multiple related operations are to be done on the loaded value, it is generally","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35795,"byte_end":35886,"line_start":829,"line_end":829,"column_start":5,"column_end":96}},{"value":"/ recommended to call `load` just once and keep the result over calling it multiple times.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35891,"byte_end":35983,"line_start":830,"line_end":830,"column_start":5,"column_end":97}},{"value":"/ First, keeping it is usually faster. But more importantly, the value can change between the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":35988,"byte_end":36083,"line_start":831,"line_end":831,"column_start":5,"column_end":100}},{"value":"/ calls to load, returning different objects, which could lead to logical inconsistency.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36088,"byte_end":36178,"line_start":832,"line_end":832,"column_start":5,"column_end":95}},{"value":"/ Keeping the result makes sure the same object is used.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36183,"byte_end":36241,"line_start":833,"line_end":833,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36246,"byte_end":36249,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36254,"byte_end":36265,"line_start":835,"line_end":835,"column_start":5,"column_end":16}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36270,"byte_end":36298,"line_start":836,"line_end":836,"column_start":5,"column_end":33}},{"value":"/ struct Point {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36303,"byte_end":36321,"line_start":837,"line_end":837,"column_start":5,"column_end":23}},{"value":"/     x: usize,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36326,"byte_end":36343,"line_start":838,"line_end":838,"column_start":5,"column_end":22}},{"value":"/     y: usize,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36348,"byte_end":36365,"line_start":839,"line_end":839,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36370,"byte_end":36375,"line_start":840,"line_end":840,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36380,"byte_end":36383,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ fn print_broken(p: &ArcSwap<Point>) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36388,"byte_end":36429,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/     // This is broken, because the x and y may come from different points,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36434,"byte_end":36512,"line_start":843,"line_end":843,"column_start":5,"column_end":83}},{"value":"/     // combining into an invalid point that never existed.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36517,"byte_end":36579,"line_start":844,"line_end":844,"column_start":5,"column_end":67}},{"value":"/     println!(\"X: {}\", p.load().x);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36584,"byte_end":36622,"line_start":845,"line_end":845,"column_start":5,"column_end":43}},{"value":"/     // If someone changes the content now, between these two loads, we","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36627,"byte_end":36701,"line_start":846,"line_end":846,"column_start":5,"column_end":79}},{"value":"/     // have a problem","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36706,"byte_end":36731,"line_start":847,"line_end":847,"column_start":5,"column_end":30}},{"value":"/     println!(\"Y: {}\", p.load().y);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36736,"byte_end":36774,"line_start":848,"line_end":848,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36779,"byte_end":36784,"line_start":849,"line_end":849,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36789,"byte_end":36792,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ fn print_correct(p: &ArcSwap<Point>) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36797,"byte_end":36839,"line_start":851,"line_end":851,"column_start":5,"column_end":47}},{"value":"/     // Here we take a snapshot of one specific point so both x and y come","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36844,"byte_end":36921,"line_start":852,"line_end":852,"column_start":5,"column_end":82}},{"value":"/     // from the same one.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36926,"byte_end":36955,"line_start":853,"line_end":853,"column_start":5,"column_end":34}},{"value":"/     let point = p.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36960,"byte_end":36989,"line_start":854,"line_end":854,"column_start":5,"column_end":34}},{"value":"/     println!(\"X: {}\", point.x);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":36994,"byte_end":37029,"line_start":855,"line_end":855,"column_start":5,"column_end":40}},{"value":"/     println!(\"Y: {}\", point.y);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37034,"byte_end":37069,"line_start":856,"line_end":856,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37074,"byte_end":37079,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ # let p = ArcSwap::from_pointee(Point { x: 10, y: 20 });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37084,"byte_end":37144,"line_start":858,"line_end":858,"column_start":5,"column_end":65}},{"value":"/ # print_correct(&p);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37149,"byte_end":37173,"line_start":859,"line_end":859,"column_start":5,"column_end":29}},{"value":"/ # print_broken(&p);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37178,"byte_end":37201,"line_start":860,"line_end":860,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37206,"byte_end":37213,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37218,"byte_end":37227,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37742,"byte_end":37747,"line_start":875,"line_end":875,"column_start":12,"column_end":17},"name":"store","qualname":"<ArcSwapAny<T, S>>::store","value":"fn (&self, val: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the value inside this instance.","sig":null,"attributes":[{"value":"/ Replaces the value inside this instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37590,"byte_end":37634,"line_start":872,"line_end":872,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37639,"byte_end":37642,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Further loads will yield the new value. Uses [`swap`](#method.swap) internally.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37647,"byte_end":37730,"line_start":874,"line_end":874,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38697,"byte_end":38701,"line_start":898,"line_end":898,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArcSwapAny<T, S>>::swap","value":"fn (&self, new: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Exchanges the value inside this instance.","sig":null,"attributes":[{"value":"/ Exchanges the value inside this instance.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37806,"byte_end":37851,"line_start":879,"line_end":879,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37856,"byte_end":37859,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Note that this method is *not* lock-free. In particular, it is possible to block this","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37864,"byte_end":37953,"line_start":881,"line_end":881,"column_start":5,"column_end":94}},{"value":"/ method by using the [`load_signal_safe`](#method.load_signal_safe), but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":37958,"byte_end":38033,"line_start":882,"line_end":882,"column_start":5,"column_end":80}},{"value":"/ [`load`](#method.load) may also block it for very short time (several CPU instructions). If","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38038,"byte_end":38133,"line_start":883,"line_end":883,"column_start":5,"column_end":100}},{"value":"/ this happens, `swap` will busy-wait in the meantime.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38138,"byte_end":38194,"line_start":884,"line_end":884,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38199,"byte_end":38202,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ It is also possible to cause a deadlock (eg. this is an example of *broken* code):","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38207,"byte_end":38293,"line_start":886,"line_end":886,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38298,"byte_end":38301,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38306,"byte_end":38324,"line_start":888,"line_end":888,"column_start":5,"column_end":23}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38329,"byte_end":38354,"line_start":889,"line_end":889,"column_start":5,"column_end":30}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38359,"byte_end":38387,"line_start":890,"line_end":890,"column_start":5,"column_end":33}},{"value":"/ let shared = ArcSwap::from(Arc::new(42));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38392,"byte_end":38437,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/ let guard = shared.load_signal_safe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38442,"byte_end":38484,"line_start":892,"line_end":892,"column_start":5,"column_end":47}},{"value":"/ // This will deadlock, because the guard is still active here and swap","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38489,"byte_end":38563,"line_start":893,"line_end":893,"column_start":5,"column_end":79}},{"value":"/ // can't pull the value from under its feet.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38568,"byte_end":38616,"line_start":894,"line_end":894,"column_start":5,"column_end":53}},{"value":"/ shared.swap(Arc::new(0));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38621,"byte_end":38650,"line_start":895,"line_end":895,"column_start":5,"column_end":34}},{"value":"/ # drop(guard);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38655,"byte_end":38673,"line_start":896,"line_end":896,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":38678,"byte_end":38685,"line_start":897,"line_end":897,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39914,"byte_end":39930,"line_start":924,"line_end":924,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<ArcSwapAny<T, S>>::compare_and_swap","value":"fn <C> (&self, current: C, new: T) -> Guard<T>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the stored Arc if it equals to `current`.","sig":null,"attributes":[{"value":"/ Swaps the stored Arc if it equals to `current`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39095,"byte_end":39146,"line_start":909,"line_end":909,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39151,"byte_end":39154,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ If the current value of the `ArcSwapAny` equals to `current`, the `new` is stored inside.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39159,"byte_end":39252,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ If not, nothing happens.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39257,"byte_end":39285,"line_start":912,"line_end":912,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39290,"byte_end":39293,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ The previous value (no matter if the swap happened or not) is returned. Therefore, if the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39298,"byte_end":39391,"line_start":914,"line_end":914,"column_start":5,"column_end":98}},{"value":"/ returned value is equal to `current`, the swap happened. You want to do a pointer-based","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39396,"byte_end":39487,"line_start":915,"line_end":915,"column_start":5,"column_end":96}},{"value":"/ comparison to determine it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39492,"byte_end":39523,"line_start":916,"line_end":916,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39528,"byte_end":39531,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ In other words, if the caller „guesses“ the value of current correctly, it acts like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39536,"byte_end":39628,"line_start":918,"line_end":918,"column_start":5,"column_end":93}},{"value":"/ [`swap`](#method.swap), otherwise it acts like [`load_full`](#method.load_full) (including","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39633,"byte_end":39727,"line_start":919,"line_end":919,"column_start":5,"column_end":99}},{"value":"/ the limitations).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39732,"byte_end":39753,"line_start":920,"line_end":920,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39758,"byte_end":39761,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ The `current` can be specified as `&Arc`, [`Guard`](struct.Guard.html),","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39766,"byte_end":39841,"line_start":922,"line_end":922,"column_start":5,"column_end":80}},{"value":"/ [`&Guards`](struct.Guards.html) or as a raw pointer.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":39846,"byte_end":39902,"line_start":923,"line_end":923,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47990,"byte_end":47993,"line_start":1124,"line_end":1124,"column_start":12,"column_end":15},"name":"rcu","qualname":"<ArcSwapAny<T, S>>::rcu","value":"fn <R, F> (&self, mut f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Read-Copy-Update of the pointer inside.","sig":null,"attributes":[{"value":"/ Read-Copy-Update of the pointer inside.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":43737,"byte_end":43780,"line_start":1015,"line_end":1015,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":43785,"byte_end":43788,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ This is useful in read-heavy situations with several threads that sometimes update the data","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":43793,"byte_end":43888,"line_start":1017,"line_end":1017,"column_start":5,"column_end":100}},{"value":"/ pointed to. The readers can just repeatedly use [`load`](#method.load) without any locking.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":43893,"byte_end":43988,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/ The writer uses this method to perform the update.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":43993,"byte_end":44047,"line_start":1019,"line_end":1019,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44052,"byte_end":44055,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ In case there's only one thread that does updates or in case the next version is","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44060,"byte_end":44144,"line_start":1021,"line_end":1021,"column_start":5,"column_end":89}},{"value":"/ independent of the previous one, simple [`swap`](#method.swap) or [`store`](#method.store)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44149,"byte_end":44243,"line_start":1022,"line_end":1022,"column_start":5,"column_end":99}},{"value":"/ is enough. Otherwise, it may be needed to retry the update operation if some other thread","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44248,"byte_end":44341,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ made an update in between. This is what this method does.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44346,"byte_end":44407,"line_start":1024,"line_end":1024,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44412,"byte_end":44415,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44420,"byte_end":44434,"line_start":1026,"line_end":1026,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44439,"byte_end":44442,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ This will *not* work as expected, because between loading and storing, some other thread","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44447,"byte_end":44539,"line_start":1028,"line_end":1028,"column_start":5,"column_end":97}},{"value":"/ might have updated the value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44544,"byte_end":44577,"line_start":1029,"line_end":1029,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44582,"byte_end":44585,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44590,"byte_end":44601,"line_start":1031,"line_end":1031,"column_start":5,"column_end":16}},{"value":"/ # extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44606,"byte_end":44634,"line_start":1032,"line_end":1032,"column_start":5,"column_end":33}},{"value":"/ # extern crate crossbeam_utils;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44639,"byte_end":44674,"line_start":1033,"line_end":1033,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44679,"byte_end":44684,"line_start":1034,"line_end":1034,"column_start":5,"column_end":10}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44689,"byte_end":44714,"line_start":1035,"line_end":1035,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44719,"byte_end":44724,"line_start":1036,"line_end":1036,"column_start":5,"column_end":10}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44729,"byte_end":44757,"line_start":1037,"line_end":1037,"column_start":5,"column_end":33}},{"value":"/ # use crossbeam_utils::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44762,"byte_end":44796,"line_start":1038,"line_end":1038,"column_start":5,"column_end":39}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44801,"byte_end":44806,"line_start":1039,"line_end":1039,"column_start":5,"column_end":10}},{"value":"/ let cnt = ArcSwap::from_pointee(0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44811,"byte_end":44850,"line_start":1040,"line_end":1040,"column_start":5,"column_end":44}},{"value":"/ thread::scope(|scope| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44855,"byte_end":44882,"line_start":1041,"line_end":1041,"column_start":5,"column_end":32}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44887,"byte_end":44911,"line_start":1042,"line_end":1042,"column_start":5,"column_end":29}},{"value":"/         scope.spawn(|_| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44916,"byte_end":44945,"line_start":1043,"line_end":1043,"column_start":5,"column_end":34}},{"value":"/            let inner = cnt.load_full();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44950,"byte_end":44993,"line_start":1044,"line_end":1044,"column_start":5,"column_end":48}},{"value":"/             // Another thread might have stored some other number than what we have","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":44998,"byte_end":45085,"line_start":1045,"line_end":1045,"column_start":5,"column_end":92}},{"value":"/             // between the load and store.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45090,"byte_end":45136,"line_start":1046,"line_end":1046,"column_start":5,"column_end":51}},{"value":"/             cnt.store(Arc::new(*inner + 1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45141,"byte_end":45189,"line_start":1047,"line_end":1047,"column_start":5,"column_end":53}},{"value":"/         });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45194,"byte_end":45209,"line_start":1048,"line_end":1048,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45214,"byte_end":45223,"line_start":1049,"line_end":1049,"column_start":5,"column_end":14}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45228,"byte_end":45244,"line_start":1050,"line_end":1050,"column_start":5,"column_end":21}},{"value":"/ // This will likely fail:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45249,"byte_end":45278,"line_start":1051,"line_end":1051,"column_start":5,"column_end":34}},{"value":"/ // assert_eq!(10, *cnt.load_full());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45283,"byte_end":45323,"line_start":1052,"line_end":1052,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45328,"byte_end":45335,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45340,"byte_end":45343,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ This will, but it can call the closure multiple times to retry:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45348,"byte_end":45415,"line_start":1055,"line_end":1055,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45420,"byte_end":45423,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45428,"byte_end":45439,"line_start":1057,"line_end":1057,"column_start":5,"column_end":16}},{"value":"/ # extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45444,"byte_end":45472,"line_start":1058,"line_end":1058,"column_start":5,"column_end":33}},{"value":"/ # extern crate crossbeam_utils;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45477,"byte_end":45512,"line_start":1059,"line_end":1059,"column_start":5,"column_end":40}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45517,"byte_end":45522,"line_start":1060,"line_end":1060,"column_start":5,"column_end":10}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45527,"byte_end":45555,"line_start":1061,"line_end":1061,"column_start":5,"column_end":33}},{"value":"/ # use crossbeam_utils::thread;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45560,"byte_end":45594,"line_start":1062,"line_end":1062,"column_start":5,"column_end":39}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45599,"byte_end":45604,"line_start":1063,"line_end":1063,"column_start":5,"column_end":10}},{"value":"/ let cnt = ArcSwap::from_pointee(0);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45609,"byte_end":45648,"line_start":1064,"line_end":1064,"column_start":5,"column_end":44}},{"value":"/ thread::scope(|scope| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45653,"byte_end":45680,"line_start":1065,"line_end":1065,"column_start":5,"column_end":32}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45685,"byte_end":45709,"line_start":1066,"line_end":1066,"column_start":5,"column_end":29}},{"value":"/         scope.spawn(|_| cnt.rcu(|inner| **inner + 1));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45714,"byte_end":45772,"line_start":1067,"line_end":1067,"column_start":5,"column_end":63}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45777,"byte_end":45786,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}},{"value":"/ }).unwrap();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45791,"byte_end":45807,"line_start":1069,"line_end":1069,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(10, *cnt.load_full());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45812,"byte_end":45849,"line_start":1070,"line_end":1070,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45854,"byte_end":45861,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45866,"byte_end":45869,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Due to the retries, you might want to perform all the expensive operations *before* the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45874,"byte_end":45965,"line_start":1073,"line_end":1073,"column_start":5,"column_end":96}},{"value":"/ rcu. As an example, if there's a cache of some computations as a map, and the map is cheap","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":45970,"byte_end":46064,"line_start":1074,"line_end":1074,"column_start":5,"column_end":99}},{"value":"/ to clone but the computations are not, you could do something like this:","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46069,"byte_end":46145,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46150,"byte_end":46153,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46158,"byte_end":46169,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}},{"value":"/ # extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46174,"byte_end":46202,"line_start":1078,"line_end":1078,"column_start":5,"column_end":33}},{"value":"/ # extern crate crossbeam_utils;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46207,"byte_end":46242,"line_start":1079,"line_end":1079,"column_start":5,"column_end":40}},{"value":"/ # extern crate once_cell;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46247,"byte_end":46276,"line_start":1080,"line_end":1080,"column_start":5,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46281,"byte_end":46286,"line_start":1081,"line_end":1081,"column_start":5,"column_end":10}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46291,"byte_end":46327,"line_start":1082,"line_end":1082,"column_start":5,"column_end":41}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46332,"byte_end":46337,"line_start":1083,"line_end":1083,"column_start":5,"column_end":10}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46342,"byte_end":46370,"line_start":1084,"line_end":1084,"column_start":5,"column_end":33}},{"value":"/ # use once_cell::sync::Lazy;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46375,"byte_end":46407,"line_start":1085,"line_end":1085,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46412,"byte_end":46417,"line_start":1086,"line_end":1086,"column_start":5,"column_end":10}},{"value":"/ fn expensive_computation(x: usize) -> usize {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46422,"byte_end":46471,"line_start":1087,"line_end":1087,"column_start":5,"column_end":54}},{"value":"/     x * 2 // Let's pretend multiplication is *really expensive expensive*","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46476,"byte_end":46553,"line_start":1088,"line_end":1088,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46558,"byte_end":46563,"line_start":1089,"line_end":1089,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46568,"byte_end":46571,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ type Cache = HashMap<usize, usize>;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46576,"byte_end":46615,"line_start":1091,"line_end":1091,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46620,"byte_end":46623,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ static CACHE: Lazy<ArcSwap<Cache>> = Lazy::new(|| ArcSwap::default());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46628,"byte_end":46702,"line_start":1093,"line_end":1093,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46707,"byte_end":46710,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ fn cached_computation(x: usize) -> usize {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46715,"byte_end":46761,"line_start":1095,"line_end":1095,"column_start":5,"column_end":51}},{"value":"/     let cache = CACHE.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46766,"byte_end":46799,"line_start":1096,"line_end":1096,"column_start":5,"column_end":38}},{"value":"/     if let Some(result) = cache.get(&x) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46804,"byte_end":46849,"line_start":1097,"line_end":1097,"column_start":5,"column_end":50}},{"value":"/         return *result;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46854,"byte_end":46881,"line_start":1098,"line_end":1098,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46886,"byte_end":46895,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}},{"value":"/     // Not in cache. Compute and store.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46900,"byte_end":46943,"line_start":1100,"line_end":1100,"column_start":5,"column_end":48}},{"value":"/     // The expensive computation goes outside, so it is not retried.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":46948,"byte_end":47020,"line_start":1101,"line_end":1101,"column_start":5,"column_end":77}},{"value":"/     let result = expensive_computation(x);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47025,"byte_end":47071,"line_start":1102,"line_end":1102,"column_start":5,"column_end":51}},{"value":"/     CACHE.rcu(|cache| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47076,"byte_end":47103,"line_start":1103,"line_end":1103,"column_start":5,"column_end":32}},{"value":"/         // The cheaper clone of the cache can be retried if need be.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47108,"byte_end":47180,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/         let mut cache = HashMap::clone(&cache);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47185,"byte_end":47236,"line_start":1105,"line_end":1105,"column_start":5,"column_end":56}},{"value":"/         cache.insert(x, result);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47241,"byte_end":47277,"line_start":1106,"line_end":1106,"column_start":5,"column_end":41}},{"value":"/         cache","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47282,"byte_end":47299,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47304,"byte_end":47315,"line_start":1108,"line_end":1108,"column_start":5,"column_end":16}},{"value":"/     result","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47320,"byte_end":47334,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47339,"byte_end":47344,"line_start":1110,"line_end":1110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47349,"byte_end":47352,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(42, cached_computation(21));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47357,"byte_end":47400,"line_start":1112,"line_end":1112,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(42, cached_computation(21));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47405,"byte_end":47448,"line_start":1113,"line_end":1113,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47453,"byte_end":47460,"line_start":1114,"line_end":1114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47465,"byte_end":47468,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # The cost of cloning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47473,"byte_end":47498,"line_start":1116,"line_end":1116,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47503,"byte_end":47506,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ Depending on the size of cache above, the cloning might not be as cheap. You can however","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47511,"byte_end":47603,"line_start":1118,"line_end":1118,"column_start":5,"column_end":97}},{"value":"/ use persistent data structures ‒ each modification creates a new data structure, but it","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47608,"byte_end":47701,"line_start":1119,"line_end":1119,"column_start":5,"column_end":96}},{"value":"/ shares most of the data with the old one (which is usually accomplished by using `Arc`s","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47706,"byte_end":47797,"line_start":1120,"line_end":1120,"column_start":5,"column_end":96}},{"value":"/ inside to share the unchanged values). Something like","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47802,"byte_end":47859,"line_start":1121,"line_end":1121,"column_start":5,"column_end":62}},{"value":"/ [`rpds`](https://crates.io/crates/rpds) or [`im`](https://crates.io/crates/im) might do","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47864,"byte_end":47955,"line_start":1122,"line_end":1122,"column_start":5,"column_end":96}},{"value":"/ what you need.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":47960,"byte_end":47978,"line_start":1123,"line_end":1123,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50351,"byte_end":50354,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"map","qualname":"<ArcSwapAny<T, S>>::map","value":"fn <I, R, F> (&self, f: F) -> Map<&Self, I, F>","parent":null,"children":[],"decl_id":null,"docs":" Provides an access to an up to date projection of the carried data.","sig":null,"attributes":[{"value":"/ Provides an access to an up to date projection of the carried data.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48434,"byte_end":48505,"line_start":1142,"line_end":1142,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48510,"byte_end":48513,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Motivation","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48518,"byte_end":48534,"line_start":1144,"line_end":1144,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48539,"byte_end":48542,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Sometimes, an application consists of components. Each component has its own configuration","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48547,"byte_end":48641,"line_start":1146,"line_end":1146,"column_start":5,"column_end":99}},{"value":"/ structure. The whole configuration contains all the smaller config parts.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48646,"byte_end":48723,"line_start":1147,"line_end":1147,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48728,"byte_end":48731,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ For the sake of separation and abstraction, it is not desirable to pass the whole","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48736,"byte_end":48821,"line_start":1149,"line_end":1149,"column_start":5,"column_end":90}},{"value":"/ configuration to each of the components. This allows the component to take only access to","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48826,"byte_end":48919,"line_start":1150,"line_end":1150,"column_start":5,"column_end":98}},{"value":"/ its own part.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48924,"byte_end":48941,"line_start":1151,"line_end":1151,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48946,"byte_end":48949,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ # Lifetimes & flexibility","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48954,"byte_end":48983,"line_start":1153,"line_end":1153,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48988,"byte_end":48991,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ This method is not the most flexible way, as the returned type borrows into the `ArcSwap`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":48996,"byte_end":49090,"line_start":1155,"line_end":1155,"column_start":5,"column_end":99}},{"value":"/ To provide access into eg. `Arc<ArcSwap<T>>`, you can create the [`Map`] type directly.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49095,"byte_end":49186,"line_start":1156,"line_end":1156,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49191,"byte_end":49194,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ # Performance","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49199,"byte_end":49216,"line_start":1158,"line_end":1158,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49221,"byte_end":49224,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ As the provided function is called on each load from the shared storage, it should","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49229,"byte_end":49315,"line_start":1160,"line_end":1160,"column_start":5,"column_end":91}},{"value":"/ generally be cheap. It is expected this will usually be just referencing of a field inside","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49320,"byte_end":49414,"line_start":1161,"line_end":1161,"column_start":5,"column_end":99}},{"value":"/ the structure.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49419,"byte_end":49437,"line_start":1162,"line_end":1162,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49442,"byte_end":49445,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49450,"byte_end":49464,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49469,"byte_end":49472,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49477,"byte_end":49488,"line_start":1166,"line_end":1166,"column_start":5,"column_end":16}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49493,"byte_end":49519,"line_start":1167,"line_end":1167,"column_start":5,"column_end":31}},{"value":"/ extern crate crossbeam_utils;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49524,"byte_end":49557,"line_start":1168,"line_end":1168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49562,"byte_end":49565,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49570,"byte_end":49593,"line_start":1170,"line_end":1170,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49598,"byte_end":49601,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ use arc_swap::ArcSwap;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49606,"byte_end":49632,"line_start":1172,"line_end":1172,"column_start":5,"column_end":31}},{"value":"/ use arc_swap::access::Access;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49637,"byte_end":49670,"line_start":1173,"line_end":1173,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49675,"byte_end":49678,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ struct Cfg {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49683,"byte_end":49699,"line_start":1175,"line_end":1175,"column_start":5,"column_end":21}},{"value":"/     value: usize,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49704,"byte_end":49725,"line_start":1176,"line_end":1176,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49730,"byte_end":49735,"line_start":1177,"line_end":1177,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49740,"byte_end":49743,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ fn print_many_times<V: Access<usize>>(value: V) {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49748,"byte_end":49801,"line_start":1179,"line_end":1179,"column_start":5,"column_end":58}},{"value":"/     for _ in 0..25 {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49806,"byte_end":49830,"line_start":1180,"line_end":1180,"column_start":5,"column_end":29}},{"value":"/         let value = value.load();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49835,"byte_end":49872,"line_start":1181,"line_end":1181,"column_start":5,"column_end":42}},{"value":"/         println!(\"{}\", *value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49877,"byte_end":49912,"line_start":1182,"line_end":1182,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49917,"byte_end":49926,"line_start":1183,"line_end":1183,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49931,"byte_end":49936,"line_start":1184,"line_end":1184,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49941,"byte_end":49944,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ let shared = ArcSwap::from_pointee(Cfg { value: 0 });","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":49949,"byte_end":50006,"line_start":1186,"line_end":1186,"column_start":5,"column_end":62}},{"value":"/ let mapped = shared.map(|c: &Cfg| &c.value);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50011,"byte_end":50059,"line_start":1187,"line_end":1187,"column_start":5,"column_end":53}},{"value":"/ crossbeam_utils::thread::scope(|s| {","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50064,"byte_end":50104,"line_start":1188,"line_end":1188,"column_start":5,"column_end":45}},{"value":"/     // Will print some zeroes and some twos","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50109,"byte_end":50156,"line_start":1189,"line_end":1189,"column_start":5,"column_end":52}},{"value":"/     s.spawn(|_| print_many_times(mapped));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50161,"byte_end":50207,"line_start":1190,"line_end":1190,"column_start":5,"column_end":51}},{"value":"/     s.spawn(|_| shared.store(Arc::new(Cfg { value: 2 })));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50212,"byte_end":50274,"line_start":1191,"line_end":1191,"column_start":5,"column_end":67}},{"value":"/ }).expect(\"Something panicked in a thread\");","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50279,"byte_end":50327,"line_start":1192,"line_end":1192,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50332,"byte_end":50339,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":421},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50656,"byte_end":50663,"line_start":1207,"line_end":1207,"column_start":10,"column_end":17},"name":"ArcSwap","qualname":"::ArcSwap","value":"ArcSwapAny<Arc<T>>","parent":null,"children":[],"decl_id":null,"docs":" An atomic storage for `Arc`.","sig":null,"attributes":[{"value":"/ An atomic storage for `Arc`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50498,"byte_end":50530,"line_start":1203,"line_end":1203,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50531,"byte_end":50534,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ This is a type alias only. Most of its methods are described on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50535,"byte_end":50602,"line_start":1205,"line_end":1205,"column_start":1,"column_end":68}},{"value":"/ [`ArcSwapAny`](struct.ArcSwapAny.html).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50603,"byte_end":50646,"line_start":1206,"line_end":1206,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50888,"byte_end":50900,"line_start":1213,"line_end":1213,"column_start":12,"column_end":24},"name":"from_pointee","qualname":"<ArcSwapAny<Arc<T>, S>>::from_pointee","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor directly from the pointed-to value.","sig":null,"attributes":[{"value":"/ A convenience constructor directly from the pointed-to value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50742,"byte_end":50807,"line_start":1210,"line_end":1210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50812,"byte_end":50815,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Direct equivalent for `ArcSwap::new(Arc::new(val))`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50820,"byte_end":50876,"line_start":1212,"line_end":1212,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51999,"byte_end":52009,"line_start":1234,"line_end":1234,"column_start":12,"column_end":22},"name":"rcu_unwrap","qualname":"<ArcSwapAny<Arc<T>, S>>::rcu_unwrap","value":"fn <R, F> (&self, mut f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" An [`rcu`](struct.ArcSwapAny.html#method.rcu) which waits to be the sole owner of the\n original value and unwraps it.","sig":null,"attributes":[{"value":"/ An [`rcu`](struct.ArcSwapAny.html#method.rcu) which waits to be the sole owner of the","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50964,"byte_end":51053,"line_start":1217,"line_end":1217,"column_start":5,"column_end":94}},{"value":"/ original value and unwraps it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51058,"byte_end":51092,"line_start":1218,"line_end":1218,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51097,"byte_end":51100,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ This one works the same way as the [`rcu`](struct.ArcSwapAny.html#method.rcu) method, but","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51105,"byte_end":51198,"line_start":1220,"line_end":1220,"column_start":5,"column_end":98}},{"value":"/ works on the inner type instead of `Arc`. After replacing the original, it waits until","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51203,"byte_end":51293,"line_start":1221,"line_end":1221,"column_start":5,"column_end":95}},{"value":"/ there are no other owners of the arc and unwraps it.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51298,"byte_end":51354,"line_start":1222,"line_end":1222,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51359,"byte_end":51362,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Possible use case might be an RCU with a structure that is rather slow to drop ‒ if it was","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51367,"byte_end":51463,"line_start":1224,"line_end":1224,"column_start":5,"column_end":99}},{"value":"/ left to random reader (the last one to hold the old value), it could cause a timeout or","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51468,"byte_end":51559,"line_start":1225,"line_end":1225,"column_start":5,"column_end":96}},{"value":"/ jitter in a query time. With this, the deallocation is done in the updater thread,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51564,"byte_end":51650,"line_start":1226,"line_end":1226,"column_start":5,"column_end":91}},{"value":"/ therefore outside of the hot path.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51655,"byte_end":51693,"line_start":1227,"line_end":1227,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51698,"byte_end":51701,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51706,"byte_end":51719,"line_start":1229,"line_end":1229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51724,"byte_end":51727,"line_start":1230,"line_end":1230,"column_start":5,"column_end":8}},{"value":"/ Note that if you store a copy of the `Arc` somewhere except the `ArcSwap` itself for","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51732,"byte_end":51820,"line_start":1231,"line_end":1231,"column_start":5,"column_end":93}},{"value":"/ extended period of time, this'll busy-wait the whole time. Unless you need the assurance","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51825,"byte_end":51917,"line_start":1232,"line_end":1232,"column_start":5,"column_end":97}},{"value":"/ the `Arc` is deconstructed here, prefer [`rcu`](#method.rcu).","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":51922,"byte_end":51987,"line_start":1233,"line_end":1233,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":431},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53138,"byte_end":53151,"line_start":1272,"line_end":1272,"column_start":10,"column_end":23},"name":"ArcSwapOption","qualname":"::ArcSwapOption","value":"ArcSwapAny<Option<Arc<T>>>","parent":null,"children":[],"decl_id":null,"docs":" An atomic storage for `Option<Arc>`.","sig":null,"attributes":[{"value":"/ An atomic storage for `Option<Arc>`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52412,"byte_end":52452,"line_start":1252,"line_end":1252,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52453,"byte_end":52456,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ This is very similar to [`ArcSwap`](type.ArcSwap.html), but allows storing NULL values, which","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52457,"byte_end":52554,"line_start":1254,"line_end":1254,"column_start":1,"column_end":98}},{"value":"/ is useful in some situations.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52555,"byte_end":52588,"line_start":1255,"line_end":1255,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52589,"byte_end":52592,"line_start":1256,"line_end":1256,"column_start":1,"column_end":4}},{"value":"/ This is a type alias only. Most of the methods are described on","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52593,"byte_end":52660,"line_start":1257,"line_end":1257,"column_start":1,"column_end":68}},{"value":"/ [`ArcSwapAny`](struct.ArcSwapAny.html). Even though the examples there often use `ArcSwap`,","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52661,"byte_end":52756,"line_start":1258,"line_end":1258,"column_start":1,"column_end":96}},{"value":"/ they are applicable to `ArcSwapOption` with appropriate changes.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52757,"byte_end":52825,"line_start":1259,"line_end":1259,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52826,"byte_end":52829,"line_start":1260,"line_end":1260,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52830,"byte_end":52844,"line_start":1261,"line_end":1261,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52845,"byte_end":52848,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52849,"byte_end":52856,"line_start":1263,"line_end":1263,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52857,"byte_end":52880,"line_start":1264,"line_end":1264,"column_start":1,"column_end":24}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52881,"byte_end":52913,"line_start":1265,"line_end":1265,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52914,"byte_end":52917,"line_start":1266,"line_end":1266,"column_start":1,"column_end":4}},{"value":"/ let shared = ArcSwapOption::from(None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52918,"byte_end":52961,"line_start":1267,"line_end":1267,"column_start":1,"column_end":44}},{"value":"/ assert!(shared.load_full().is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":52962,"byte_end":53004,"line_start":1268,"line_end":1268,"column_start":1,"column_end":43}},{"value":"/ assert!(shared.swap(Some(Arc::new(42))).is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53005,"byte_end":53060,"line_start":1269,"line_end":1269,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(42, **shared.load_full().as_ref().unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53061,"byte_end":53120,"line_start":1270,"line_end":1270,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53121,"byte_end":53128,"line_start":1271,"line_end":1271,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53750,"byte_end":53762,"line_start":1289,"line_end":1289,"column_start":12,"column_end":24},"name":"from_pointee","qualname":"<ArcSwapAny<Option<Arc<T>>, S>>::from_pointee","value":"fn <V> (val: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor directly from a pointed-to value.","sig":null,"attributes":[{"value":"/ A convenience constructor directly from a pointed-to value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53246,"byte_end":53309,"line_start":1275,"line_end":1275,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53314,"byte_end":53317,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ This just allocates the `Arc` under the hood.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53322,"byte_end":53371,"line_start":1277,"line_end":1277,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53376,"byte_end":53379,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53384,"byte_end":53398,"line_start":1279,"line_end":1279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53403,"byte_end":53406,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53411,"byte_end":53422,"line_start":1281,"line_end":1281,"column_start":5,"column_end":16}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53427,"byte_end":53459,"line_start":1282,"line_end":1282,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53464,"byte_end":53467,"line_start":1283,"line_end":1283,"column_start":5,"column_end":8}},{"value":"/ let empty: ArcSwapOption<usize> = ArcSwapOption::from_pointee(None);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53472,"byte_end":53544,"line_start":1284,"line_end":1284,"column_start":5,"column_end":77}},{"value":"/ assert!(empty.load().is_none());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53549,"byte_end":53585,"line_start":1285,"line_end":1285,"column_start":5,"column_end":41}},{"value":"/ let non_empty: ArcSwapOption<usize> = ArcSwapOption::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53590,"byte_end":53664,"line_start":1286,"line_end":1286,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(42, **non_empty.load().as_ref().unwrap());","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53669,"byte_end":53726,"line_start":1287,"line_end":1287,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53731,"byte_end":53738,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53983,"byte_end":53988,"line_start":1296,"line_end":1296,"column_start":12,"column_end":17},"name":"empty","qualname":"<ArcSwapAny<Option<Arc<T>>, S>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor for an empty value.","sig":null,"attributes":[{"value":"/ A convenience constructor for an empty value.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53856,"byte_end":53905,"line_start":1293,"line_end":1293,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53910,"byte_end":53913,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `ArcSwapOption::new(None)`.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53918,"byte_end":53971,"line_start":1295,"line_end":1295,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":439},"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54926,"byte_end":54944,"line_start":1322,"line_end":1322,"column_start":10,"column_end":28},"name":"IndependentArcSwap","qualname":"::IndependentArcSwap","value":"ArcSwapAny<Arc<T>, PrivateUnsharded>","parent":null,"children":[],"decl_id":null,"docs":" An atomic storage that doesn't share the internal generation locks with others.","sig":null,"attributes":[{"value":"/ An atomic storage that doesn't share the internal generation locks with others.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54034,"byte_end":54117,"line_start":1301,"line_end":1301,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54118,"byte_end":54121,"line_start":1302,"line_end":1302,"column_start":1,"column_end":4}},{"value":"/ This makes it bigger and it also might suffer contention (on the HW level) if used from many","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54122,"byte_end":54218,"line_start":1303,"line_end":1303,"column_start":1,"column_end":97}},{"value":"/ threads at once. But using [`load_signal_safe`](struct.ArcSwapAny.html#method.load_signal_safe)","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54219,"byte_end":54318,"line_start":1304,"line_end":1304,"column_start":1,"column_end":100}},{"value":"/ will not block writes on other instances.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54319,"byte_end":54364,"line_start":1305,"line_end":1305,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54365,"byte_end":54368,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54369,"byte_end":54380,"line_start":1307,"line_end":1307,"column_start":1,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54381,"byte_end":54406,"line_start":1308,"line_end":1308,"column_start":1,"column_end":26}},{"value":"/ # use arc_swap::{ArcSwap, IndependentArcSwap};","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54407,"byte_end":54457,"line_start":1309,"line_end":1309,"column_start":1,"column_end":51}},{"value":"/ // This one shares locks with others.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54458,"byte_end":54499,"line_start":1310,"line_end":1310,"column_start":1,"column_end":42}},{"value":"/ let shared = ArcSwap::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54500,"byte_end":54543,"line_start":1311,"line_end":1311,"column_start":1,"column_end":44}},{"value":"/ // But this one has an independent lock.","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54544,"byte_end":54588,"line_start":1312,"line_end":1312,"column_start":1,"column_end":45}},{"value":"/ let independent = IndependentArcSwap::from_pointee(42);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54589,"byte_end":54648,"line_start":1313,"line_end":1313,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54649,"byte_end":54652,"line_start":1314,"line_end":1314,"column_start":1,"column_end":4}},{"value":"/ // This'll hold a lock so any writers there wouldn't complete","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54653,"byte_end":54718,"line_start":1315,"line_end":1315,"column_start":1,"column_end":66}},{"value":"/ let l = independent.load_signal_safe();","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54719,"byte_end":54762,"line_start":1316,"line_end":1316,"column_start":1,"column_end":44}},{"value":"/ // But the lock doesn't influence the shared one, so this goes through just fine","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54763,"byte_end":54847,"line_start":1317,"line_end":1317,"column_start":1,"column_end":85}},{"value":"/ shared.store(Arc::new(43));","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54848,"byte_end":54879,"line_start":1318,"line_end":1318,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54880,"byte_end":54883,"line_start":1319,"line_end":1319,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(42, **l);","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54884,"byte_end":54908,"line_start":1320,"line_end":1320,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":54909,"byte_end":54916,"line_start":1321,"line_end":1321,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77995,"byte_end":77996,"line_start":112,"line_end":112,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78145,"byte_end":78155,"line_start":119,"line_end":119,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78444,"byte_end":78455,"line_start":133,"line_end":133,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78593,"byte_end":78603,"line_start":140,"line_end":140,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78751,"byte_end":78762,"line_start":147,"line_end":147,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78899,"byte_end":78909,"line_start":154,"line_end":154,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79233,"byte_end":79241,"line_start":166,"line_end":166,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80242,"byte_end":80243,"line_start":204,"line_end":204,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80850,"byte_end":80858,"line_start":227,"line_end":227,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80941,"byte_end":80949,"line_start":234,"line_end":234,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81026,"byte_end":81034,"line_start":241,"line_end":241,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81965,"byte_end":81968,"line_start":266,"line_end":266,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82826,"byte_end":82829,"line_start":290,"line_end":290,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83405,"byte_end":83418,"line_start":313,"line_end":313,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":84014,"byte_end":84022,"line_start":331,"line_end":331,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":88191,"byte_end":88196,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91090,"byte_end":91095,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95214,"byte_end":95219,"line_start":195,"line_end":195,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95450,"byte_end":95455,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95979,"byte_end":95987,"line_start":227,"line_end":227,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102132,"byte_end":102136,"line_start":12,"line_end":12,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102448,"byte_end":102452,"line_start":30,"line_end":30,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102627,"byte_end":102631,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":105189,"byte_end":105197,"line_start":102,"line_end":102,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":106456,"byte_end":106460,"line_start":140,"line_end":140,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113702,"byte_end":113707,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116540,"byte_end":116546,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118281,"byte_end":118297,"line_start":194,"line_end":194,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119715,"byte_end":119729,"line_start":242,"line_end":242,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125302,"byte_end":125305,"line_start":87,"line_end":87,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125608,"byte_end":125610,"line_start":100,"line_end":100,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125916,"byte_end":125922,"line_start":113,"line_end":113,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":20807,"byte_end":20814,"line_start":415,"line_end":415,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22017,"byte_end":22024,"line_start":445,"line_end":445,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22546,"byte_end":22556,"line_start":463,"line_end":463,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23151,"byte_end":23156,"line_start":482,"line_end":482,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25751,"byte_end":25756,"line_start":551,"line_end":551,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25903,"byte_end":25908,"line_start":559,"line_end":559,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":26065,"byte_end":26070,"line_start":565,"line_end":565,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":26214,"byte_end":26219,"line_start":571,"line_end":571,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":30396,"byte_end":30406,"line_start":682,"line_end":682,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":30905,"byte_end":30915,"line_start":696,"line_end":696,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31202,"byte_end":31212,"line_start":706,"line_end":706,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31331,"byte_end":31341,"line_start":712,"line_end":712,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31596,"byte_end":31606,"line_start":724,"line_end":724,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31804,"byte_end":31814,"line_start":733,"line_end":733,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31923,"byte_end":31933,"line_start":739,"line_end":739,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50714,"byte_end":50724,"line_start":1209,"line_end":1209,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53210,"byte_end":53220,"line_start":1274,"line_end":1274,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12290,"byte_end":12296,"line_start":253,"line_end":253,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12318,"byte_end":12323,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":120}},{"kind":"Mod","span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":12367,"byte_end":12375,"line_start":258,"line_end":258,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":203}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":77995,"byte_end":77996,"line_start":112,"line_end":112,"column_start":59,"column_end":60},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78145,"byte_end":78155,"line_start":119,"line_end":119,"column_start":47,"column_end":57},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":365},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78444,"byte_end":78455,"line_start":133,"line_end":133,"column_start":19,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":441},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78593,"byte_end":78603,"line_start":140,"line_end":140,"column_start":39,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":365},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78751,"byte_end":78762,"line_start":147,"line_end":147,"column_start":19,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":441},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":78899,"byte_end":78909,"line_start":154,"line_end":154,"column_start":39,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":365},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":79233,"byte_end":79241,"line_start":166,"line_end":166,"column_start":27,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80242,"byte_end":80243,"line_start":204,"line_end":204,"column_start":29,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":59},"to":{"krate":0,"index":54}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80850,"byte_end":80858,"line_start":227,"line_end":227,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":80941,"byte_end":80949,"line_start":234,"line_end":234,"column_start":28,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":1864}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81026,"byte_end":81034,"line_start":241,"line_end":241,"column_start":22,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":448},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":81965,"byte_end":81968,"line_start":266,"line_end":266,"column_start":15,"column_end":18},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":82826,"byte_end":82829,"line_start":290,"line_end":290,"column_start":32,"column_end":35},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":464},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":83405,"byte_end":83418,"line_start":313,"line_end":313,"column_start":19,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/access.rs","byte_start":84014,"byte_end":84022,"line_start":331,"line_end":331,"column_start":30,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":522},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/as_raw.rs","byte_start":88191,"byte_end":88196,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":332},"to":{"krate":0,"index":99}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":91090,"byte_end":91095,"line_start":79,"line_end":79,"column_start":15,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95214,"byte_end":95219,"line_start":195,"line_end":195,"column_start":37,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":559},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95450,"byte_end":95455,"line_start":206,"line_end":206,"column_start":27,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":559},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/cache.rs","byte_start":95979,"byte_end":95987,"line_start":227,"line_end":227,"column_start":35,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":572},"to":{"krate":0,"index":126}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102132,"byte_end":102136,"line_start":12,"line_end":12,"column_start":18,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":169},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102448,"byte_end":102452,"line_start":30,"line_end":30,"column_start":18,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":174},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":102627,"byte_end":102631,"line_start":40,"line_end":40,"column_start":6,"column_end":10},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":105189,"byte_end":105197,"line_start":102,"line_end":102,"column_start":15,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/debt.rs","byte_start":106456,"byte_end":106460,"line_start":140,"line_end":140,"column_start":6,"column_end":10},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":113702,"byte_end":113707,"line_start":50,"line_end":50,"column_start":6,"column_end":11},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":114462,"byte_end":114469,"line_start":67,"line_end":67,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":1843},"to":{"krate":0,"index":213}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":116540,"byte_end":116546,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":608},"to":{"krate":0,"index":213}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":118281,"byte_end":118297,"line_start":194,"line_end":194,"column_start":29,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":213}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/gen_lock.rs","byte_start":119715,"byte_end":119729,"line_start":242,"line_end":242,"column_start":58,"column_end":72},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":213}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":123300,"byte_end":123305,"line_start":37,"line_end":37,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1562},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125302,"byte_end":125305,"line_start":87,"line_end":87,"column_start":27,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125608,"byte_end":125610,"line_start":100,"line_end":100,"column_start":27,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":2760},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/ref_cnt.rs","byte_start":125916,"byte_end":125922,"line_start":113,"line_end":113,"column_start":35,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":2,"index":29099},"to":{"krate":0,"index":250}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":20807,"byte_end":20814,"line_start":415,"line_end":415,"column_start":10,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22017,"byte_end":22024,"line_start":445,"line_end":445,"column_start":19,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":308},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":22546,"byte_end":22556,"line_start":463,"line_end":463,"column_start":42,"column_end":52},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":23151,"byte_end":23156,"line_start":482,"line_end":482,"column_start":21,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25751,"byte_end":25756,"line_start":551,"line_end":551,"column_start":31,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":25903,"byte_end":25908,"line_start":559,"line_end":559,"column_start":39,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":26065,"byte_end":26070,"line_start":565,"line_end":565,"column_start":43,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":26214,"byte_end":26219,"line_start":571,"line_end":571,"column_start":30,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":30396,"byte_end":30406,"line_start":682,"line_end":682,"column_start":45,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":30905,"byte_end":30915,"line_start":696,"line_end":696,"column_start":42,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31202,"byte_end":31212,"line_start":706,"line_end":706,"column_start":43,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":1562}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31331,"byte_end":31341,"line_start":712,"line_end":712,"column_start":35,"column_end":45},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31596,"byte_end":31606,"line_start":724,"line_end":724,"column_start":37,"column_end":47},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31804,"byte_end":31814,"line_start":733,"line_end":733,"column_start":55,"column_end":65},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":365},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":31923,"byte_end":31933,"line_start":739,"line_end":739,"column_start":33,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":50714,"byte_end":50724,"line_start":1209,"line_end":1209,"column_start":25,"column_end":35},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/niharika/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.4.5/src/lib.rs","byte_start":53210,"byte_end":53220,"line_start":1274,"line_end":1274,"column_start":25,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":365},"to":{"krate":4294967295,"index":4294967295}}]}